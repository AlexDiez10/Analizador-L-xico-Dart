
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOLEAN BOOL_TYPE CLASS COMA COMMENT CONST_TYPE DECREMENT_VAR DIVIDE DIVIDE_ASSIGN DO DOC_COMMENT DOS_PUNTOS DOT DOUBLE DOUBLE_TYPE ELSE EQUALITY FINAL_TYPE FOR GREATER_EQ_THAN GREATER_THAN IF IMPORT IN INCREMENT_VAR INEQUALITY INT INT_TYPE LBRACKETS LESS_EQ_THAN LESS_THAN LIST LKEY LPAREN MAP MINUS MINUS_ASSIGN MODULO MODULO_ASSIGN NOT OR PLUS PLUS_ASSIGN PRINT RBRACKETS READLINESYNC RETURN RKEY RPAREN SEMICOLON SET STDIN STRING STRING_TYPE TIMES TIMES_ASSIGN VARIABLE VAR_TYPE VOID WHILEprograma : sentencias\n                | sentencias programasentencias : asignar_variable\n                  | cambiar_variable\n                  | impresion\n                  | condicional\n                  | funcion\n                  | retorno\n                  | while\n                  | do_while\n                  | for\n                  | return\n                  | class\n                  | importfuncion : tipo_dato VARIABLE LPAREN parametros RPAREN LKEY programa RKEY\n                | tipo_dato VARIABLE LPAREN RPAREN LKEY programa RKEYasignar_variable : tipo_dato VARIABLE asignador expresion SEMICOLON\n                    | tipo_dato VARIABLE SEMICOLONcambiar_variable : VARIABLE modificador SEMICOLON\n                        | VARIABLE asignador expresion SEMICOLONmodificador : INCREMENT_VAR\n                    | DECREMENT_VARasignador : ASSIGN\n                | PLUS_ASSIGN\n                | MINUS_ASSIGN\n                | TIMES_ASSIGN\n                | DIVIDE_ASSIGN\n                | MODULO_ASSIGNexpresion : operacion\n                    | comparacion\n                    | list\n                    | diccionario\n                    | set\n                    | inputretorno : RETURN SEMICOLON\n                | RETURN operacion SEMICOLONimport : IMPORT STRING SEMICOLONimpresion : PRINT LPAREN operacion RPAREN SEMICOLON\n                 | PRINT LPAREN comparacion_logica RPAREN SEMICOLON\n                 | PRINT LPAREN RPAREN SEMICOLONinput : STDIN DOT READLINESYNC LPAREN RPARENelemento : INT\n            | DOUBLE\n            | STRING\n            | BOOLEAN\n            | VARIABLE\n            | VARIABLE LPAREN element_list RPARENcomparacion : operacion comparador operacioncomparacion_logica : comparacion\n                          | comparacion operador_logico comparacion_logicaoperador_logico : AND\n                        | OR\n                        | NOTcomparador : EQUALITY\n                    | INEQUALITY\n                    | GREATER_THAN\n                    | LESS_THAN\n                    | GREATER_EQ_THAN\n                    | LESS_EQ_THANoperacion : elemento\n                | elemento operador operacionoperador : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MODULOlist : LBRACKETS element_list RBRACKETS\n            | LBRACKETS RBRACKETSelement_list : elemento\n                    | elemento COMA element_listtipo_dato : VOID \n             | FINAL_TYPE\n             | CONST_TYPE\n             | VAR_TYPE\n             | INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | BOOL_TYPE\n             | LIST LESS_THAN tipo_coleccion GREATER_THAN\n             | MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN\n             | SET LESS_THAN tipo_coleccion GREATER_THANtipo_coleccion : INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | FINAL_TYPE\n             | CONST_TYPE\n             | VAR_TYPE\n             | BOOL_TYPEfor  : FOR LPAREN tipo_dato VARIABLE ASSIGN elemento SEMICOLON comparacion_logica SEMICOLON VARIABLE INCREMENT_VAR RPAREN LKEY sentencias RKEY\n            | FOR LPAREN tipo_dato VARIABLE IN VARIABLE RPAREN LKEY sentencias RKEY\n            | FOR LPAREN tipo_dato VARIABLE  LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY sentencias RKEYspecific_instance    : DOS_PUNTOS VARIABLE\n                            | DOS_PUNTOS VARIABLE COMA specific_instancewhile : WHILE LPAREN comparacion_logica RPAREN LKEY programa RKEYdo_while : DO LKEY programa RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLONdiccionario : LKEY key_element_list RKEY\n                    | LKEY RKEYset : LKEY element_list RKEY\n           | LKEY RKEYlitset : SET LESS_THAN tipo_dato GREATER_THANkey_element : elemento DOS_PUNTOS elementokey_element_list : key_element\n                        | key_element COMA key_element_listcondicional : IF LPAREN comparacion_logica RPAREN LKEY programa RKEY bloques_else\n                    | IF LPAREN comparacion_logica RPAREN LKEY programa RKEYbloques_else : ELSE IF LPAREN comparacion_logica RPAREN LKEY programa RKEY bloques_else\n                    | ELSE LKEY programa RKEYparametros : tipo_dato VARIABLE\n                  | tipo_dato VARIABLE COMA parametrosclass : CLASS VARIABLE LKEY class_structure RKEYclass_structure : instances constructor\n                       | instances constructor sentenciasinstances : instance\n                 | instance instancesinstance : FINAL_TYPE tipo_dato VARIABLE SEMICOLONconstructor : VARIABLE LPAREN element_list RPAREN SEMICOLONreturn : RETURN elemento SEMICOLON'
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,23,25,26,27,28,29,30,31,32,39,42,43,44,45,46,47,48,49,50,58,59,66,67,69,78,79,87,88,89,90,91,92,93,94,95,98,100,112,115,116,117,118,119,120,121,122,133,135,136,137,138,146,147,149,151,152,155,158,161,162,164,165,167,169,172,173,174,175,177,178,181,190,192,196,198,201,203,204,208,211,212,213,216,219,222,223,226,228,229,233,235,236,241,242,243,247,248,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,37,57,61,-71,-72,-73,-74,-75,-76,-77,-78,57,-23,-24,-25,-26,-27,-28,57,57,-35,57,16,57,-18,-19,57,57,-36,-117,57,-62,-63,-64,-65,-66,57,144,-37,153,-20,57,-54,-55,-56,-57,-58,-59,-40,57,-51,-52,-53,176,-113,-79,-81,-17,16,57,57,57,-38,-39,16,16,57,194,-110,16,-114,197,16,57,207,57,-80,-16,-105,-94,57,-115,-15,-104,224,16,16,-95,232,-116,57,-90,-107,16,16,-91,16,-89,-106,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,17,-18,-19,-36,-117,-37,-20,-40,-17,17,-38,-39,17,17,-110,17,17,-16,-105,-94,-15,-104,17,17,-95,-116,-90,-107,17,17,-91,17,-89,-106,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,214,219,222,223,228,233,235,236,241,242,243,247,248,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,18,-18,-19,-36,-117,-37,-20,-40,-17,18,-38,-39,18,18,-110,18,18,-16,-105,-94,-15,-104,221,18,18,-95,-116,-90,-107,18,18,-91,18,-89,-106,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,19,-18,-19,-36,-117,-37,-20,-40,-17,19,-38,-39,19,19,-110,19,19,-16,-105,-94,-15,-104,19,19,-95,-116,-90,-107,19,19,-91,19,-89,-106,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,143,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,20,-18,-19,-36,-117,-37,-20,-40,170,-17,20,-38,-39,20,20,-110,20,20,-16,-105,-94,-15,-104,20,20,-95,-116,-90,-107,20,20,-91,20,-89,-106,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,21,-18,-19,-36,-117,-37,-20,-40,-17,21,-38,-39,21,21,-110,21,21,-16,-105,-94,-15,-104,21,21,-95,-116,-90,-107,21,21,-91,21,-89,-106,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,22,-18,-19,-36,-117,-37,-20,-40,-17,22,-38,-39,22,22,-110,22,22,-16,-105,-94,-15,-104,22,22,-95,-116,-90,-107,22,22,-91,22,-89,-106,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,23,-18,-19,-36,-117,-37,-20,-40,-17,23,-38,-39,23,23,-110,23,23,-16,-105,-94,-15,-104,23,23,-95,-116,-90,-107,23,23,-91,23,-89,-106,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,67,69,87,88,100,115,133,152,155,164,165,167,169,174,175,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,24,-18,-19,-36,-117,-37,-20,-40,-17,24,-38,-39,24,24,-110,24,24,-16,-105,-94,-15,-104,24,24,-95,-116,-90,-107,24,24,-91,24,-89,-106,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,67,68,69,87,88,100,115,133,148,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,25,25,-18,25,-19,-36,-117,-37,-20,-40,25,-17,25,-38,-39,25,25,-110,25,25,25,-16,-105,-94,-15,-104,25,25,-95,-116,-90,-107,25,25,-91,25,-89,-106,]),'FINAL_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,99,100,115,133,147,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,211,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,26,26,105,105,105,-18,26,-19,-36,-117,148,-37,-20,-40,148,26,105,-17,26,-38,-39,26,26,-110,26,26,26,-16,-105,-94,-115,-15,-104,26,26,-95,-116,-90,-107,26,26,-91,26,-89,-106,]),'CONST_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,100,115,133,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,27,27,106,106,106,-18,27,-19,-36,-117,-37,-20,-40,27,106,-17,27,-38,-39,27,27,-110,27,27,27,-16,-105,-94,-15,-104,27,27,-95,-116,-90,-107,27,27,-91,27,-89,-106,]),'VAR_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,100,115,133,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,28,28,107,107,107,-18,28,-19,-36,-117,-37,-20,-40,28,107,-17,28,-38,-39,28,28,-110,28,28,28,-16,-105,-94,-15,-104,28,28,-95,-116,-90,-107,28,28,-91,28,-89,-106,]),'INT_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,100,115,133,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,29,29,102,102,102,-18,29,-19,-36,-117,-37,-20,-40,29,102,-17,29,-38,-39,29,29,-110,29,29,29,-16,-105,-94,-15,-104,29,29,-95,-116,-90,-107,29,29,-91,29,-89,-106,]),'STRING_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,100,115,133,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,30,30,103,103,103,-18,30,-19,-36,-117,-37,-20,-40,30,103,-17,30,-38,-39,30,30,-110,30,30,30,-16,-105,-94,-15,-104,30,30,-95,-116,-90,-107,30,30,-91,30,-89,-106,]),'DOUBLE_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,100,115,133,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,31,31,104,104,104,-18,31,-19,-36,-117,-37,-20,-40,31,104,-17,31,-38,-39,31,31,-110,31,31,31,-16,-105,-94,-15,-104,31,31,-95,-116,-90,-107,31,31,-91,31,-89,-106,]),'BOOL_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,63,64,65,67,68,69,87,88,100,115,133,148,150,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,32,32,108,108,108,-18,32,-19,-36,-117,-37,-20,-40,32,108,-17,32,-38,-39,32,32,-110,32,32,32,-16,-105,-94,-15,-104,32,32,-95,-116,-90,-107,32,32,-91,32,-89,-106,]),'LIST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,67,68,69,87,88,100,115,133,148,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,33,33,-18,33,-19,-36,-117,-37,-20,-40,33,-17,33,-38,-39,33,33,-110,33,33,33,-16,-105,-94,-15,-104,33,33,-95,-116,-90,-107,33,33,-91,33,-89,-106,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,67,68,69,87,88,100,115,133,148,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,34,34,-18,34,-19,-36,-117,-37,-20,-40,34,-17,34,-38,-39,34,34,-110,34,34,34,-16,-105,-94,-15,-104,34,34,-95,-116,-90,-107,34,34,-91,34,-89,-106,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,50,59,60,67,68,69,87,88,100,115,133,148,152,155,164,165,167,169,174,175,180,181,201,203,204,212,213,219,222,223,228,233,235,236,241,242,243,247,248,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,35,35,-18,35,-19,-36,-117,-37,-20,-40,35,-17,35,-38,-39,35,35,-110,35,35,35,-16,-105,-94,-15,-104,35,35,-95,-116,-90,-107,35,35,-91,35,-89,-106,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,36,50,67,69,87,88,100,115,133,152,164,165,174,201,203,204,212,213,223,233,235,242,247,248,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-2,-35,-18,-19,-36,-117,-37,-20,-40,-17,-38,-39,-110,-16,-105,-94,-15,-104,-95,-90,-107,-91,-89,-106,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,13,14,36,50,53,54,55,56,57,67,69,79,87,88,97,100,115,125,126,128,129,130,133,145,152,164,165,168,174,175,182,183,184,186,188,189,195,200,201,203,204,212,213,223,227,228,230,233,235,239,242,244,245,247,248,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-2,-35,-42,-43,-44,-45,-46,-18,-19,127,-36,-117,143,-37,-20,-69,159,160,-102,-69,-40,174,-17,-38,-39,-47,-110,-111,201,-70,-103,-101,203,204,-112,212,-16,-105,-94,-15,-104,-95,233,-116,235,-90,-107,242,-91,246,247,-89,-106,]),'INCREMENT_VAR':([16,232,],[40,237,]),'DECREMENT_VAR':([16,],[41,]),'ASSIGN':([16,37,144,],[42,42,172,]),'PLUS_ASSIGN':([16,37,],[43,43,]),'MINUS_ASSIGN':([16,37,],[44,44,]),'TIMES_ASSIGN':([16,37,],[45,45,]),'DIVIDE_ASSIGN':([16,37,],[46,46,]),'MODULO_ASSIGN':([16,37,],[47,47,]),'LPAREN':([17,18,20,22,37,57,144,163,170,176,221,],[48,49,58,60,68,95,171,187,190,196,229,]),'SEMICOLON':([19,37,38,40,41,51,52,53,54,55,56,57,62,70,71,72,73,74,75,76,77,82,84,111,124,127,132,134,140,156,157,159,160,166,168,193,197,202,215,218,220,],[50,67,69,-21,-22,87,88,-42,-43,-44,-45,-46,100,115,-29,-30,-31,-32,-33,-34,-60,133,-49,152,-68,-97,164,165,-61,-48,-67,-96,-98,-50,-47,208,211,-41,223,226,228,]),'INT':([19,39,42,43,44,45,46,47,48,49,58,66,78,79,89,90,91,92,93,94,95,116,117,118,119,120,121,122,135,136,137,138,158,161,162,172,190,196,208,229,],[53,53,-23,-24,-25,-26,-27,-28,53,53,53,53,53,53,53,-62,-63,-64,-65,-66,53,53,-54,-55,-56,-57,-58,-59,53,-51,-52,-53,53,53,53,53,53,53,53,53,]),'DOUBLE':([19,39,42,43,44,45,46,47,48,49,58,66,78,79,89,90,91,92,93,94,95,116,117,118,119,120,121,122,135,136,137,138,158,161,162,172,190,196,208,229,],[54,54,-23,-24,-25,-26,-27,-28,54,54,54,54,54,54,54,-62,-63,-64,-65,-66,54,54,-54,-55,-56,-57,-58,-59,54,-51,-52,-53,54,54,54,54,54,54,54,54,]),'STRING':([19,24,39,42,43,44,45,46,47,48,49,58,66,78,79,89,90,91,92,93,94,95,116,117,118,119,120,121,122,135,136,137,138,158,161,162,172,190,196,208,229,],[55,62,55,-23,-24,-25,-26,-27,-28,55,55,55,55,55,55,55,-62,-63,-64,-65,-66,55,55,-54,-55,-56,-57,-58,-59,55,-51,-52,-53,55,55,55,55,55,55,55,55,]),'BOOLEAN':([19,39,42,43,44,45,46,47,48,49,58,66,78,79,89,90,91,92,93,94,95,116,117,118,119,120,121,122,135,136,137,138,158,161,162,172,190,196,208,229,],[56,56,-23,-24,-25,-26,-27,-28,56,56,56,56,56,56,56,-62,-63,-64,-65,-66,56,56,-54,-55,-56,-57,-58,-59,56,-51,-52,-53,56,56,56,56,56,56,56,56,]),'LKEY':([21,39,42,43,44,45,46,47,61,66,114,139,142,154,209,214,231,238,240,],[59,79,-23,-24,-25,-26,-27,-28,99,79,155,167,169,181,219,222,236,241,243,]),'LESS_THAN':([33,34,35,53,54,55,56,57,71,77,81,86,140,168,],[63,64,65,-42,-43,-44,-45,-46,120,-60,120,120,-61,-47,]),'LBRACKETS':([39,42,43,44,45,46,47,66,],[78,-23,-24,-25,-26,-27,-28,78,]),'STDIN':([39,42,43,44,45,46,47,66,],[80,-23,-24,-25,-26,-27,-28,80,]),'RPAREN':([48,53,54,55,56,57,68,77,81,83,84,85,96,113,125,140,141,153,156,166,168,183,187,191,194,199,205,207,210,224,225,234,237,],[82,-42,-43,-44,-45,-46,114,-60,132,134,-49,139,142,154,-69,-61,168,-108,-48,-50,-47,-70,202,206,209,-109,215,-92,220,231,-93,238,240,]),'PLUS':([52,53,54,55,56,57,77,168,],[90,-42,-43,-44,-45,-46,90,-47,]),'MINUS':([52,53,54,55,56,57,77,168,],[91,-42,-43,-44,-45,-46,91,-47,]),'TIMES':([52,53,54,55,56,57,77,168,],[92,-42,-43,-44,-45,-46,92,-47,]),'DIVIDE':([52,53,54,55,56,57,77,168,],[93,-42,-43,-44,-45,-46,93,-47,]),'MODULO':([52,53,54,55,56,57,77,168,],[94,-42,-43,-44,-45,-46,94,-47,]),'EQUALITY':([53,54,55,56,57,71,77,81,86,140,168,],[-42,-43,-44,-45,-46,117,-60,117,117,-61,-47,]),'INEQUALITY':([53,54,55,56,57,71,77,81,86,140,168,],[-42,-43,-44,-45,-46,118,-60,118,118,-61,-47,]),'GREATER_THAN':([53,54,55,56,57,71,77,81,86,101,102,103,104,105,106,107,108,110,140,168,179,],[-42,-43,-44,-45,-46,119,-60,119,119,149,-82,-83,-84,-85,-86,-87,-88,151,-61,-47,198,]),'GREATER_EQ_THAN':([53,54,55,56,57,71,77,81,86,140,168,],[-42,-43,-44,-45,-46,121,-60,121,121,-61,-47,]),'LESS_EQ_THAN':([53,54,55,56,57,71,77,81,86,140,168,],[-42,-43,-44,-45,-46,122,-60,122,122,-61,-47,]),'COMA':([53,54,55,56,57,102,103,104,105,106,107,108,109,125,129,130,153,168,186,207,],[-42,-43,-44,-45,-46,-82,-83,-84,-85,-86,-87,-88,150,158,161,158,180,-47,-101,217,]),'RBRACKETS':([53,54,55,56,57,78,123,125,168,183,],[-42,-43,-44,-45,-46,124,157,-69,-47,-70,]),'DOS_PUNTOS':([53,54,55,56,57,130,168,171,185,217,],[-42,-43,-44,-45,-46,162,-47,192,162,192,]),'AND':([53,54,55,56,57,77,84,140,156,168,],[-42,-43,-44,-45,-46,-60,136,-61,-48,-47,]),'OR':([53,54,55,56,57,77,84,140,156,168,],[-42,-43,-44,-45,-46,-60,137,-61,-48,-47,]),'NOT':([53,54,55,56,57,77,84,140,156,168,],[-42,-43,-44,-45,-46,-60,138,-61,-48,-47,]),'DOT':([80,],[131,]),'READLINESYNC':([131,],[163,]),'IN':([144,206,],[173,216,]),'ELSE':([203,246,],[214,214,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,59,155,167,169,181,222,241,],[1,36,97,182,188,189,200,230,244,]),'sentencias':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[2,2,2,2,2,2,195,2,227,2,239,2,245,]),'asignar_variable':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'cambiar_variable':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'impresion':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'condicional':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'funcion':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'retorno':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'do_while':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'for':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'return':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'class':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'import':([0,2,59,155,167,169,175,181,219,222,236,241,243,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'tipo_dato':([0,2,59,60,68,148,155,167,169,175,180,181,219,222,236,241,243,],[15,15,15,98,112,178,15,15,15,15,112,15,15,15,15,15,15,]),'modificador':([16,],[38,]),'asignador':([16,37,],[39,66,]),'operacion':([19,39,48,49,58,66,89,116,135,190,208,229,],[51,71,81,86,86,71,140,156,86,86,86,86,]),'elemento':([19,39,48,49,58,66,78,79,89,95,116,135,158,161,162,172,190,196,208,229,],[52,77,77,77,77,77,125,130,77,125,77,77,125,185,186,193,77,125,77,77,]),'expresion':([39,66,],[70,111,]),'comparacion':([39,48,49,58,66,135,190,208,229,],[72,84,84,84,72,84,84,84,84,]),'list':([39,66,],[73,73,]),'diccionario':([39,66,],[74,74,]),'set':([39,66,],[75,75,]),'input':([39,66,],[76,76,]),'comparacion_logica':([48,49,58,135,190,208,229,],[83,85,96,166,205,218,234,]),'operador':([52,77,],[89,89,]),'tipo_coleccion':([63,64,65,150,],[101,109,110,179,]),'parametros':([68,180,],[113,199,]),'comparador':([71,81,86,],[116,116,116,]),'element_list':([78,79,95,158,196,],[123,128,141,183,210,]),'key_element_list':([79,161,],[126,184,]),'key_element':([79,161,],[129,129,]),'operador_logico':([84,],[135,]),'class_structure':([99,],[145,]),'instances':([99,147,],[146,177,]),'instance':([99,147,],[147,147,]),'constructor':([146,],[175,]),'specific_instance':([171,217,],[191,225,]),'bloques_else':([203,246,],[213,248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','analizador_sintactico.py',5),
  ('programa -> sentencias programa','programa',2,'p_programa','analizador_sintactico.py',6),
  ('sentencias -> asignar_variable','sentencias',1,'p_sentencias','analizador_sintactico.py',10),
  ('sentencias -> cambiar_variable','sentencias',1,'p_sentencias','analizador_sintactico.py',11),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','analizador_sintactico.py',12),
  ('sentencias -> condicional','sentencias',1,'p_sentencias','analizador_sintactico.py',13),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','analizador_sintactico.py',14),
  ('sentencias -> retorno','sentencias',1,'p_sentencias','analizador_sintactico.py',15),
  ('sentencias -> while','sentencias',1,'p_sentencias','analizador_sintactico.py',16),
  ('sentencias -> do_while','sentencias',1,'p_sentencias','analizador_sintactico.py',17),
  ('sentencias -> for','sentencias',1,'p_sentencias','analizador_sintactico.py',18),
  ('sentencias -> return','sentencias',1,'p_sentencias','analizador_sintactico.py',19),
  ('sentencias -> class','sentencias',1,'p_sentencias','analizador_sintactico.py',20),
  ('sentencias -> import','sentencias',1,'p_sentencias','analizador_sintactico.py',21),
  ('funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY programa RKEY','funcion',8,'p_funcion','analizador_sintactico.py',25),
  ('funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY programa RKEY','funcion',7,'p_funcion','analizador_sintactico.py',26),
  ('asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON','asignar_variable',5,'p_asignar_variable','analizador_sintactico.py',30),
  ('asignar_variable -> tipo_dato VARIABLE SEMICOLON','asignar_variable',3,'p_asignar_variable','analizador_sintactico.py',31),
  ('cambiar_variable -> VARIABLE modificador SEMICOLON','cambiar_variable',3,'p_cambiar_variable','analizador_sintactico.py',35),
  ('cambiar_variable -> VARIABLE asignador expresion SEMICOLON','cambiar_variable',4,'p_cambiar_variable','analizador_sintactico.py',36),
  ('modificador -> INCREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',40),
  ('modificador -> DECREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',41),
  ('asignador -> ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',44),
  ('asignador -> PLUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',45),
  ('asignador -> MINUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',46),
  ('asignador -> TIMES_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',47),
  ('asignador -> DIVIDE_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',48),
  ('asignador -> MODULO_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',49),
  ('expresion -> operacion','expresion',1,'p_expresion','analizador_sintactico.py',52),
  ('expresion -> comparacion','expresion',1,'p_expresion','analizador_sintactico.py',53),
  ('expresion -> list','expresion',1,'p_expresion','analizador_sintactico.py',54),
  ('expresion -> diccionario','expresion',1,'p_expresion','analizador_sintactico.py',55),
  ('expresion -> set','expresion',1,'p_expresion','analizador_sintactico.py',56),
  ('expresion -> input','expresion',1,'p_expresion','analizador_sintactico.py',57),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','analizador_sintactico.py',60),
  ('retorno -> RETURN operacion SEMICOLON','retorno',3,'p_retorno','analizador_sintactico.py',61),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizador_sintactico.py',65),
  ('impresion -> PRINT LPAREN operacion RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',69),
  ('impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',70),
  ('impresion -> PRINT LPAREN RPAREN SEMICOLON','impresion',4,'p_impresion','analizador_sintactico.py',71),
  ('input -> STDIN DOT READLINESYNC LPAREN RPAREN','input',5,'p_input','analizador_sintactico.py',75),
  ('elemento -> INT','elemento',1,'p_elemento','analizador_sintactico.py',79),
  ('elemento -> DOUBLE','elemento',1,'p_elemento','analizador_sintactico.py',80),
  ('elemento -> STRING','elemento',1,'p_elemento','analizador_sintactico.py',81),
  ('elemento -> BOOLEAN','elemento',1,'p_elemento','analizador_sintactico.py',82),
  ('elemento -> VARIABLE','elemento',1,'p_elemento','analizador_sintactico.py',83),
  ('elemento -> VARIABLE LPAREN element_list RPAREN','elemento',4,'p_elemento','analizador_sintactico.py',84),
  ('comparacion -> operacion comparador operacion','comparacion',3,'p_comparacion','analizador_sintactico.py',87),
  ('comparacion_logica -> comparacion','comparacion_logica',1,'p_comparacion_logica','analizador_sintactico.py',90),
  ('comparacion_logica -> comparacion operador_logico comparacion_logica','comparacion_logica',3,'p_comparacion_logica','analizador_sintactico.py',91),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','analizador_sintactico.py',94),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','analizador_sintactico.py',95),
  ('operador_logico -> NOT','operador_logico',1,'p_operador_logico','analizador_sintactico.py',96),
  ('comparador -> EQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',99),
  ('comparador -> INEQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',100),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','analizador_sintactico.py',101),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','analizador_sintactico.py',102),
  ('comparador -> GREATER_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',103),
  ('comparador -> LESS_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',104),
  ('operacion -> elemento','operacion',1,'p_operacion','analizador_sintactico.py',107),
  ('operacion -> elemento operador operacion','operacion',3,'p_operacion','analizador_sintactico.py',108),
  ('operador -> PLUS','operador',1,'p_operador','analizador_sintactico.py',111),
  ('operador -> MINUS','operador',1,'p_operador','analizador_sintactico.py',112),
  ('operador -> TIMES','operador',1,'p_operador','analizador_sintactico.py',113),
  ('operador -> DIVIDE','operador',1,'p_operador','analizador_sintactico.py',114),
  ('operador -> MODULO','operador',1,'p_operador','analizador_sintactico.py',115),
  ('list -> LBRACKETS element_list RBRACKETS','list',3,'p_list','analizador_sintactico.py',118),
  ('list -> LBRACKETS RBRACKETS','list',2,'p_list','analizador_sintactico.py',119),
  ('element_list -> elemento','element_list',1,'p_element_list','analizador_sintactico.py',123),
  ('element_list -> elemento COMA element_list','element_list',3,'p_element_list','analizador_sintactico.py',124),
  ('tipo_dato -> VOID','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',127),
  ('tipo_dato -> FINAL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',128),
  ('tipo_dato -> CONST_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',129),
  ('tipo_dato -> VAR_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',130),
  ('tipo_dato -> INT_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',131),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',132),
  ('tipo_dato -> DOUBLE_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',133),
  ('tipo_dato -> BOOL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',134),
  ('tipo_dato -> LIST LESS_THAN tipo_coleccion GREATER_THAN','tipo_dato',4,'p_tipo_dato','analizador_sintactico.py',135),
  ('tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN','tipo_dato',6,'p_tipo_dato','analizador_sintactico.py',136),
  ('tipo_dato -> SET LESS_THAN tipo_coleccion GREATER_THAN','tipo_dato',4,'p_tipo_dato','analizador_sintactico.py',137),
  ('tipo_coleccion -> INT_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',140),
  ('tipo_coleccion -> STRING_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',141),
  ('tipo_coleccion -> DOUBLE_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',142),
  ('tipo_coleccion -> FINAL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',143),
  ('tipo_coleccion -> CONST_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',144),
  ('tipo_coleccion -> VAR_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',145),
  ('tipo_coleccion -> BOOL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',146),
  ('for -> FOR LPAREN tipo_dato VARIABLE ASSIGN elemento SEMICOLON comparacion_logica SEMICOLON VARIABLE INCREMENT_VAR RPAREN LKEY sentencias RKEY','for',15,'p_for','analizador_sintactico.py',149),
  ('for -> FOR LPAREN tipo_dato VARIABLE IN VARIABLE RPAREN LKEY sentencias RKEY','for',10,'p_for','analizador_sintactico.py',150),
  ('for -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY sentencias RKEY','for',13,'p_for','analizador_sintactico.py',151),
  ('specific_instance -> DOS_PUNTOS VARIABLE','specific_instance',2,'p_specific_instance','analizador_sintactico.py',155),
  ('specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance','specific_instance',4,'p_specific_instance','analizador_sintactico.py',156),
  ('while -> WHILE LPAREN comparacion_logica RPAREN LKEY programa RKEY','while',7,'p_while','analizador_sintactico.py',159),
  ('do_while -> DO LKEY programa RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON','do_while',9,'p_do_while','analizador_sintactico.py',163),
  ('diccionario -> LKEY key_element_list RKEY','diccionario',3,'p_diccionario','analizador_sintactico.py',167),
  ('diccionario -> LKEY RKEY','diccionario',2,'p_diccionario','analizador_sintactico.py',168),
  ('set -> LKEY element_list RKEY','set',3,'p_set','analizador_sintactico.py',172),
  ('set -> LKEY RKEY','set',2,'p_set','analizador_sintactico.py',173),
  ('litset -> SET LESS_THAN tipo_dato GREATER_THAN','litset',4,'p_litset','analizador_sintactico.py',177),
  ('key_element -> elemento DOS_PUNTOS elemento','key_element',3,'p_key_element','analizador_sintactico.py',180),
  ('key_element_list -> key_element','key_element_list',1,'p_key_element_list','analizador_sintactico.py',183),
  ('key_element_list -> key_element COMA key_element_list','key_element_list',3,'p_key_element_list','analizador_sintactico.py',184),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY programa RKEY bloques_else','condicional',8,'p_condicional','analizador_sintactico.py',187),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY programa RKEY','condicional',7,'p_condicional','analizador_sintactico.py',188),
  ('bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY programa RKEY bloques_else','bloques_else',9,'p_bloques_else','analizador_sintactico.py',192),
  ('bloques_else -> ELSE LKEY programa RKEY','bloques_else',4,'p_bloques_else','analizador_sintactico.py',193),
  ('parametros -> tipo_dato VARIABLE','parametros',2,'p_parametros','analizador_sintactico.py',196),
  ('parametros -> tipo_dato VARIABLE COMA parametros','parametros',4,'p_parametros','analizador_sintactico.py',197),
  ('class -> CLASS VARIABLE LKEY class_structure RKEY','class',5,'p_class','analizador_sintactico.py',200),
  ('class_structure -> instances constructor','class_structure',2,'p_class_structure','analizador_sintactico.py',204),
  ('class_structure -> instances constructor sentencias','class_structure',3,'p_class_structure','analizador_sintactico.py',205),
  ('instances -> instance','instances',1,'p_instances','analizador_sintactico.py',208),
  ('instances -> instance instances','instances',2,'p_instances','analizador_sintactico.py',209),
  ('instance -> FINAL_TYPE tipo_dato VARIABLE SEMICOLON','instance',4,'p_instance','analizador_sintactico.py',212),
  ('constructor -> VARIABLE LPAREN element_list RPAREN SEMICOLON','constructor',5,'p_constructor','analizador_sintactico.py',215),
  ('return -> RETURN elemento SEMICOLON','return',3,'p_return','analizador_sintactico.py',218),
]
