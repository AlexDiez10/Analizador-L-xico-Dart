
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOLEAN BOOL_TYPE CLASS COMA COMMENT CONJUNTO CONST_TYPE DECREMENT_VAR DICT DIVIDE DIVIDE_ASSIGN DO DOC_COMMENT DOS_PUNTOS DOT DOUBLE DOUBLE_TYPE ELSE EQUALITY FINAL_TYPE FOR GREATER_EQ_THAN GREATER_THAN IF IMPORT IN INCREMENT_VAR INEQUALITY INT INT_TYPE LBRACKETS LESS_EQ_THAN LESS_THAN LIST LKEY LPAREN MAP MINUS MINUS_ASSIGN MODULO MODULO_ASSIGN NOT OR PLUS PLUS_ASSIGN PRINT RBRACKETS READLINESYNC RETURN RKEY RPAREN SEMICOLON SET STATIC STDIN STRING STRING_TYPE THIS TIMES TIMES_ASSIGN VARIABLE VAR_TYPE VOID WHILEprograma : importaciones instrucciones\n| instruccionesinstrucciones : sentencias\n| sentencias instruccionesimportaciones : import\n| import importacionesimport : IMPORT STRING SEMICOLONsentencias : asignar_variable\n| funcion\n| classsentencias_funcion : asignar_variable\n| cambiar_variable\n| impresion\n| condicional\n| retorno\n| while\n| do_while\n| for\n| for_each\n| invocacioncuerpo_funcion : sentencias_funcion\n| sentencias_funcion cuerpo_funcionsentencias_clase : asignar_variable\n| cambiar_variable\n| funcion\n| constructor\n| funcion_staticcuerpo_clase : sentencias_clase\n| sentencias_clase cuerpo_claseclass : CLASS VARIABLE LKEY cuerpo_clase RKEYinvocacion : getVariable LPAREN element_list RPAREN SEMICOLON\n| getVariable LPAREN RPAREN SEMICOLONinvocar : getVariable LPAREN element_list RPAREN\n| getVariable LPAREN RPARENconstructor : VARIABLE LPAREN atributo_list RPAREN SEMICOLONatributo_list : THIS DOT VARIABLE\n| THIS DOT VARIABLE COMA atributo_listfuncion : tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY\n| tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEYfuncion_static : STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY\n| STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEYvariables : VARIABLE\n| variable_indexadagetVariable : variables \n| variables DOT getVariableasignar_variable : tipo_dato variables asignador expresion SEMICOLON\n| tipo_dato variables SEMICOLON\n| FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON\n| FINAL_TYPE tipo_dato variables SEMICOLON cambiar_variable : variables modificador SEMICOLON\n| variables asignador expresion SEMICOLONmodificador : INCREMENT_VAR\n| DECREMENT_VARasignador : ASSIGN\n| PLUS_ASSIGN\n| MINUS_ASSIGN\n| TIMES_ASSIGN\n| DIVIDE_ASSIGN\n| MODULO_ASSIGNexpresion : operacion\n| comparacion\n| list\n| diccionario\n| set\n| input\n| invocarretorno : RETURN SEMICOLON\n| RETURN expresion SEMICOLONvariable_indexada : VARIABLE LBRACKETS inmutables RBRACKETSimpresion : PRINT LPAREN operacion RPAREN SEMICOLON\n| PRINT LPAREN comparacion_logica RPAREN SEMICOLON\n| PRINT LPAREN RPAREN SEMICOLONinput : STDIN DOT READLINESYNC LPAREN RPARENelemento : INT\n| DOUBLE\n| STRING\n| BOOLEAN\n| getVariablecomparacion : operacion comparador operacioncomparacion_logica : comparacion\n| comparacion operador_logico comparacion_logicaoperador_logico : AND\n| OR\n| NOTcomparador : EQUALITY\n| INEQUALITY\n| GREATER_THAN\n| LESS_THAN\n| GREATER_EQ_THAN\n| LESS_EQ_THANoperacion : elemento\n| elemento operador operacionoperador : PLUS\n| MINUS\n| TIMES\n| DIVIDE\n| MODULOlist : LBRACKETS element_list RBRACKETS\n| LBRACKETS RBRACKETSelement_list : elemento\n| elemento COMA element_listtipo_dato : VOID\n| VARIABLE \n| FINAL_TYPE\n| CONST_TYPE\n| VAR_TYPE\n| INT_TYPE\n| STRING_TYPE\n| DOUBLE_TYPE\n| BOOL_TYPE\n| LIST LESS_THAN tipo_coleccion GREATER_THAN\n| MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN\n| SET LESS_THAN tipo_coleccion GREATER_THANtipo_coleccion : INT_TYPE\n| STRING_TYPE\n| DOUBLE_TYPE\n| FINAL_TYPE\n| CONST_TYPE\n| VAR_TYPE\n| BOOL_TYPEfor  : FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY\n| FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY\n| FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEYfor_each : FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY\n| FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEYspecific_instance    : DOS_PUNTOS VARIABLE\n| DOS_PUNTOS VARIABLE COMA specific_instancewhile : WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY\n| WHILE LPAREN condiciones RPAREN LKEY RKEYdo_while : DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLONcondiciones : comparacion_logica\n| getVariable\n| BOOLEAN\n| invocarinmutables : STRING\n| INT\n| DOUBLEkey_element : inmutables DOS_PUNTOS elementokey_element_list : key_element\n| key_element COMA key_element_listdiccionario : LKEY key_element_list RKEY\n| LKEY RKEY\n| DICT LPAREN RPARENset : LKEY element_list RKEY\n| CONJUNTO LPAREN RPARENcondicional : IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else\n| IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY\n| IF LPAREN condiciones RPAREN LKEY RKEY\n| IF LPAREN condiciones RPAREN LKEY RKEY bloques_elsebloques_else : ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else\n| ELSE LKEY cuerpo_funcion RKEYparametros : tipo_dato VARIABLE\n| tipo_dato VARIABLE COMA parametros'
    
_lr_action_items = {'IMPORT':([0,4,37,],[6,6,-7,]),'FINAL_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[11,11,-5,11,-8,-9,-10,31,-6,55,55,55,-7,-47,31,11,-49,11,-23,-24,-25,-26,-27,31,55,-46,11,-30,31,11,11,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,11,11,-51,31,-38,-68,-35,-72,-32,11,-70,-71,11,11,-31,11,-148,-129,-41,-147,-149,-128,-40,-146,11,11,11,-130,11,11,-151,-123,-124,-121,-122,11,11,-125,-150,]),'CLASS':([0,2,4,5,7,8,9,25,37,39,89,104,140,186,200,215,],[13,13,-5,13,-8,-9,-10,-6,-7,-47,-49,-46,-30,-48,-39,-38,]),'VOID':([0,2,4,5,7,8,9,11,25,37,39,46,50,89,92,93,94,95,96,97,99,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[14,14,-5,14,-8,-9,-10,14,-6,-7,-47,14,14,-49,14,-23,-24,-25,-26,-27,14,-46,14,-30,14,14,14,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,14,14,-51,14,-38,-68,-35,-72,-32,14,-70,-71,14,14,-31,14,-148,-129,-41,-147,-149,-128,-40,-146,14,14,14,-130,14,14,-151,-123,-124,-121,-122,14,14,-125,-150,]),'VARIABLE':([0,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,31,32,37,38,39,40,41,42,43,44,45,46,50,71,72,81,88,89,90,92,93,94,95,96,97,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,133,136,140,143,146,152,156,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,181,186,189,192,200,202,203,204,206,207,208,209,211,212,213,215,226,229,230,231,234,239,241,242,243,244,249,253,256,257,258,260,261,263,265,267,268,270,273,275,276,281,284,285,286,288,296,297,299,302,304,306,307,309,310,312,317,319,322,324,325,326,327,330,332,],[12,12,-5,12,-8,-9,-10,29,12,-103,33,-102,-105,-106,-107,-108,-109,-110,-6,-104,49,-7,49,-47,-54,-55,-56,-57,-58,-59,12,90,49,49,134,49,-49,-103,90,-23,-24,-25,-26,-27,12,-111,-113,49,-46,49,-85,-86,-87,-88,-89,-90,49,-93,-94,-95,-96,-97,49,165,-30,49,191,49,49,12,165,49,-103,165,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,49,-48,-50,-112,-39,49,49,-67,49,165,12,49,235,-51,12,-38,-68,49,49,251,-35,-72,49,-82,-83,-84,264,-32,165,-70,-71,165,165,277,279,49,-31,165,-148,-129,49,294,-41,-147,-149,-128,-40,-146,165,165,313,165,49,-130,165,165,-151,-123,-124,-121,-122,165,165,-125,-150,]),'CONST_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[15,15,-5,15,-8,-9,-10,15,-6,56,56,56,-7,-47,15,15,-49,15,-23,-24,-25,-26,-27,15,56,-46,15,-30,15,15,15,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,15,15,-51,15,-38,-68,-35,-72,-32,15,-70,-71,15,15,-31,15,-148,-129,-41,-147,-149,-128,-40,-146,15,15,15,-130,15,15,-151,-123,-124,-121,-122,15,15,-125,-150,]),'VAR_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[16,16,-5,16,-8,-9,-10,16,-6,57,57,57,-7,-47,16,16,-49,16,-23,-24,-25,-26,-27,16,57,-46,16,-30,16,16,16,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,16,16,-51,16,-38,-68,-35,-72,-32,16,-70,-71,16,16,-31,16,-148,-129,-41,-147,-149,-128,-40,-146,16,16,16,-130,16,16,-151,-123,-124,-121,-122,16,16,-125,-150,]),'INT_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[17,17,-5,17,-8,-9,-10,17,-6,52,52,52,-7,-47,17,17,-49,17,-23,-24,-25,-26,-27,17,52,-46,17,-30,17,17,17,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,17,17,-51,17,-38,-68,-35,-72,-32,17,-70,-71,17,17,-31,17,-148,-129,-41,-147,-149,-128,-40,-146,17,17,17,-130,17,17,-151,-123,-124,-121,-122,17,17,-125,-150,]),'STRING_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[18,18,-5,18,-8,-9,-10,18,-6,53,53,53,-7,-47,18,18,-49,18,-23,-24,-25,-26,-27,18,53,-46,18,-30,18,18,18,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,18,18,-51,18,-38,-68,-35,-72,-32,18,-70,-71,18,18,-31,18,-148,-129,-41,-147,-149,-128,-40,-146,18,18,18,-130,18,18,-151,-123,-124,-121,-122,18,18,-125,-150,]),'DOUBLE_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[19,19,-5,19,-8,-9,-10,19,-6,54,54,54,-7,-47,19,19,-49,19,-23,-24,-25,-26,-27,19,54,-46,19,-30,19,19,19,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,19,19,-51,19,-38,-68,-35,-72,-32,19,-70,-71,19,19,-31,19,-148,-129,-41,-147,-149,-128,-40,-146,19,19,19,-130,19,19,-151,-123,-124,-121,-122,19,19,-125,-150,]),'BOOL_TYPE':([0,2,4,5,7,8,9,11,25,34,35,36,37,39,46,50,89,92,93,94,95,96,97,99,101,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[20,20,-5,20,-8,-9,-10,20,-6,58,58,58,-7,-47,20,20,-49,20,-23,-24,-25,-26,-27,20,58,-46,20,-30,20,20,20,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,20,20,-51,20,-38,-68,-35,-72,-32,20,-70,-71,20,20,-31,20,-148,-129,-41,-147,-149,-128,-40,-146,20,20,20,-130,20,20,-151,-123,-124,-121,-122,20,20,-125,-150,]),'LIST':([0,2,4,5,7,8,9,11,25,37,39,46,50,89,92,93,94,95,96,97,99,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[21,21,-5,21,-8,-9,-10,21,-6,-7,-47,21,21,-49,21,-23,-24,-25,-26,-27,21,-46,21,-30,21,21,21,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,21,21,-51,21,-38,-68,-35,-72,-32,21,-70,-71,21,21,-31,21,-148,-129,-41,-147,-149,-128,-40,-146,21,21,21,-130,21,21,-151,-123,-124,-121,-122,21,21,-125,-150,]),'MAP':([0,2,4,5,7,8,9,11,25,37,39,46,50,89,92,93,94,95,96,97,99,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[22,22,-5,22,-8,-9,-10,22,-6,-7,-47,22,22,-49,22,-23,-24,-25,-26,-27,22,-46,22,-30,22,22,22,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,22,22,-51,22,-38,-68,-35,-72,-32,22,-70,-71,22,22,-31,22,-148,-129,-41,-147,-149,-128,-40,-146,22,22,22,-130,22,22,-151,-123,-124,-121,-122,22,22,-125,-150,]),'SET':([0,2,4,5,7,8,9,11,25,37,39,46,50,89,92,93,94,95,96,97,99,104,136,140,162,163,167,168,169,170,171,172,173,174,175,176,177,186,189,200,204,207,208,212,213,215,226,234,239,253,256,257,258,260,261,268,270,273,275,284,285,286,288,296,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[23,23,-5,23,-8,-9,-10,23,-6,-7,-47,23,23,-49,23,-23,-24,-25,-26,-27,23,-46,23,-30,23,23,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-67,23,23,-51,23,-38,-68,-35,-72,-32,23,-70,-71,23,23,-31,23,-148,-129,-41,-147,-149,-128,-40,-146,23,23,23,-130,23,23,-151,-123,-124,-121,-122,23,23,-125,-150,]),'$end':([1,3,5,7,8,9,24,26,39,89,104,140,186,200,215,],[0,-2,-3,-8,-9,-10,-1,-4,-47,-49,-46,-30,-48,-39,-38,]),'STRING':([6,38,39,40,41,42,43,44,45,47,71,72,88,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,133,143,152,155,156,181,186,202,203,206,209,229,230,241,242,243,244,276,307,],[27,79,-47,-54,-55,-56,-57,-58,-59,85,79,129,79,-49,-46,79,-85,-86,-87,-88,-89,-90,79,-93,-94,-95,-96,-97,79,79,79,85,79,79,-48,79,79,79,79,79,79,79,-82,-83,-84,79,79,]),'LESS_THAN':([21,22,23,30,49,61,63,70,76,77,78,79,80,121,137,148,150,216,222,223,225,],[34,35,36,-43,-42,-44,109,-91,-78,-74,-75,-76,-77,-78,-69,-45,-92,109,-78,-77,109,]),'SEMICOLON':([27,28,29,30,48,49,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,119,121,123,137,138,142,144,145,148,149,150,151,153,154,157,158,161,181,190,197,205,208,210,214,217,219,230,233,238,240,248,250,251,252,259,300,],[37,39,-42,-43,89,-42,-44,104,-60,-61,-62,-63,-64,-65,-66,-91,-78,-74,-75,-76,-77,-99,-78,-142,-69,186,189,-52,-53,-45,-79,-92,-98,-141,-144,-143,-145,-34,204,212,-33,226,230,234,-73,239,-80,249,253,257,258,263,265,-42,268,-81,309,]),'ASSIGN':([28,29,30,48,49,90,98,137,165,178,251,],[40,-42,-43,40,-42,-42,40,-69,-42,40,-42,]),'PLUS_ASSIGN':([28,29,30,48,49,90,98,137,165,178,251,],[41,-42,-43,41,-42,-42,41,-69,-42,41,-42,]),'MINUS_ASSIGN':([28,29,30,48,49,90,98,137,165,178,251,],[42,-42,-43,42,-42,-42,42,-69,-42,42,-42,]),'TIMES_ASSIGN':([28,29,30,48,49,90,98,137,165,178,251,],[43,-42,-43,43,-42,-42,43,-69,-42,43,-42,]),'DIVIDE_ASSIGN':([28,29,30,48,49,90,98,137,165,178,251,],[44,-42,-43,44,-42,-42,44,-69,-42,44,-42,]),'MODULO_ASSIGN':([28,29,30,48,49,90,98,137,165,178,251,],[45,-42,-43,45,-42,-42,45,-69,-42,45,-42,]),'LPAREN':([29,30,49,61,73,74,76,90,137,148,159,165,178,179,180,182,184,185,191,222,251,262,298,],[46,-43,-42,-44,130,131,133,139,-69,-45,196,-42,-44,202,203,206,208,209,213,133,266,276,307,]),'LBRACKETS':([29,38,40,41,42,43,44,45,49,88,90,143,165,181,251,],[47,71,-54,-55,-56,-57,-58,-59,47,71,47,71,47,71,47,]),'DOT':([30,49,61,75,137,165,178,188,],[-43,-42,103,132,-69,-42,103,211,]),'PLUS':([30,49,61,70,76,77,78,79,80,121,137,148,222,223,],[-43,-42,-44,113,-78,-74,-75,-76,-77,-78,-69,-45,-78,-77,]),'MINUS':([30,49,61,70,76,77,78,79,80,121,137,148,222,223,],[-43,-42,-44,114,-78,-74,-75,-76,-77,-78,-69,-45,-78,-77,]),'TIMES':([30,49,61,70,76,77,78,79,80,121,137,148,222,223,],[-43,-42,-44,115,-78,-74,-75,-76,-77,-78,-69,-45,-78,-77,]),'DIVIDE':([30,49,61,70,76,77,78,79,80,121,137,148,222,223,],[-43,-42,-44,116,-78,-74,-75,-76,-77,-78,-69,-45,-78,-77,]),'MODULO':([30,49,61,70,76,77,78,79,80,121,137,148,222,223,],[-43,-42,-44,117,-78,-74,-75,-76,-77,-78,-69,-45,-78,-77,]),'EQUALITY':([30,49,61,63,70,76,77,78,79,80,121,137,148,150,216,222,223,225,],[-43,-42,-44,106,-91,-78,-74,-75,-76,-77,-78,-69,-45,-92,106,-78,-77,106,]),'INEQUALITY':([30,49,61,63,70,76,77,78,79,80,121,137,148,150,216,222,223,225,],[-43,-42,-44,107,-91,-78,-74,-75,-76,-77,-78,-69,-45,-92,107,-78,-77,107,]),'GREATER_THAN':([30,49,51,52,53,54,55,56,57,58,60,61,63,70,76,77,78,79,80,121,137,147,148,150,216,222,223,225,],[-43,-42,100,-114,-115,-116,-117,-118,-119,-120,102,-44,108,-91,-78,-74,-75,-76,-77,-78,-69,192,-45,-92,108,-78,-77,108,]),'GREATER_EQ_THAN':([30,49,61,63,70,76,77,78,79,80,121,137,148,150,216,222,223,225,],[-43,-42,-44,110,-91,-78,-74,-75,-76,-77,-78,-69,-45,-92,110,-78,-77,110,]),'LESS_EQ_THAN':([30,49,61,63,70,76,77,78,79,80,121,137,148,150,216,222,223,225,],[-43,-42,-44,111,-91,-78,-74,-75,-76,-77,-78,-69,-45,-92,111,-78,-77,111,]),'INCREMENT_VAR':([30,90,98,137,165,178,264,277,279,],[-43,-42,144,-69,-42,144,144,144,144,]),'DECREMENT_VAR':([30,90,98,137,165,178,264,277,279,],[-43,-42,145,-69,-42,145,145,145,145,]),'COMA':([30,49,52,53,54,55,56,57,58,59,61,77,78,79,80,120,121,125,127,128,129,134,137,148,195,235,294,],[-43,-42,-114,-115,-116,-117,-118,-119,-120,101,-44,-74,-75,-76,-77,152,-78,155,-74,-75,-76,162,-69,-45,-138,254,305,]),'RBRACKETS':([30,49,61,71,77,78,79,80,84,85,86,87,118,120,121,137,148,193,],[-43,-42,-44,119,-74,-75,-76,-77,137,-135,-136,-137,151,-100,-78,-69,-45,-101,]),'RKEY':([30,39,49,61,72,77,78,79,80,89,91,92,93,94,95,96,97,104,120,121,122,124,125,127,128,129,137,141,148,166,167,168,169,170,171,172,173,174,175,176,177,186,189,193,194,195,199,200,201,204,212,215,226,228,234,239,253,257,258,260,261,268,271,272,273,274,275,283,284,285,286,288,296,297,308,309,311,315,317,318,319,320,322,324,325,328,329,330,332,],[-43,-47,-42,-44,123,-74,-75,-76,-77,-49,140,-28,-23,-24,-25,-26,-27,-46,-100,-78,153,154,-139,-74,-75,-76,-69,-29,-45,200,-21,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-101,-140,-138,215,-39,-22,-67,-51,-38,-68,247,-35,-72,-32,-70,-71,273,275,-31,284,285,-148,288,-129,296,-41,-147,-149,-128,-40,-146,317,-130,319,322,-151,324,-123,325,-124,-121,-122,330,331,-125,-150,]),'AND':([30,49,61,70,77,78,79,80,121,137,148,149,150,219,],[-43,-42,-44,-91,-74,-75,-76,-77,-78,-69,-45,-79,-92,242,]),'OR':([30,49,61,70,77,78,79,80,121,137,148,149,150,219,],[-43,-42,-44,-91,-74,-75,-76,-77,-78,-69,-45,-79,-92,243,]),'NOT':([30,49,61,70,77,78,79,80,121,137,148,149,150,219,],[-43,-42,-44,-91,-74,-75,-76,-77,-78,-69,-45,-79,-92,244,]),'RPAREN':([30,46,49,61,70,77,78,79,80,82,120,121,130,131,133,134,137,144,145,148,149,150,160,161,187,193,196,197,198,202,209,213,216,218,219,220,221,222,223,224,227,232,235,236,259,269,278,280,282,289,290,292,294,313,314,316,],[-43,83,-42,-44,-91,-74,-75,-76,-77,135,-100,-78,157,158,161,-152,-69,-52,-53,-45,-79,-92,197,-34,210,-101,214,-33,-153,217,233,237,238,240,-80,245,-131,-132,-133,-134,246,252,-36,255,-81,-37,291,293,295,300,301,303,-126,321,-127,323,]),'LKEY':([33,38,40,41,42,43,44,45,83,88,135,143,181,183,237,245,246,255,287,291,295,301,303,321,323,],[50,72,-54,-55,-56,-57,-58,-59,136,72,163,72,72,207,256,260,261,270,299,302,306,310,312,326,327,]),'DICT':([38,40,41,42,43,44,45,88,143,181,],[73,-54,-55,-56,-57,-58,-59,73,73,73,]),'CONJUNTO':([38,40,41,42,43,44,45,88,143,181,],[74,-54,-55,-56,-57,-58,-59,74,74,74,]),'STDIN':([38,40,41,42,43,44,45,88,143,181,],[75,-54,-55,-56,-57,-58,-59,75,75,75,]),'INT':([38,39,40,41,42,43,44,45,47,71,72,88,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,133,143,152,155,156,181,186,202,203,206,209,229,230,241,242,243,244,276,307,],[77,-47,-54,-55,-56,-57,-58,-59,86,77,127,77,-49,-46,77,-85,-86,-87,-88,-89,-90,77,-93,-94,-95,-96,-97,77,77,77,86,77,77,-48,77,77,77,77,77,77,77,-82,-83,-84,77,77,]),'DOUBLE':([38,39,40,41,42,43,44,45,47,71,72,88,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,133,143,152,155,156,181,186,202,203,206,209,229,230,241,242,243,244,276,307,],[78,-47,-54,-55,-56,-57,-58,-59,87,78,128,78,-49,-46,78,-85,-86,-87,-88,-89,-90,78,-93,-94,-95,-96,-97,78,78,78,87,78,78,-48,78,78,78,78,78,78,78,-82,-83,-84,78,78,]),'BOOLEAN':([38,39,40,41,42,43,44,45,71,72,88,89,104,105,106,107,108,109,110,111,112,113,114,115,116,117,133,143,152,156,181,186,202,203,206,209,229,230,241,242,243,244,276,307,],[80,-47,-54,-55,-56,-57,-58,-59,80,80,80,-49,-46,80,-85,-86,-87,-88,-89,-90,80,-93,-94,-95,-96,-97,80,80,80,80,80,-48,80,223,223,80,80,80,80,-82,-83,-84,223,223,]),'STATIC':([39,50,89,92,93,94,95,96,97,104,186,189,200,212,215,234,284,296,],[-47,99,-49,99,-23,-24,-25,-26,-27,-46,-48,-50,-39,-51,-38,-35,-41,-40,]),'PRINT':([39,89,104,136,163,167,168,169,170,171,172,173,174,175,176,177,186,189,204,207,212,226,239,253,256,257,258,260,261,268,270,273,275,285,286,288,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[-47,-49,-46,179,179,179,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,179,-51,-68,-72,-32,179,-70,-71,179,179,-31,179,-148,-129,-147,-149,-128,-146,179,179,179,-130,179,179,-151,-123,-124,-121,-122,179,179,-125,-150,]),'IF':([39,89,104,136,163,167,168,169,170,171,172,173,174,175,176,177,186,189,204,207,212,226,239,253,256,257,258,260,261,268,270,273,275,285,286,287,288,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[-47,-49,-46,180,180,180,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,180,-51,-68,-72,-32,180,-70,-71,180,180,-31,180,-148,-129,-147,-149,298,-128,-146,180,180,180,-130,180,180,-151,-123,-124,-121,-122,180,180,-125,-150,]),'RETURN':([39,89,104,136,163,167,168,169,170,171,172,173,174,175,176,177,186,189,204,207,212,226,239,253,256,257,258,260,261,268,270,273,275,285,286,288,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[-47,-49,-46,181,181,181,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,181,-51,-68,-72,-32,181,-70,-71,181,181,-31,181,-148,-129,-147,-149,-128,-146,181,181,181,-130,181,181,-151,-123,-124,-121,-122,181,181,-125,-150,]),'WHILE':([39,89,104,136,163,167,168,169,170,171,172,173,174,175,176,177,186,189,204,207,212,226,239,247,253,256,257,258,260,261,268,270,273,275,285,286,288,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[-47,-49,-46,182,182,182,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,182,-51,-68,-72,262,-32,182,-70,-71,182,182,-31,182,-148,-129,-147,-149,-128,-146,182,182,182,-130,182,182,-151,-123,-124,-121,-122,182,182,-125,-150,]),'DO':([39,89,104,136,163,167,168,169,170,171,172,173,174,175,176,177,186,189,204,207,212,226,239,253,256,257,258,260,261,268,270,273,275,285,286,288,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[-47,-49,-46,183,183,183,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,183,-51,-68,-72,-32,183,-70,-71,183,183,-31,183,-148,-129,-147,-149,-128,-146,183,183,183,-130,183,183,-151,-123,-124,-121,-122,183,183,-125,-150,]),'FOR':([39,89,104,136,163,167,168,169,170,171,172,173,174,175,176,177,186,189,204,207,212,226,239,253,256,257,258,260,261,268,270,273,275,285,286,288,297,299,302,306,309,310,312,317,319,322,324,325,326,327,330,332,],[-47,-49,-46,184,184,184,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,184,-51,-68,-72,-32,184,-70,-71,184,184,-31,184,-148,-129,-147,-149,-128,-146,184,184,184,-130,184,184,-151,-123,-124,-121,-122,184,184,-125,-150,]),'DOS_PUNTOS':([85,86,87,126,127,128,129,266,305,],[-135,-136,-137,156,-136,-137,-135,281,281,]),'READLINESYNC':([132,],[159,]),'THIS':([139,254,],[188,188,]),'IN':([251,293,],[267,304,]),'ELSE':([273,285,331,],[287,287,287,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'importaciones':([0,4,],[2,25,]),'instrucciones':([0,2,5,],[3,24,26,]),'import':([0,4,],[4,4,]),'sentencias':([0,2,5,],[5,5,5,]),'asignar_variable':([0,2,5,50,92,136,163,167,207,208,256,260,261,270,299,302,306,310,312,326,327,],[7,7,7,93,93,168,168,168,168,229,168,168,168,168,168,168,168,168,168,168,168,]),'funcion':([0,2,5,50,92,],[8,8,8,95,95,]),'class':([0,2,5,],[9,9,9,]),'tipo_dato':([0,2,5,11,46,50,92,99,136,162,163,167,207,208,213,256,260,261,270,299,302,306,310,312,326,327,],[10,10,10,32,81,10,10,146,164,81,164,164,164,231,81,164,164,164,164,164,164,164,164,164,164,164,]),'variables':([10,32,38,50,71,72,88,92,103,105,112,133,136,143,152,156,163,164,167,181,202,203,206,207,209,229,230,231,241,256,260,261,267,270,276,299,302,306,307,310,312,326,327,],[28,48,61,98,61,61,61,98,61,61,61,61,178,61,61,61,178,28,178,61,61,61,61,178,61,61,61,28,61,178,178,178,61,178,61,178,178,178,61,178,178,178,178,]),'variable_indexada':([10,32,38,50,71,72,88,92,103,105,112,133,136,143,152,156,163,164,167,181,202,203,206,207,209,229,230,231,241,256,260,261,267,270,276,299,302,306,307,310,312,326,327,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignador':([28,48,98,178,],[38,88,143,143,]),'tipo_coleccion':([34,35,36,101,],[51,59,60,147,]),'expresion':([38,88,143,181,],[62,138,190,205,]),'operacion':([38,88,105,112,143,181,202,203,206,229,230,241,276,307,],[63,63,149,150,63,63,216,225,225,225,225,225,225,225,]),'comparacion':([38,88,143,181,202,203,206,229,230,241,276,307,],[64,64,64,64,219,219,219,219,219,219,219,219,]),'list':([38,88,143,181,],[65,65,65,65,]),'diccionario':([38,88,143,181,],[66,66,66,66,]),'set':([38,88,143,181,],[67,67,67,67,]),'input':([38,88,143,181,],[68,68,68,68,]),'invocar':([38,88,143,181,203,206,276,307,],[69,69,69,69,224,224,224,224,]),'elemento':([38,71,72,88,105,112,133,143,152,156,181,202,203,206,209,229,230,241,276,307,],[70,120,120,70,70,70,120,70,120,195,70,70,70,70,120,70,70,70,70,70,]),'getVariable':([38,71,72,88,103,105,112,133,136,143,152,156,163,167,181,202,203,206,207,209,229,230,241,256,260,261,267,270,276,299,302,306,307,310,312,326,327,],[76,121,121,76,148,121,121,121,185,76,121,121,185,185,76,121,222,222,185,121,121,121,121,185,185,185,282,185,222,185,185,185,222,185,185,185,185,]),'parametros':([46,162,213,],[82,198,236,]),'inmutables':([47,72,155,],[84,126,126,]),'cuerpo_clase':([50,92,],[91,141,]),'sentencias_clase':([50,92,],[92,92,]),'cambiar_variable':([50,92,136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[94,94,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'constructor':([50,92,],[96,96,]),'funcion_static':([50,92,],[97,97,]),'comparador':([63,216,225,],[105,105,105,]),'operador':([70,],[112,]),'element_list':([71,72,133,152,209,],[118,124,160,193,232,]),'key_element_list':([72,155,],[122,194,]),'key_element':([72,155,],[125,125,]),'modificador':([98,178,264,277,279,],[142,142,278,290,292,]),'cuerpo_funcion':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[166,199,201,228,271,272,274,283,308,311,315,318,320,328,329,]),'sentencias_funcion':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'impresion':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'condicional':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'retorno':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'while':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'do_while':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'for':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'for_each':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'invocacion':([136,163,167,207,256,260,261,270,299,302,306,310,312,326,327,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'atributo_list':([139,254,],[187,269,]),'comparacion_logica':([202,203,206,229,230,241,276,307,],[218,221,221,248,250,259,221,221,]),'condiciones':([203,206,276,307,],[220,227,289,316,]),'operador_logico':([219,],[241,]),'specific_instance':([266,305,],[280,314,]),'bloques_else':([273,285,331,],[286,297,332,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> importaciones instrucciones','programa',2,'p_programa','analizador_sintactico.py',5),
  ('programa -> instrucciones','programa',1,'p_programa','analizador_sintactico.py',6),
  ('instrucciones -> sentencias','instrucciones',1,'p_instrucciones','analizador_sintactico.py',9),
  ('instrucciones -> sentencias instrucciones','instrucciones',2,'p_instrucciones','analizador_sintactico.py',10),
  ('importaciones -> import','importaciones',1,'p_importaciones','analizador_sintactico.py',13),
  ('importaciones -> import importaciones','importaciones',2,'p_importaciones','analizador_sintactico.py',14),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizador_sintactico.py',17),
  ('sentencias -> asignar_variable','sentencias',1,'p_sentencias','analizador_sintactico.py',21),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','analizador_sintactico.py',22),
  ('sentencias -> class','sentencias',1,'p_sentencias','analizador_sintactico.py',23),
  ('sentencias_funcion -> asignar_variable','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',26),
  ('sentencias_funcion -> cambiar_variable','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',27),
  ('sentencias_funcion -> impresion','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',28),
  ('sentencias_funcion -> condicional','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',29),
  ('sentencias_funcion -> retorno','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',30),
  ('sentencias_funcion -> while','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',31),
  ('sentencias_funcion -> do_while','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',32),
  ('sentencias_funcion -> for','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',33),
  ('sentencias_funcion -> for_each','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',34),
  ('sentencias_funcion -> invocacion','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',35),
  ('cuerpo_funcion -> sentencias_funcion','cuerpo_funcion',1,'p_cuerpo_funcion','analizador_sintactico.py',38),
  ('cuerpo_funcion -> sentencias_funcion cuerpo_funcion','cuerpo_funcion',2,'p_cuerpo_funcion','analizador_sintactico.py',39),
  ('sentencias_clase -> asignar_variable','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',42),
  ('sentencias_clase -> cambiar_variable','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',43),
  ('sentencias_clase -> funcion','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',44),
  ('sentencias_clase -> constructor','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',45),
  ('sentencias_clase -> funcion_static','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',46),
  ('cuerpo_clase -> sentencias_clase','cuerpo_clase',1,'p_cuerpo_clase','analizador_sintactico.py',49),
  ('cuerpo_clase -> sentencias_clase cuerpo_clase','cuerpo_clase',2,'p_cuerpo_clase','analizador_sintactico.py',50),
  ('class -> CLASS VARIABLE LKEY cuerpo_clase RKEY','class',5,'p_class','analizador_sintactico.py',53),
  ('invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON','invocacion',5,'p_invocacion','analizador_sintactico.py',57),
  ('invocacion -> getVariable LPAREN RPAREN SEMICOLON','invocacion',4,'p_invocacion','analizador_sintactico.py',58),
  ('invocar -> getVariable LPAREN element_list RPAREN','invocar',4,'p_invocar','analizador_sintactico.py',62),
  ('invocar -> getVariable LPAREN RPAREN','invocar',3,'p_invocar','analizador_sintactico.py',63),
  ('constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON','constructor',5,'p_constructor','analizador_sintactico.py',66),
  ('atributo_list -> THIS DOT VARIABLE','atributo_list',3,'p_atributo_list','analizador_sintactico.py',69),
  ('atributo_list -> THIS DOT VARIABLE COMA atributo_list','atributo_list',5,'p_atributo_list','analizador_sintactico.py',70),
  ('funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY','funcion',8,'p_funcion','analizador_sintactico.py',73),
  ('funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY','funcion',7,'p_funcion','analizador_sintactico.py',74),
  ('funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY','funcion_static',9,'p_funcion_static','analizador_sintactico.py',78),
  ('funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY','funcion_static',8,'p_funcion_static','analizador_sintactico.py',79),
  ('variables -> VARIABLE','variables',1,'p_variables','analizador_sintactico.py',83),
  ('variables -> variable_indexada','variables',1,'p_variables','analizador_sintactico.py',84),
  ('getVariable -> variables','getVariable',1,'p_getVariable','analizador_sintactico.py',87),
  ('getVariable -> variables DOT getVariable','getVariable',3,'p_getVariable','analizador_sintactico.py',88),
  ('asignar_variable -> tipo_dato variables asignador expresion SEMICOLON','asignar_variable',5,'p_asignar_variable','analizador_sintactico.py',91),
  ('asignar_variable -> tipo_dato variables SEMICOLON','asignar_variable',3,'p_asignar_variable','analizador_sintactico.py',92),
  ('asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON','asignar_variable',6,'p_asignar_variable','analizador_sintactico.py',93),
  ('asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON','asignar_variable',4,'p_asignar_variable','analizador_sintactico.py',94),
  ('cambiar_variable -> variables modificador SEMICOLON','cambiar_variable',3,'p_cambiar_variable','analizador_sintactico.py',98),
  ('cambiar_variable -> variables asignador expresion SEMICOLON','cambiar_variable',4,'p_cambiar_variable','analizador_sintactico.py',99),
  ('modificador -> INCREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',103),
  ('modificador -> DECREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',104),
  ('asignador -> ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',107),
  ('asignador -> PLUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',108),
  ('asignador -> MINUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',109),
  ('asignador -> TIMES_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',110),
  ('asignador -> DIVIDE_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',111),
  ('asignador -> MODULO_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',112),
  ('expresion -> operacion','expresion',1,'p_expresion','analizador_sintactico.py',115),
  ('expresion -> comparacion','expresion',1,'p_expresion','analizador_sintactico.py',116),
  ('expresion -> list','expresion',1,'p_expresion','analizador_sintactico.py',117),
  ('expresion -> diccionario','expresion',1,'p_expresion','analizador_sintactico.py',118),
  ('expresion -> set','expresion',1,'p_expresion','analizador_sintactico.py',119),
  ('expresion -> input','expresion',1,'p_expresion','analizador_sintactico.py',120),
  ('expresion -> invocar','expresion',1,'p_expresion','analizador_sintactico.py',121),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','analizador_sintactico.py',124),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','analizador_sintactico.py',125),
  ('variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS','variable_indexada',4,'p_variable_indexada','analizador_sintactico.py',129),
  ('impresion -> PRINT LPAREN operacion RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',133),
  ('impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',134),
  ('impresion -> PRINT LPAREN RPAREN SEMICOLON','impresion',4,'p_impresion','analizador_sintactico.py',135),
  ('input -> STDIN DOT READLINESYNC LPAREN RPAREN','input',5,'p_input','analizador_sintactico.py',139),
  ('elemento -> INT','elemento',1,'p_elemento','analizador_sintactico.py',143),
  ('elemento -> DOUBLE','elemento',1,'p_elemento','analizador_sintactico.py',144),
  ('elemento -> STRING','elemento',1,'p_elemento','analizador_sintactico.py',145),
  ('elemento -> BOOLEAN','elemento',1,'p_elemento','analizador_sintactico.py',146),
  ('elemento -> getVariable','elemento',1,'p_elemento','analizador_sintactico.py',147),
  ('comparacion -> operacion comparador operacion','comparacion',3,'p_comparacion','analizador_sintactico.py',150),
  ('comparacion_logica -> comparacion','comparacion_logica',1,'p_comparacion_logica','analizador_sintactico.py',153),
  ('comparacion_logica -> comparacion operador_logico comparacion_logica','comparacion_logica',3,'p_comparacion_logica','analizador_sintactico.py',154),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','analizador_sintactico.py',157),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','analizador_sintactico.py',158),
  ('operador_logico -> NOT','operador_logico',1,'p_operador_logico','analizador_sintactico.py',159),
  ('comparador -> EQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',162),
  ('comparador -> INEQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',163),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','analizador_sintactico.py',164),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','analizador_sintactico.py',165),
  ('comparador -> GREATER_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',166),
  ('comparador -> LESS_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',167),
  ('operacion -> elemento','operacion',1,'p_operacion','analizador_sintactico.py',170),
  ('operacion -> elemento operador operacion','operacion',3,'p_operacion','analizador_sintactico.py',171),
  ('operador -> PLUS','operador',1,'p_operador','analizador_sintactico.py',174),
  ('operador -> MINUS','operador',1,'p_operador','analizador_sintactico.py',175),
  ('operador -> TIMES','operador',1,'p_operador','analizador_sintactico.py',176),
  ('operador -> DIVIDE','operador',1,'p_operador','analizador_sintactico.py',177),
  ('operador -> MODULO','operador',1,'p_operador','analizador_sintactico.py',178),
  ('list -> LBRACKETS element_list RBRACKETS','list',3,'p_list','analizador_sintactico.py',181),
  ('list -> LBRACKETS RBRACKETS','list',2,'p_list','analizador_sintactico.py',182),
  ('element_list -> elemento','element_list',1,'p_element_list','analizador_sintactico.py',186),
  ('element_list -> elemento COMA element_list','element_list',3,'p_element_list','analizador_sintactico.py',187),
  ('tipo_dato -> VOID','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',190),
  ('tipo_dato -> VARIABLE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',191),
  ('tipo_dato -> FINAL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',192),
  ('tipo_dato -> CONST_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',193),
  ('tipo_dato -> VAR_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',194),
  ('tipo_dato -> INT_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',195),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',196),
  ('tipo_dato -> DOUBLE_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',197),
  ('tipo_dato -> BOOL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',198),
  ('tipo_dato -> LIST LESS_THAN tipo_coleccion GREATER_THAN','tipo_dato',4,'p_tipo_dato','analizador_sintactico.py',199),
  ('tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN','tipo_dato',6,'p_tipo_dato','analizador_sintactico.py',200),
  ('tipo_dato -> SET LESS_THAN tipo_coleccion GREATER_THAN','tipo_dato',4,'p_tipo_dato','analizador_sintactico.py',201),
  ('tipo_coleccion -> INT_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',204),
  ('tipo_coleccion -> STRING_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',205),
  ('tipo_coleccion -> DOUBLE_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',206),
  ('tipo_coleccion -> FINAL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',207),
  ('tipo_coleccion -> CONST_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',208),
  ('tipo_coleccion -> VAR_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',209),
  ('tipo_coleccion -> BOOL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',210),
  ('for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',11,'p_for','analizador_sintactico.py',213),
  ('for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',11,'p_for','analizador_sintactico.py',214),
  ('for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',10,'p_for','analizador_sintactico.py',215),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY','for_each',10,'p_for_each','analizador_sintactico.py',219),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY','for_each',13,'p_for_each','analizador_sintactico.py',220),
  ('specific_instance -> DOS_PUNTOS VARIABLE','specific_instance',2,'p_specific_instance','analizador_sintactico.py',224),
  ('specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance','specific_instance',4,'p_specific_instance','analizador_sintactico.py',225),
  ('while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY','while',7,'p_while','analizador_sintactico.py',228),
  ('while -> WHILE LPAREN condiciones RPAREN LKEY RKEY','while',6,'p_while','analizador_sintactico.py',229),
  ('do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON','do_while',9,'p_do_while','analizador_sintactico.py',233),
  ('condiciones -> comparacion_logica','condiciones',1,'p_condiciones','analizador_sintactico.py',237),
  ('condiciones -> getVariable','condiciones',1,'p_condiciones','analizador_sintactico.py',238),
  ('condiciones -> BOOLEAN','condiciones',1,'p_condiciones','analizador_sintactico.py',239),
  ('condiciones -> invocar','condiciones',1,'p_condiciones','analizador_sintactico.py',240),
  ('inmutables -> STRING','inmutables',1,'p_inmutables','analizador_sintactico.py',243),
  ('inmutables -> INT','inmutables',1,'p_inmutables','analizador_sintactico.py',244),
  ('inmutables -> DOUBLE','inmutables',1,'p_inmutables','analizador_sintactico.py',245),
  ('key_element -> inmutables DOS_PUNTOS elemento','key_element',3,'p_key_element','analizador_sintactico.py',248),
  ('key_element_list -> key_element','key_element_list',1,'p_key_element_list','analizador_sintactico.py',251),
  ('key_element_list -> key_element COMA key_element_list','key_element_list',3,'p_key_element_list','analizador_sintactico.py',252),
  ('diccionario -> LKEY key_element_list RKEY','diccionario',3,'p_diccionario','analizador_sintactico.py',255),
  ('diccionario -> LKEY RKEY','diccionario',2,'p_diccionario','analizador_sintactico.py',256),
  ('diccionario -> DICT LPAREN RPAREN','diccionario',3,'p_diccionario','analizador_sintactico.py',257),
  ('set -> LKEY element_list RKEY','set',3,'p_set','analizador_sintactico.py',261),
  ('set -> CONJUNTO LPAREN RPAREN','set',3,'p_set','analizador_sintactico.py',262),
  ('condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else','condicional',8,'p_condicional','analizador_sintactico.py',266),
  ('condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY','condicional',7,'p_condicional','analizador_sintactico.py',267),
  ('condicional -> IF LPAREN condiciones RPAREN LKEY RKEY','condicional',6,'p_condicional','analizador_sintactico.py',268),
  ('condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else','condicional',7,'p_condicional','analizador_sintactico.py',269),
  ('bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else','bloques_else',9,'p_bloques_else','analizador_sintactico.py',273),
  ('bloques_else -> ELSE LKEY cuerpo_funcion RKEY','bloques_else',4,'p_bloques_else','analizador_sintactico.py',274),
  ('parametros -> tipo_dato VARIABLE','parametros',2,'p_parametros','analizador_sintactico.py',277),
  ('parametros -> tipo_dato VARIABLE COMA parametros','parametros',4,'p_parametros','analizador_sintactico.py',278),
]
