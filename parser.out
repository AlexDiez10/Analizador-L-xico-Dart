Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    DOC_COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> importaciones instrucciones
Rule 2     programa -> instrucciones
Rule 3     instrucciones -> sentencias
Rule 4     instrucciones -> sentencias instrucciones
Rule 5     importaciones -> import
Rule 6     importaciones -> import importaciones
Rule 7     import -> IMPORT STRING SEMICOLON
Rule 8     sentencias -> asignar_variable
Rule 9     sentencias -> funcion
Rule 10    sentencias -> class
Rule 11    sentencias_funcion -> asignar_variable
Rule 12    sentencias_funcion -> cambiar_variable
Rule 13    sentencias_funcion -> impresion
Rule 14    sentencias_funcion -> condicional
Rule 15    sentencias_funcion -> retorno
Rule 16    sentencias_funcion -> while
Rule 17    sentencias_funcion -> do_while
Rule 18    sentencias_funcion -> for
Rule 19    sentencias_funcion -> for_each
Rule 20    sentencias_funcion -> invocacion
Rule 21    cuerpo_funcion -> sentencias_funcion
Rule 22    cuerpo_funcion -> sentencias_funcion cuerpo_funcion
Rule 23    sentencias_clase -> asignar_variable
Rule 24    sentencias_clase -> cambiar_variable
Rule 25    sentencias_clase -> funcion
Rule 26    sentencias_clase -> constructor
Rule 27    sentencias_clase -> funcion_static
Rule 28    cuerpo_clase -> sentencias_clase
Rule 29    cuerpo_clase -> sentencias_clase cuerpo_clase
Rule 30    class -> CLASS VARIABLE LKEY cuerpo_clase RKEY
Rule 31    invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON
Rule 32    invocacion -> getVariable LPAREN RPAREN SEMICOLON
Rule 33    invocar -> getVariable LPAREN element_list RPAREN
Rule 34    invocar -> getVariable LPAREN RPAREN
Rule 35    constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON
Rule 36    atributo_list -> THIS DOT VARIABLE
Rule 37    atributo_list -> THIS DOT VARIABLE COMA atributo_list
Rule 38    funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
Rule 39    funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
Rule 40    funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
Rule 41    funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
Rule 42    variables -> VARIABLE
Rule 43    variables -> variable_indexada
Rule 44    getVariable -> variables
Rule 45    getVariable -> variables DOT getVariable
Rule 46    asignar_variable -> tipo_dato variables asignador expresion SEMICOLON
Rule 47    asignar_variable -> tipo_dato variables SEMICOLON
Rule 48    asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
Rule 49    asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON
Rule 50    cambiar_variable -> variables modificador SEMICOLON
Rule 51    cambiar_variable -> variables asignador expresion SEMICOLON
Rule 52    modificador -> INCREMENT_VAR
Rule 53    modificador -> DECREMENT_VAR
Rule 54    asignador -> ASSIGN
Rule 55    asignador -> PLUS_ASSIGN
Rule 56    asignador -> MINUS_ASSIGN
Rule 57    asignador -> TIMES_ASSIGN
Rule 58    asignador -> DIVIDE_ASSIGN
Rule 59    asignador -> MODULO_ASSIGN
Rule 60    expresion -> operacion
Rule 61    expresion -> comparacion
Rule 62    expresion -> list
Rule 63    expresion -> diccionario
Rule 64    expresion -> set
Rule 65    expresion -> input
Rule 66    expresion -> invocar
Rule 67    retorno -> RETURN SEMICOLON
Rule 68    retorno -> RETURN expresion SEMICOLON
Rule 69    variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS
Rule 70    impresion -> PRINT LPAREN operacion RPAREN SEMICOLON
Rule 71    impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON
Rule 72    impresion -> PRINT LPAREN RPAREN SEMICOLON
Rule 73    input -> STDIN DOT READLINESYNC LPAREN RPAREN
Rule 74    elemento -> INT
Rule 75    elemento -> DOUBLE
Rule 76    elemento -> STRING
Rule 77    elemento -> BOOLEAN
Rule 78    elemento -> getVariable
Rule 79    comparacion -> operacion comparador operacion
Rule 80    comparacion_logica -> comparacion
Rule 81    comparacion_logica -> comparacion operador_logico comparacion_logica
Rule 82    operador_logico -> AND
Rule 83    operador_logico -> OR
Rule 84    operador_logico -> NOT
Rule 85    comparador -> EQUALITY
Rule 86    comparador -> INEQUALITY
Rule 87    comparador -> GREATER_THAN
Rule 88    comparador -> LESS_THAN
Rule 89    comparador -> GREATER_EQ_THAN
Rule 90    comparador -> LESS_EQ_THAN
Rule 91    operacion -> elemento
Rule 92    operacion -> elemento operador operacion
Rule 93    operador -> PLUS
Rule 94    operador -> MINUS
Rule 95    operador -> TIMES
Rule 96    operador -> DIVIDE
Rule 97    operador -> MODULO
Rule 98    list -> LBRACKETS element_list RBRACKETS
Rule 99    list -> LBRACKETS RBRACKETS
Rule 100   element_list -> elemento
Rule 101   element_list -> elemento COMA element_list
Rule 102   tipo_dato -> VOID
Rule 103   tipo_dato -> VARIABLE
Rule 104   tipo_dato -> FINAL_TYPE
Rule 105   tipo_dato -> CONST_TYPE
Rule 106   tipo_dato -> VAR_TYPE
Rule 107   tipo_dato -> INT_TYPE
Rule 108   tipo_dato -> STRING_TYPE
Rule 109   tipo_dato -> DOUBLE_TYPE
Rule 110   tipo_dato -> BOOL_TYPE
Rule 111   tipo_dato -> LIST LESS_THAN tipo_coleccion GREATER_THAN
Rule 112   tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
Rule 113   tipo_dato -> SET LESS_THAN tipo_coleccion GREATER_THAN
Rule 114   tipo_coleccion -> INT_TYPE
Rule 115   tipo_coleccion -> STRING_TYPE
Rule 116   tipo_coleccion -> DOUBLE_TYPE
Rule 117   tipo_coleccion -> FINAL_TYPE
Rule 118   tipo_coleccion -> CONST_TYPE
Rule 119   tipo_coleccion -> VAR_TYPE
Rule 120   tipo_coleccion -> BOOL_TYPE
Rule 121   for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
Rule 122   for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
Rule 123   for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
Rule 124   for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
Rule 125   for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
Rule 126   specific_instance -> DOS_PUNTOS VARIABLE
Rule 127   specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance
Rule 128   while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
Rule 129   while -> WHILE LPAREN condiciones RPAREN LKEY RKEY
Rule 130   do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
Rule 131   condiciones -> comparacion_logica
Rule 132   condiciones -> getVariable
Rule 133   condiciones -> BOOLEAN
Rule 134   condiciones -> invocar
Rule 135   inmutables -> STRING
Rule 136   inmutables -> INT
Rule 137   inmutables -> DOUBLE
Rule 138   key_element -> inmutables DOS_PUNTOS elemento
Rule 139   key_element_list -> key_element
Rule 140   key_element_list -> key_element COMA key_element_list
Rule 141   diccionario -> LKEY key_element_list RKEY
Rule 142   diccionario -> LKEY RKEY
Rule 143   diccionario -> DICT LPAREN RPAREN
Rule 144   set -> LKEY element_list RKEY
Rule 145   set -> CONJUNTO LPAREN RPAREN
Rule 146   condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
Rule 147   condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
Rule 148   condicional -> IF LPAREN condiciones RPAREN LKEY RKEY
Rule 149   condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
Rule 150   bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
Rule 151   bloques_else -> ELSE LKEY cuerpo_funcion RKEY
Rule 152   parametros -> tipo_dato VARIABLE
Rule 153   parametros -> tipo_dato VARIABLE COMA parametros

Terminals, with rules where they appear

AND                  : 82
ASSIGN               : 54
BOOLEAN              : 77 133
BOOL_TYPE            : 110 120
CLASS                : 30
COMA                 : 37 101 112 127 140 153
COMMENT              : 
CONJUNTO             : 145
CONST_TYPE           : 105 118
DECREMENT_VAR        : 53
DICT                 : 143
DIVIDE               : 96
DIVIDE_ASSIGN        : 58
DO                   : 130
DOC_COMMENT          : 
DOS_PUNTOS           : 126 127 138
DOT                  : 36 37 45 73
DOUBLE               : 75 137
DOUBLE_TYPE          : 109 116
ELSE                 : 150 151
EQUALITY             : 85
FINAL_TYPE           : 48 49 104 117
FOR                  : 121 122 123 124 125
GREATER_EQ_THAN      : 89
GREATER_THAN         : 87 111 112 113
IF                   : 146 147 148 149 150
IMPORT               : 7
IN                   : 124 125
INCREMENT_VAR        : 52
INEQUALITY           : 86
INT                  : 74 136
INT_TYPE             : 107 114
LBRACKETS            : 69 98 99
LESS_EQ_THAN         : 90
LESS_THAN            : 88 111 112 113
LIST                 : 111
LKEY                 : 30 38 39 40 41 121 122 123 124 125 128 129 130 141 142 144 146 147 148 149 150 151
LPAREN               : 31 32 33 34 35 38 39 40 41 70 71 72 73 121 122 123 124 125 125 128 129 130 143 145 146 147 148 149 150
MAP                  : 112
MINUS                : 94
MINUS_ASSIGN         : 56
MODULO               : 97
MODULO_ASSIGN        : 59
NOT                  : 84
OR                   : 83
PLUS                 : 93
PLUS_ASSIGN          : 55
PRINT                : 70 71 72
RBRACKETS            : 69 98 99
READLINESYNC         : 73
RETURN               : 67 68
RKEY                 : 30 38 39 40 41 121 122 123 124 125 128 129 130 141 142 144 146 147 148 149 150 151
RPAREN               : 31 32 33 34 35 38 39 40 41 70 71 72 73 121 122 123 124 125 125 128 129 130 143 145 146 147 148 149 150
SEMICOLON            : 7 31 32 35 46 47 48 49 50 51 67 68 70 71 72 121 122 122 123 123 130
SET                  : 113
STATIC               : 40 41
STDIN                : 73
STRING               : 7 76 135
STRING_TYPE          : 108 115
THIS                 : 36 37
TIMES                : 95
TIMES_ASSIGN         : 57
VARIABLE             : 30 35 36 37 38 39 40 41 42 69 103 121 122 123 124 125 125 126 127 152 153
VAR_TYPE             : 106 119
VOID                 : 102
WHILE                : 128 129 130
error                : 

Nonterminals, with rules where they appear

asignador            : 46 48 51
asignar_variable     : 8 11 23 121
atributo_list        : 35 37
bloques_else         : 146 149 150
cambiar_variable     : 12 24
class                : 10
comparacion          : 61 80 81
comparacion_logica   : 71 81 121 122 131
comparador           : 79
condicional          : 14
condiciones          : 128 129 130 146 147 148 149 150
constructor          : 26
cuerpo_clase         : 29 30
cuerpo_funcion       : 22 38 39 40 41 121 122 123 124 125 128 130 146 147 150 151
diccionario          : 63
do_while             : 17
element_list         : 31 33 98 101 144
elemento             : 91 92 100 101 138
expresion            : 46 48 51 68
for                  : 18
for_each             : 19
funcion              : 9 25
funcion_static       : 27
getVariable          : 31 32 33 34 45 78 124 132
import               : 5 6
importaciones        : 1 6
impresion            : 13
inmutables           : 69 138
input                : 65
instrucciones        : 1 2 4
invocacion           : 20
invocar              : 66 134
key_element          : 139 140
key_element_list     : 140 141
list                 : 62
modificador          : 50 121 122 123
operacion            : 60 70 79 79 92
operador             : 92
operador_logico      : 81
parametros           : 38 40 153
programa             : 0
retorno              : 15
sentencias           : 3 4
sentencias_clase     : 28 29
sentencias_funcion   : 21 22
set                  : 64
specific_instance    : 125 127
tipo_coleccion       : 111 112 112 113
tipo_dato            : 38 39 40 41 46 47 48 49 124 125 152 153
variable_indexada    : 43
variables            : 44 45 46 47 48 49 50 51
while                : 16

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . importaciones instrucciones
    (2) programa -> . instrucciones
    (5) importaciones -> . import
    (6) importaciones -> . import importaciones
    (3) instrucciones -> . sentencias
    (4) instrucciones -> . sentencias instrucciones
    (7) import -> . IMPORT STRING SEMICOLON
    (8) sentencias -> . asignar_variable
    (9) sentencias -> . funcion
    (10) sentencias -> . class
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (30) class -> . CLASS VARIABLE LKEY cuerpo_clase RKEY
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    IMPORT          shift and go to state 6
    FINAL_TYPE      shift and go to state 11
    CLASS           shift and go to state 13
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    programa                       shift and go to state 1
    importaciones                  shift and go to state 2
    instrucciones                  shift and go to state 3
    import                         shift and go to state 4
    sentencias                     shift and go to state 5
    asignar_variable               shift and go to state 7
    funcion                        shift and go to state 8
    class                          shift and go to state 9
    tipo_dato                      shift and go to state 10

state 1

    (0) S' -> programa .



state 2

    (1) programa -> importaciones . instrucciones
    (3) instrucciones -> . sentencias
    (4) instrucciones -> . sentencias instrucciones
    (8) sentencias -> . asignar_variable
    (9) sentencias -> . funcion
    (10) sentencias -> . class
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (30) class -> . CLASS VARIABLE LKEY cuerpo_clase RKEY
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    FINAL_TYPE      shift and go to state 11
    CLASS           shift and go to state 13
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    instrucciones                  shift and go to state 24
    sentencias                     shift and go to state 5
    asignar_variable               shift and go to state 7
    funcion                        shift and go to state 8
    class                          shift and go to state 9
    tipo_dato                      shift and go to state 10

state 3

    (2) programa -> instrucciones .

    $end            reduce using rule 2 (programa -> instrucciones .)


state 4

    (5) importaciones -> import .
    (6) importaciones -> import . importaciones
    (5) importaciones -> . import
    (6) importaciones -> . import importaciones
    (7) import -> . IMPORT STRING SEMICOLON

    FINAL_TYPE      reduce using rule 5 (importaciones -> import .)
    CLASS           reduce using rule 5 (importaciones -> import .)
    VOID            reduce using rule 5 (importaciones -> import .)
    VARIABLE        reduce using rule 5 (importaciones -> import .)
    CONST_TYPE      reduce using rule 5 (importaciones -> import .)
    VAR_TYPE        reduce using rule 5 (importaciones -> import .)
    INT_TYPE        reduce using rule 5 (importaciones -> import .)
    STRING_TYPE     reduce using rule 5 (importaciones -> import .)
    DOUBLE_TYPE     reduce using rule 5 (importaciones -> import .)
    BOOL_TYPE       reduce using rule 5 (importaciones -> import .)
    LIST            reduce using rule 5 (importaciones -> import .)
    MAP             reduce using rule 5 (importaciones -> import .)
    SET             reduce using rule 5 (importaciones -> import .)
    IMPORT          shift and go to state 6

    import                         shift and go to state 4
    importaciones                  shift and go to state 25

state 5

    (3) instrucciones -> sentencias .
    (4) instrucciones -> sentencias . instrucciones
    (3) instrucciones -> . sentencias
    (4) instrucciones -> . sentencias instrucciones
    (8) sentencias -> . asignar_variable
    (9) sentencias -> . funcion
    (10) sentencias -> . class
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (30) class -> . CLASS VARIABLE LKEY cuerpo_clase RKEY
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    $end            reduce using rule 3 (instrucciones -> sentencias .)
    FINAL_TYPE      shift and go to state 11
    CLASS           shift and go to state 13
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    sentencias                     shift and go to state 5
    instrucciones                  shift and go to state 26
    asignar_variable               shift and go to state 7
    funcion                        shift and go to state 8
    class                          shift and go to state 9
    tipo_dato                      shift and go to state 10

state 6

    (7) import -> IMPORT . STRING SEMICOLON

    STRING          shift and go to state 27


state 7

    (8) sentencias -> asignar_variable .

    FINAL_TYPE      reduce using rule 8 (sentencias -> asignar_variable .)
    CLASS           reduce using rule 8 (sentencias -> asignar_variable .)
    VOID            reduce using rule 8 (sentencias -> asignar_variable .)
    VARIABLE        reduce using rule 8 (sentencias -> asignar_variable .)
    CONST_TYPE      reduce using rule 8 (sentencias -> asignar_variable .)
    VAR_TYPE        reduce using rule 8 (sentencias -> asignar_variable .)
    INT_TYPE        reduce using rule 8 (sentencias -> asignar_variable .)
    STRING_TYPE     reduce using rule 8 (sentencias -> asignar_variable .)
    DOUBLE_TYPE     reduce using rule 8 (sentencias -> asignar_variable .)
    BOOL_TYPE       reduce using rule 8 (sentencias -> asignar_variable .)
    LIST            reduce using rule 8 (sentencias -> asignar_variable .)
    MAP             reduce using rule 8 (sentencias -> asignar_variable .)
    SET             reduce using rule 8 (sentencias -> asignar_variable .)
    $end            reduce using rule 8 (sentencias -> asignar_variable .)


state 8

    (9) sentencias -> funcion .

    FINAL_TYPE      reduce using rule 9 (sentencias -> funcion .)
    CLASS           reduce using rule 9 (sentencias -> funcion .)
    VOID            reduce using rule 9 (sentencias -> funcion .)
    VARIABLE        reduce using rule 9 (sentencias -> funcion .)
    CONST_TYPE      reduce using rule 9 (sentencias -> funcion .)
    VAR_TYPE        reduce using rule 9 (sentencias -> funcion .)
    INT_TYPE        reduce using rule 9 (sentencias -> funcion .)
    STRING_TYPE     reduce using rule 9 (sentencias -> funcion .)
    DOUBLE_TYPE     reduce using rule 9 (sentencias -> funcion .)
    BOOL_TYPE       reduce using rule 9 (sentencias -> funcion .)
    LIST            reduce using rule 9 (sentencias -> funcion .)
    MAP             reduce using rule 9 (sentencias -> funcion .)
    SET             reduce using rule 9 (sentencias -> funcion .)
    $end            reduce using rule 9 (sentencias -> funcion .)


state 9

    (10) sentencias -> class .

    FINAL_TYPE      reduce using rule 10 (sentencias -> class .)
    CLASS           reduce using rule 10 (sentencias -> class .)
    VOID            reduce using rule 10 (sentencias -> class .)
    VARIABLE        reduce using rule 10 (sentencias -> class .)
    CONST_TYPE      reduce using rule 10 (sentencias -> class .)
    VAR_TYPE        reduce using rule 10 (sentencias -> class .)
    INT_TYPE        reduce using rule 10 (sentencias -> class .)
    STRING_TYPE     reduce using rule 10 (sentencias -> class .)
    DOUBLE_TYPE     reduce using rule 10 (sentencias -> class .)
    BOOL_TYPE       reduce using rule 10 (sentencias -> class .)
    LIST            reduce using rule 10 (sentencias -> class .)
    MAP             reduce using rule 10 (sentencias -> class .)
    SET             reduce using rule 10 (sentencias -> class .)
    $end            reduce using rule 10 (sentencias -> class .)


state 10

    (46) asignar_variable -> tipo_dato . variables asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato . variables SEMICOLON
    (38) funcion -> tipo_dato . VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> tipo_dato . VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 29

    variables                      shift and go to state 28
    variable_indexada              shift and go to state 30

state 11

    (48) asignar_variable -> FINAL_TYPE . tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> FINAL_TYPE . tipo_dato variables SEMICOLON
    (104) tipo_dato -> FINAL_TYPE .
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

  ! shift/reduce conflict for VARIABLE resolved as shift
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    FINAL_TYPE      shift and go to state 31
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

  ! VARIABLE        [ reduce using rule 104 (tipo_dato -> FINAL_TYPE .) ]

    tipo_dato                      shift and go to state 32

state 12

    (103) tipo_dato -> VARIABLE .

    VARIABLE        reduce using rule 103 (tipo_dato -> VARIABLE .)


state 13

    (30) class -> CLASS . VARIABLE LKEY cuerpo_clase RKEY

    VARIABLE        shift and go to state 33


state 14

    (102) tipo_dato -> VOID .

    VARIABLE        reduce using rule 102 (tipo_dato -> VOID .)


state 15

    (105) tipo_dato -> CONST_TYPE .

    VARIABLE        reduce using rule 105 (tipo_dato -> CONST_TYPE .)


state 16

    (106) tipo_dato -> VAR_TYPE .

    VARIABLE        reduce using rule 106 (tipo_dato -> VAR_TYPE .)


state 17

    (107) tipo_dato -> INT_TYPE .

    VARIABLE        reduce using rule 107 (tipo_dato -> INT_TYPE .)


state 18

    (108) tipo_dato -> STRING_TYPE .

    VARIABLE        reduce using rule 108 (tipo_dato -> STRING_TYPE .)


state 19

    (109) tipo_dato -> DOUBLE_TYPE .

    VARIABLE        reduce using rule 109 (tipo_dato -> DOUBLE_TYPE .)


state 20

    (110) tipo_dato -> BOOL_TYPE .

    VARIABLE        reduce using rule 110 (tipo_dato -> BOOL_TYPE .)


state 21

    (111) tipo_dato -> LIST . LESS_THAN tipo_coleccion GREATER_THAN

    LESS_THAN       shift and go to state 34


state 22

    (112) tipo_dato -> MAP . LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN

    LESS_THAN       shift and go to state 35


state 23

    (113) tipo_dato -> SET . LESS_THAN tipo_coleccion GREATER_THAN

    LESS_THAN       shift and go to state 36


state 24

    (1) programa -> importaciones instrucciones .

    $end            reduce using rule 1 (programa -> importaciones instrucciones .)


state 25

    (6) importaciones -> import importaciones .

    FINAL_TYPE      reduce using rule 6 (importaciones -> import importaciones .)
    CLASS           reduce using rule 6 (importaciones -> import importaciones .)
    VOID            reduce using rule 6 (importaciones -> import importaciones .)
    VARIABLE        reduce using rule 6 (importaciones -> import importaciones .)
    CONST_TYPE      reduce using rule 6 (importaciones -> import importaciones .)
    VAR_TYPE        reduce using rule 6 (importaciones -> import importaciones .)
    INT_TYPE        reduce using rule 6 (importaciones -> import importaciones .)
    STRING_TYPE     reduce using rule 6 (importaciones -> import importaciones .)
    DOUBLE_TYPE     reduce using rule 6 (importaciones -> import importaciones .)
    BOOL_TYPE       reduce using rule 6 (importaciones -> import importaciones .)
    LIST            reduce using rule 6 (importaciones -> import importaciones .)
    MAP             reduce using rule 6 (importaciones -> import importaciones .)
    SET             reduce using rule 6 (importaciones -> import importaciones .)


state 26

    (4) instrucciones -> sentencias instrucciones .

    $end            reduce using rule 4 (instrucciones -> sentencias instrucciones .)


state 27

    (7) import -> IMPORT STRING . SEMICOLON

    SEMICOLON       shift and go to state 37


state 28

    (46) asignar_variable -> tipo_dato variables . asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato variables . SEMICOLON
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    SEMICOLON       shift and go to state 39
    ASSIGN          shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    TIMES_ASSIGN    shift and go to state 43
    DIVIDE_ASSIGN   shift and go to state 44
    MODULO_ASSIGN   shift and go to state 45

    asignador                      shift and go to state 38

state 29

    (38) funcion -> tipo_dato VARIABLE . LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> tipo_dato VARIABLE . LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (42) variables -> VARIABLE .
    (69) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    LPAREN          shift and go to state 46
    SEMICOLON       reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 47


state 30

    (43) variables -> variable_indexada .

    SEMICOLON       reduce using rule 43 (variables -> variable_indexada .)
    ASSIGN          reduce using rule 43 (variables -> variable_indexada .)
    PLUS_ASSIGN     reduce using rule 43 (variables -> variable_indexada .)
    MINUS_ASSIGN    reduce using rule 43 (variables -> variable_indexada .)
    TIMES_ASSIGN    reduce using rule 43 (variables -> variable_indexada .)
    DIVIDE_ASSIGN   reduce using rule 43 (variables -> variable_indexada .)
    MODULO_ASSIGN   reduce using rule 43 (variables -> variable_indexada .)
    DOT             reduce using rule 43 (variables -> variable_indexada .)
    LPAREN          reduce using rule 43 (variables -> variable_indexada .)
    PLUS            reduce using rule 43 (variables -> variable_indexada .)
    MINUS           reduce using rule 43 (variables -> variable_indexada .)
    TIMES           reduce using rule 43 (variables -> variable_indexada .)
    DIVIDE          reduce using rule 43 (variables -> variable_indexada .)
    MODULO          reduce using rule 43 (variables -> variable_indexada .)
    EQUALITY        reduce using rule 43 (variables -> variable_indexada .)
    INEQUALITY      reduce using rule 43 (variables -> variable_indexada .)
    GREATER_THAN    reduce using rule 43 (variables -> variable_indexada .)
    LESS_THAN       reduce using rule 43 (variables -> variable_indexada .)
    GREATER_EQ_THAN reduce using rule 43 (variables -> variable_indexada .)
    LESS_EQ_THAN    reduce using rule 43 (variables -> variable_indexada .)
    INCREMENT_VAR   reduce using rule 43 (variables -> variable_indexada .)
    DECREMENT_VAR   reduce using rule 43 (variables -> variable_indexada .)
    COMA            reduce using rule 43 (variables -> variable_indexada .)
    RBRACKETS       reduce using rule 43 (variables -> variable_indexada .)
    RKEY            reduce using rule 43 (variables -> variable_indexada .)
    AND             reduce using rule 43 (variables -> variable_indexada .)
    OR              reduce using rule 43 (variables -> variable_indexada .)
    NOT             reduce using rule 43 (variables -> variable_indexada .)
    RPAREN          reduce using rule 43 (variables -> variable_indexada .)


state 31

    (104) tipo_dato -> FINAL_TYPE .

    VARIABLE        reduce using rule 104 (tipo_dato -> FINAL_TYPE .)


state 32

    (48) asignar_variable -> FINAL_TYPE tipo_dato . variables asignador expresion SEMICOLON
    (49) asignar_variable -> FINAL_TYPE tipo_dato . variables SEMICOLON
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 49

    variables                      shift and go to state 48
    variable_indexada              shift and go to state 30

state 33

    (30) class -> CLASS VARIABLE . LKEY cuerpo_clase RKEY

    LKEY            shift and go to state 50


state 34

    (111) tipo_dato -> LIST LESS_THAN . tipo_coleccion GREATER_THAN
    (114) tipo_coleccion -> . INT_TYPE
    (115) tipo_coleccion -> . STRING_TYPE
    (116) tipo_coleccion -> . DOUBLE_TYPE
    (117) tipo_coleccion -> . FINAL_TYPE
    (118) tipo_coleccion -> . CONST_TYPE
    (119) tipo_coleccion -> . VAR_TYPE
    (120) tipo_coleccion -> . BOOL_TYPE

    INT_TYPE        shift and go to state 52
    STRING_TYPE     shift and go to state 53
    DOUBLE_TYPE     shift and go to state 54
    FINAL_TYPE      shift and go to state 55
    CONST_TYPE      shift and go to state 56
    VAR_TYPE        shift and go to state 57
    BOOL_TYPE       shift and go to state 58

    tipo_coleccion                 shift and go to state 51

state 35

    (112) tipo_dato -> MAP LESS_THAN . tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (114) tipo_coleccion -> . INT_TYPE
    (115) tipo_coleccion -> . STRING_TYPE
    (116) tipo_coleccion -> . DOUBLE_TYPE
    (117) tipo_coleccion -> . FINAL_TYPE
    (118) tipo_coleccion -> . CONST_TYPE
    (119) tipo_coleccion -> . VAR_TYPE
    (120) tipo_coleccion -> . BOOL_TYPE

    INT_TYPE        shift and go to state 52
    STRING_TYPE     shift and go to state 53
    DOUBLE_TYPE     shift and go to state 54
    FINAL_TYPE      shift and go to state 55
    CONST_TYPE      shift and go to state 56
    VAR_TYPE        shift and go to state 57
    BOOL_TYPE       shift and go to state 58

    tipo_coleccion                 shift and go to state 59

state 36

    (113) tipo_dato -> SET LESS_THAN . tipo_coleccion GREATER_THAN
    (114) tipo_coleccion -> . INT_TYPE
    (115) tipo_coleccion -> . STRING_TYPE
    (116) tipo_coleccion -> . DOUBLE_TYPE
    (117) tipo_coleccion -> . FINAL_TYPE
    (118) tipo_coleccion -> . CONST_TYPE
    (119) tipo_coleccion -> . VAR_TYPE
    (120) tipo_coleccion -> . BOOL_TYPE

    INT_TYPE        shift and go to state 52
    STRING_TYPE     shift and go to state 53
    DOUBLE_TYPE     shift and go to state 54
    FINAL_TYPE      shift and go to state 55
    CONST_TYPE      shift and go to state 56
    VAR_TYPE        shift and go to state 57
    BOOL_TYPE       shift and go to state 58

    tipo_coleccion                 shift and go to state 60

state 37

    (7) import -> IMPORT STRING SEMICOLON .

    IMPORT          reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    FINAL_TYPE      reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    CLASS           reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    VOID            reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    VARIABLE        reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    CONST_TYPE      reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    VAR_TYPE        reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    INT_TYPE        reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    STRING_TYPE     reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    BOOL_TYPE       reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    LIST            reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    MAP             reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    SET             reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)


state 38

    (46) asignar_variable -> tipo_dato variables asignador . expresion SEMICOLON
    (60) expresion -> . operacion
    (61) expresion -> . comparacion
    (62) expresion -> . list
    (63) expresion -> . diccionario
    (64) expresion -> . set
    (65) expresion -> . input
    (66) expresion -> . invocar
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (79) comparacion -> . operacion comparador operacion
    (98) list -> . LBRACKETS element_list RBRACKETS
    (99) list -> . LBRACKETS RBRACKETS
    (141) diccionario -> . LKEY key_element_list RKEY
    (142) diccionario -> . LKEY RKEY
    (143) diccionario -> . DICT LPAREN RPAREN
    (144) set -> . LKEY element_list RKEY
    (145) set -> . CONJUNTO LPAREN RPAREN
    (73) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    LBRACKETS       shift and go to state 71
    LKEY            shift and go to state 72
    DICT            shift and go to state 73
    CONJUNTO        shift and go to state 74
    STDIN           shift and go to state 75
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    variables                      shift and go to state 61
    expresion                      shift and go to state 62
    operacion                      shift and go to state 63
    comparacion                    shift and go to state 64
    list                           shift and go to state 65
    diccionario                    shift and go to state 66
    set                            shift and go to state 67
    input                          shift and go to state 68
    invocar                        shift and go to state 69
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 76
    variable_indexada              shift and go to state 30

state 39

    (47) asignar_variable -> tipo_dato variables SEMICOLON .

    FINAL_TYPE      reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    CLASS           reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    VOID            reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    VARIABLE        reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    CONST_TYPE      reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    VAR_TYPE        reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    INT_TYPE        reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    STRING_TYPE     reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    BOOL_TYPE       reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    LIST            reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    MAP             reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    SET             reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    $end            reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    STATIC          reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    RKEY            reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    PRINT           reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    IF              reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    RETURN          reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    WHILE           reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    DO              reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    FOR             reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    INT             reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    DOUBLE          reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    STRING          reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)
    BOOLEAN         reduce using rule 47 (asignar_variable -> tipo_dato variables SEMICOLON .)


state 40

    (54) asignador -> ASSIGN .

    LBRACKETS       reduce using rule 54 (asignador -> ASSIGN .)
    LKEY            reduce using rule 54 (asignador -> ASSIGN .)
    DICT            reduce using rule 54 (asignador -> ASSIGN .)
    CONJUNTO        reduce using rule 54 (asignador -> ASSIGN .)
    STDIN           reduce using rule 54 (asignador -> ASSIGN .)
    INT             reduce using rule 54 (asignador -> ASSIGN .)
    DOUBLE          reduce using rule 54 (asignador -> ASSIGN .)
    STRING          reduce using rule 54 (asignador -> ASSIGN .)
    BOOLEAN         reduce using rule 54 (asignador -> ASSIGN .)
    VARIABLE        reduce using rule 54 (asignador -> ASSIGN .)


state 41

    (55) asignador -> PLUS_ASSIGN .

    LBRACKETS       reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    LKEY            reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    DICT            reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    CONJUNTO        reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    STDIN           reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    INT             reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    DOUBLE          reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    STRING          reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    BOOLEAN         reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    VARIABLE        reduce using rule 55 (asignador -> PLUS_ASSIGN .)


state 42

    (56) asignador -> MINUS_ASSIGN .

    LBRACKETS       reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    LKEY            reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    DICT            reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    CONJUNTO        reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    STDIN           reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    INT             reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    DOUBLE          reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    STRING          reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    BOOLEAN         reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    VARIABLE        reduce using rule 56 (asignador -> MINUS_ASSIGN .)


state 43

    (57) asignador -> TIMES_ASSIGN .

    LBRACKETS       reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    LKEY            reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    DICT            reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    CONJUNTO        reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    STDIN           reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    INT             reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    DOUBLE          reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    STRING          reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    BOOLEAN         reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    VARIABLE        reduce using rule 57 (asignador -> TIMES_ASSIGN .)


state 44

    (58) asignador -> DIVIDE_ASSIGN .

    LBRACKETS       reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    LKEY            reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    DICT            reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    CONJUNTO        reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    STDIN           reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    INT             reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    DOUBLE          reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    BOOLEAN         reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    VARIABLE        reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)


state 45

    (59) asignador -> MODULO_ASSIGN .

    LBRACKETS       reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    LKEY            reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    DICT            reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    CONJUNTO        reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    STDIN           reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    INT             reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    DOUBLE          reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    STRING          reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    BOOLEAN         reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    VARIABLE        reduce using rule 59 (asignador -> MODULO_ASSIGN .)


state 46

    (38) funcion -> tipo_dato VARIABLE LPAREN . parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> tipo_dato VARIABLE LPAREN . RPAREN LKEY cuerpo_funcion RKEY
    (152) parametros -> . tipo_dato VARIABLE
    (153) parametros -> . tipo_dato VARIABLE COMA parametros
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    RPAREN          shift and go to state 83
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    FINAL_TYPE      shift and go to state 31
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 81
    parametros                     shift and go to state 82

state 47

    (69) variable_indexada -> VARIABLE LBRACKETS . inmutables RBRACKETS
    (135) inmutables -> . STRING
    (136) inmutables -> . INT
    (137) inmutables -> . DOUBLE

    STRING          shift and go to state 85
    INT             shift and go to state 86
    DOUBLE          shift and go to state 87

    inmutables                     shift and go to state 84

state 48

    (48) asignar_variable -> FINAL_TYPE tipo_dato variables . asignador expresion SEMICOLON
    (49) asignar_variable -> FINAL_TYPE tipo_dato variables . SEMICOLON
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    SEMICOLON       shift and go to state 89
    ASSIGN          shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    TIMES_ASSIGN    shift and go to state 43
    DIVIDE_ASSIGN   shift and go to state 44
    MODULO_ASSIGN   shift and go to state 45

    asignador                      shift and go to state 88

state 49

    (42) variables -> VARIABLE .
    (69) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    SEMICOLON       reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    DOT             reduce using rule 42 (variables -> VARIABLE .)
    LPAREN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS            reduce using rule 42 (variables -> VARIABLE .)
    MINUS           reduce using rule 42 (variables -> VARIABLE .)
    TIMES           reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE          reduce using rule 42 (variables -> VARIABLE .)
    MODULO          reduce using rule 42 (variables -> VARIABLE .)
    EQUALITY        reduce using rule 42 (variables -> VARIABLE .)
    INEQUALITY      reduce using rule 42 (variables -> VARIABLE .)
    GREATER_THAN    reduce using rule 42 (variables -> VARIABLE .)
    LESS_THAN       reduce using rule 42 (variables -> VARIABLE .)
    GREATER_EQ_THAN reduce using rule 42 (variables -> VARIABLE .)
    LESS_EQ_THAN    reduce using rule 42 (variables -> VARIABLE .)
    COMA            reduce using rule 42 (variables -> VARIABLE .)
    RBRACKETS       reduce using rule 42 (variables -> VARIABLE .)
    RKEY            reduce using rule 42 (variables -> VARIABLE .)
    AND             reduce using rule 42 (variables -> VARIABLE .)
    OR              reduce using rule 42 (variables -> VARIABLE .)
    NOT             reduce using rule 42 (variables -> VARIABLE .)
    RPAREN          reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 47


state 50

    (30) class -> CLASS VARIABLE LKEY . cuerpo_clase RKEY
    (28) cuerpo_clase -> . sentencias_clase
    (29) cuerpo_clase -> . sentencias_clase cuerpo_clase
    (23) sentencias_clase -> . asignar_variable
    (24) sentencias_clase -> . cambiar_variable
    (25) sentencias_clase -> . funcion
    (26) sentencias_clase -> . constructor
    (27) sentencias_clase -> . funcion_static
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (35) constructor -> . VARIABLE LPAREN atributo_list RPAREN SEMICOLON
    (40) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    VARIABLE        shift and go to state 90
    STATIC          shift and go to state 99
    VOID            shift and go to state 14
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_clase                   shift and go to state 91
    sentencias_clase               shift and go to state 92
    asignar_variable               shift and go to state 93
    cambiar_variable               shift and go to state 94
    funcion                        shift and go to state 95
    constructor                    shift and go to state 96
    funcion_static                 shift and go to state 97
    tipo_dato                      shift and go to state 10
    variables                      shift and go to state 98
    variable_indexada              shift and go to state 30

state 51

    (111) tipo_dato -> LIST LESS_THAN tipo_coleccion . GREATER_THAN

    GREATER_THAN    shift and go to state 100


state 52

    (114) tipo_coleccion -> INT_TYPE .

    GREATER_THAN    reduce using rule 114 (tipo_coleccion -> INT_TYPE .)
    COMA            reduce using rule 114 (tipo_coleccion -> INT_TYPE .)


state 53

    (115) tipo_coleccion -> STRING_TYPE .

    GREATER_THAN    reduce using rule 115 (tipo_coleccion -> STRING_TYPE .)
    COMA            reduce using rule 115 (tipo_coleccion -> STRING_TYPE .)


state 54

    (116) tipo_coleccion -> DOUBLE_TYPE .

    GREATER_THAN    reduce using rule 116 (tipo_coleccion -> DOUBLE_TYPE .)
    COMA            reduce using rule 116 (tipo_coleccion -> DOUBLE_TYPE .)


state 55

    (117) tipo_coleccion -> FINAL_TYPE .

    GREATER_THAN    reduce using rule 117 (tipo_coleccion -> FINAL_TYPE .)
    COMA            reduce using rule 117 (tipo_coleccion -> FINAL_TYPE .)


state 56

    (118) tipo_coleccion -> CONST_TYPE .

    GREATER_THAN    reduce using rule 118 (tipo_coleccion -> CONST_TYPE .)
    COMA            reduce using rule 118 (tipo_coleccion -> CONST_TYPE .)


state 57

    (119) tipo_coleccion -> VAR_TYPE .

    GREATER_THAN    reduce using rule 119 (tipo_coleccion -> VAR_TYPE .)
    COMA            reduce using rule 119 (tipo_coleccion -> VAR_TYPE .)


state 58

    (120) tipo_coleccion -> BOOL_TYPE .

    GREATER_THAN    reduce using rule 120 (tipo_coleccion -> BOOL_TYPE .)
    COMA            reduce using rule 120 (tipo_coleccion -> BOOL_TYPE .)


state 59

    (112) tipo_dato -> MAP LESS_THAN tipo_coleccion . COMA tipo_coleccion GREATER_THAN

    COMA            shift and go to state 101


state 60

    (113) tipo_dato -> SET LESS_THAN tipo_coleccion . GREATER_THAN

    GREATER_THAN    shift and go to state 102


state 61

    (44) getVariable -> variables .
    (45) getVariable -> variables . DOT getVariable

    LPAREN          reduce using rule 44 (getVariable -> variables .)
    PLUS            reduce using rule 44 (getVariable -> variables .)
    MINUS           reduce using rule 44 (getVariable -> variables .)
    TIMES           reduce using rule 44 (getVariable -> variables .)
    DIVIDE          reduce using rule 44 (getVariable -> variables .)
    MODULO          reduce using rule 44 (getVariable -> variables .)
    EQUALITY        reduce using rule 44 (getVariable -> variables .)
    INEQUALITY      reduce using rule 44 (getVariable -> variables .)
    GREATER_THAN    reduce using rule 44 (getVariable -> variables .)
    LESS_THAN       reduce using rule 44 (getVariable -> variables .)
    GREATER_EQ_THAN reduce using rule 44 (getVariable -> variables .)
    LESS_EQ_THAN    reduce using rule 44 (getVariable -> variables .)
    SEMICOLON       reduce using rule 44 (getVariable -> variables .)
    COMA            reduce using rule 44 (getVariable -> variables .)
    RBRACKETS       reduce using rule 44 (getVariable -> variables .)
    RKEY            reduce using rule 44 (getVariable -> variables .)
    AND             reduce using rule 44 (getVariable -> variables .)
    OR              reduce using rule 44 (getVariable -> variables .)
    NOT             reduce using rule 44 (getVariable -> variables .)
    RPAREN          reduce using rule 44 (getVariable -> variables .)
    DOT             shift and go to state 103


state 62

    (46) asignar_variable -> tipo_dato variables asignador expresion . SEMICOLON

    SEMICOLON       shift and go to state 104


state 63

    (60) expresion -> operacion .
    (79) comparacion -> operacion . comparador operacion
    (85) comparador -> . EQUALITY
    (86) comparador -> . INEQUALITY
    (87) comparador -> . GREATER_THAN
    (88) comparador -> . LESS_THAN
    (89) comparador -> . GREATER_EQ_THAN
    (90) comparador -> . LESS_EQ_THAN

    SEMICOLON       reduce using rule 60 (expresion -> operacion .)
    EQUALITY        shift and go to state 106
    INEQUALITY      shift and go to state 107
    GREATER_THAN    shift and go to state 108
    LESS_THAN       shift and go to state 109
    GREATER_EQ_THAN shift and go to state 110
    LESS_EQ_THAN    shift and go to state 111

    comparador                     shift and go to state 105

state 64

    (61) expresion -> comparacion .

    SEMICOLON       reduce using rule 61 (expresion -> comparacion .)


state 65

    (62) expresion -> list .

    SEMICOLON       reduce using rule 62 (expresion -> list .)


state 66

    (63) expresion -> diccionario .

    SEMICOLON       reduce using rule 63 (expresion -> diccionario .)


state 67

    (64) expresion -> set .

    SEMICOLON       reduce using rule 64 (expresion -> set .)


state 68

    (65) expresion -> input .

    SEMICOLON       reduce using rule 65 (expresion -> input .)


state 69

    (66) expresion -> invocar .

    SEMICOLON       reduce using rule 66 (expresion -> invocar .)


state 70

    (91) operacion -> elemento .
    (92) operacion -> elemento . operador operacion
    (93) operador -> . PLUS
    (94) operador -> . MINUS
    (95) operador -> . TIMES
    (96) operador -> . DIVIDE
    (97) operador -> . MODULO

    EQUALITY        reduce using rule 91 (operacion -> elemento .)
    INEQUALITY      reduce using rule 91 (operacion -> elemento .)
    GREATER_THAN    reduce using rule 91 (operacion -> elemento .)
    LESS_THAN       reduce using rule 91 (operacion -> elemento .)
    GREATER_EQ_THAN reduce using rule 91 (operacion -> elemento .)
    LESS_EQ_THAN    reduce using rule 91 (operacion -> elemento .)
    SEMICOLON       reduce using rule 91 (operacion -> elemento .)
    AND             reduce using rule 91 (operacion -> elemento .)
    OR              reduce using rule 91 (operacion -> elemento .)
    NOT             reduce using rule 91 (operacion -> elemento .)
    RPAREN          reduce using rule 91 (operacion -> elemento .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    MODULO          shift and go to state 117

    operador                       shift and go to state 112

state 71

    (98) list -> LBRACKETS . element_list RBRACKETS
    (99) list -> LBRACKETS . RBRACKETS
    (100) element_list -> . elemento
    (101) element_list -> . elemento COMA element_list
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RBRACKETS       shift and go to state 119
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    element_list                   shift and go to state 118
    elemento                       shift and go to state 120
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 72

    (141) diccionario -> LKEY . key_element_list RKEY
    (142) diccionario -> LKEY . RKEY
    (144) set -> LKEY . element_list RKEY
    (139) key_element_list -> . key_element
    (140) key_element_list -> . key_element COMA key_element_list
    (100) element_list -> . elemento
    (101) element_list -> . elemento COMA element_list
    (138) key_element -> . inmutables DOS_PUNTOS elemento
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (135) inmutables -> . STRING
    (136) inmutables -> . INT
    (137) inmutables -> . DOUBLE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            shift and go to state 123
    INT             shift and go to state 127
    DOUBLE          shift and go to state 128
    STRING          shift and go to state 129
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    key_element_list               shift and go to state 122
    element_list                   shift and go to state 124
    key_element                    shift and go to state 125
    elemento                       shift and go to state 120
    inmutables                     shift and go to state 126
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 73

    (143) diccionario -> DICT . LPAREN RPAREN

    LPAREN          shift and go to state 130


state 74

    (145) set -> CONJUNTO . LPAREN RPAREN

    LPAREN          shift and go to state 131


state 75

    (73) input -> STDIN . DOT READLINESYNC LPAREN RPAREN

    DOT             shift and go to state 132


state 76

    (33) invocar -> getVariable . LPAREN element_list RPAREN
    (34) invocar -> getVariable . LPAREN RPAREN
    (78) elemento -> getVariable .

    LPAREN          shift and go to state 133
    PLUS            reduce using rule 78 (elemento -> getVariable .)
    MINUS           reduce using rule 78 (elemento -> getVariable .)
    TIMES           reduce using rule 78 (elemento -> getVariable .)
    DIVIDE          reduce using rule 78 (elemento -> getVariable .)
    MODULO          reduce using rule 78 (elemento -> getVariable .)
    EQUALITY        reduce using rule 78 (elemento -> getVariable .)
    INEQUALITY      reduce using rule 78 (elemento -> getVariable .)
    GREATER_THAN    reduce using rule 78 (elemento -> getVariable .)
    LESS_THAN       reduce using rule 78 (elemento -> getVariable .)
    GREATER_EQ_THAN reduce using rule 78 (elemento -> getVariable .)
    LESS_EQ_THAN    reduce using rule 78 (elemento -> getVariable .)
    SEMICOLON       reduce using rule 78 (elemento -> getVariable .)


state 77

    (74) elemento -> INT .

    PLUS            reduce using rule 74 (elemento -> INT .)
    MINUS           reduce using rule 74 (elemento -> INT .)
    TIMES           reduce using rule 74 (elemento -> INT .)
    DIVIDE          reduce using rule 74 (elemento -> INT .)
    MODULO          reduce using rule 74 (elemento -> INT .)
    EQUALITY        reduce using rule 74 (elemento -> INT .)
    INEQUALITY      reduce using rule 74 (elemento -> INT .)
    GREATER_THAN    reduce using rule 74 (elemento -> INT .)
    LESS_THAN       reduce using rule 74 (elemento -> INT .)
    GREATER_EQ_THAN reduce using rule 74 (elemento -> INT .)
    LESS_EQ_THAN    reduce using rule 74 (elemento -> INT .)
    SEMICOLON       reduce using rule 74 (elemento -> INT .)
    COMA            reduce using rule 74 (elemento -> INT .)
    RBRACKETS       reduce using rule 74 (elemento -> INT .)
    AND             reduce using rule 74 (elemento -> INT .)
    OR              reduce using rule 74 (elemento -> INT .)
    NOT             reduce using rule 74 (elemento -> INT .)
    RPAREN          reduce using rule 74 (elemento -> INT .)
    RKEY            reduce using rule 74 (elemento -> INT .)


state 78

    (75) elemento -> DOUBLE .

    PLUS            reduce using rule 75 (elemento -> DOUBLE .)
    MINUS           reduce using rule 75 (elemento -> DOUBLE .)
    TIMES           reduce using rule 75 (elemento -> DOUBLE .)
    DIVIDE          reduce using rule 75 (elemento -> DOUBLE .)
    MODULO          reduce using rule 75 (elemento -> DOUBLE .)
    EQUALITY        reduce using rule 75 (elemento -> DOUBLE .)
    INEQUALITY      reduce using rule 75 (elemento -> DOUBLE .)
    GREATER_THAN    reduce using rule 75 (elemento -> DOUBLE .)
    LESS_THAN       reduce using rule 75 (elemento -> DOUBLE .)
    GREATER_EQ_THAN reduce using rule 75 (elemento -> DOUBLE .)
    LESS_EQ_THAN    reduce using rule 75 (elemento -> DOUBLE .)
    SEMICOLON       reduce using rule 75 (elemento -> DOUBLE .)
    COMA            reduce using rule 75 (elemento -> DOUBLE .)
    RBRACKETS       reduce using rule 75 (elemento -> DOUBLE .)
    AND             reduce using rule 75 (elemento -> DOUBLE .)
    OR              reduce using rule 75 (elemento -> DOUBLE .)
    NOT             reduce using rule 75 (elemento -> DOUBLE .)
    RPAREN          reduce using rule 75 (elemento -> DOUBLE .)
    RKEY            reduce using rule 75 (elemento -> DOUBLE .)


state 79

    (76) elemento -> STRING .

    PLUS            reduce using rule 76 (elemento -> STRING .)
    MINUS           reduce using rule 76 (elemento -> STRING .)
    TIMES           reduce using rule 76 (elemento -> STRING .)
    DIVIDE          reduce using rule 76 (elemento -> STRING .)
    MODULO          reduce using rule 76 (elemento -> STRING .)
    EQUALITY        reduce using rule 76 (elemento -> STRING .)
    INEQUALITY      reduce using rule 76 (elemento -> STRING .)
    GREATER_THAN    reduce using rule 76 (elemento -> STRING .)
    LESS_THAN       reduce using rule 76 (elemento -> STRING .)
    GREATER_EQ_THAN reduce using rule 76 (elemento -> STRING .)
    LESS_EQ_THAN    reduce using rule 76 (elemento -> STRING .)
    SEMICOLON       reduce using rule 76 (elemento -> STRING .)
    COMA            reduce using rule 76 (elemento -> STRING .)
    RBRACKETS       reduce using rule 76 (elemento -> STRING .)
    AND             reduce using rule 76 (elemento -> STRING .)
    OR              reduce using rule 76 (elemento -> STRING .)
    NOT             reduce using rule 76 (elemento -> STRING .)
    RPAREN          reduce using rule 76 (elemento -> STRING .)
    RKEY            reduce using rule 76 (elemento -> STRING .)


state 80

    (77) elemento -> BOOLEAN .

    PLUS            reduce using rule 77 (elemento -> BOOLEAN .)
    MINUS           reduce using rule 77 (elemento -> BOOLEAN .)
    TIMES           reduce using rule 77 (elemento -> BOOLEAN .)
    DIVIDE          reduce using rule 77 (elemento -> BOOLEAN .)
    MODULO          reduce using rule 77 (elemento -> BOOLEAN .)
    EQUALITY        reduce using rule 77 (elemento -> BOOLEAN .)
    INEQUALITY      reduce using rule 77 (elemento -> BOOLEAN .)
    GREATER_THAN    reduce using rule 77 (elemento -> BOOLEAN .)
    LESS_THAN       reduce using rule 77 (elemento -> BOOLEAN .)
    GREATER_EQ_THAN reduce using rule 77 (elemento -> BOOLEAN .)
    LESS_EQ_THAN    reduce using rule 77 (elemento -> BOOLEAN .)
    SEMICOLON       reduce using rule 77 (elemento -> BOOLEAN .)
    COMA            reduce using rule 77 (elemento -> BOOLEAN .)
    RBRACKETS       reduce using rule 77 (elemento -> BOOLEAN .)
    RKEY            reduce using rule 77 (elemento -> BOOLEAN .)
    AND             reduce using rule 77 (elemento -> BOOLEAN .)
    OR              reduce using rule 77 (elemento -> BOOLEAN .)
    NOT             reduce using rule 77 (elemento -> BOOLEAN .)
    RPAREN          reduce using rule 77 (elemento -> BOOLEAN .)


state 81

    (152) parametros -> tipo_dato . VARIABLE
    (153) parametros -> tipo_dato . VARIABLE COMA parametros

    VARIABLE        shift and go to state 134


state 82

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 135


state 83

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 136


state 84

    (69) variable_indexada -> VARIABLE LBRACKETS inmutables . RBRACKETS

    RBRACKETS       shift and go to state 137


state 85

    (135) inmutables -> STRING .

    RBRACKETS       reduce using rule 135 (inmutables -> STRING .)
    DOS_PUNTOS      reduce using rule 135 (inmutables -> STRING .)


state 86

    (136) inmutables -> INT .

    RBRACKETS       reduce using rule 136 (inmutables -> INT .)
    DOS_PUNTOS      reduce using rule 136 (inmutables -> INT .)


state 87

    (137) inmutables -> DOUBLE .

    RBRACKETS       reduce using rule 137 (inmutables -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 137 (inmutables -> DOUBLE .)


state 88

    (48) asignar_variable -> FINAL_TYPE tipo_dato variables asignador . expresion SEMICOLON
    (60) expresion -> . operacion
    (61) expresion -> . comparacion
    (62) expresion -> . list
    (63) expresion -> . diccionario
    (64) expresion -> . set
    (65) expresion -> . input
    (66) expresion -> . invocar
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (79) comparacion -> . operacion comparador operacion
    (98) list -> . LBRACKETS element_list RBRACKETS
    (99) list -> . LBRACKETS RBRACKETS
    (141) diccionario -> . LKEY key_element_list RKEY
    (142) diccionario -> . LKEY RKEY
    (143) diccionario -> . DICT LPAREN RPAREN
    (144) set -> . LKEY element_list RKEY
    (145) set -> . CONJUNTO LPAREN RPAREN
    (73) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    LBRACKETS       shift and go to state 71
    LKEY            shift and go to state 72
    DICT            shift and go to state 73
    CONJUNTO        shift and go to state 74
    STDIN           shift and go to state 75
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    variables                      shift and go to state 61
    expresion                      shift and go to state 138
    operacion                      shift and go to state 63
    comparacion                    shift and go to state 64
    list                           shift and go to state 65
    diccionario                    shift and go to state 66
    set                            shift and go to state 67
    input                          shift and go to state 68
    invocar                        shift and go to state 69
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 76
    variable_indexada              shift and go to state 30

state 89

    (49) asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .

    FINAL_TYPE      reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    CLASS           reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    VOID            reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    VARIABLE        reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    CONST_TYPE      reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    VAR_TYPE        reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    INT_TYPE        reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    STRING_TYPE     reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    BOOL_TYPE       reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    LIST            reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    MAP             reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    SET             reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    $end            reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    STATIC          reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    RKEY            reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    PRINT           reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    IF              reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    RETURN          reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    WHILE           reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    DO              reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    FOR             reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    INT             reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    DOUBLE          reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    STRING          reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)
    BOOLEAN         reduce using rule 49 (asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON .)


state 90

    (35) constructor -> VARIABLE . LPAREN atributo_list RPAREN SEMICOLON
    (103) tipo_dato -> VARIABLE .
    (42) variables -> VARIABLE .
    (69) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    LPAREN          shift and go to state 139
    VARIABLE        reduce using rule 103 (tipo_dato -> VARIABLE .)
    INCREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    DECREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 47


state 91

    (30) class -> CLASS VARIABLE LKEY cuerpo_clase . RKEY

    RKEY            shift and go to state 140


state 92

    (28) cuerpo_clase -> sentencias_clase .
    (29) cuerpo_clase -> sentencias_clase . cuerpo_clase
    (28) cuerpo_clase -> . sentencias_clase
    (29) cuerpo_clase -> . sentencias_clase cuerpo_clase
    (23) sentencias_clase -> . asignar_variable
    (24) sentencias_clase -> . cambiar_variable
    (25) sentencias_clase -> . funcion
    (26) sentencias_clase -> . constructor
    (27) sentencias_clase -> . funcion_static
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (35) constructor -> . VARIABLE LPAREN atributo_list RPAREN SEMICOLON
    (40) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            reduce using rule 28 (cuerpo_clase -> sentencias_clase .)
    FINAL_TYPE      shift and go to state 11
    VARIABLE        shift and go to state 90
    STATIC          shift and go to state 99
    VOID            shift and go to state 14
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    sentencias_clase               shift and go to state 92
    cuerpo_clase                   shift and go to state 141
    asignar_variable               shift and go to state 93
    cambiar_variable               shift and go to state 94
    funcion                        shift and go to state 95
    constructor                    shift and go to state 96
    funcion_static                 shift and go to state 97
    tipo_dato                      shift and go to state 10
    variables                      shift and go to state 98
    variable_indexada              shift and go to state 30

state 93

    (23) sentencias_clase -> asignar_variable .

    FINAL_TYPE      reduce using rule 23 (sentencias_clase -> asignar_variable .)
    VARIABLE        reduce using rule 23 (sentencias_clase -> asignar_variable .)
    STATIC          reduce using rule 23 (sentencias_clase -> asignar_variable .)
    VOID            reduce using rule 23 (sentencias_clase -> asignar_variable .)
    CONST_TYPE      reduce using rule 23 (sentencias_clase -> asignar_variable .)
    VAR_TYPE        reduce using rule 23 (sentencias_clase -> asignar_variable .)
    INT_TYPE        reduce using rule 23 (sentencias_clase -> asignar_variable .)
    STRING_TYPE     reduce using rule 23 (sentencias_clase -> asignar_variable .)
    DOUBLE_TYPE     reduce using rule 23 (sentencias_clase -> asignar_variable .)
    BOOL_TYPE       reduce using rule 23 (sentencias_clase -> asignar_variable .)
    LIST            reduce using rule 23 (sentencias_clase -> asignar_variable .)
    MAP             reduce using rule 23 (sentencias_clase -> asignar_variable .)
    SET             reduce using rule 23 (sentencias_clase -> asignar_variable .)
    RKEY            reduce using rule 23 (sentencias_clase -> asignar_variable .)


state 94

    (24) sentencias_clase -> cambiar_variable .

    FINAL_TYPE      reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    VARIABLE        reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    STATIC          reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    VOID            reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    CONST_TYPE      reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    VAR_TYPE        reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    INT_TYPE        reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    STRING_TYPE     reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    DOUBLE_TYPE     reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    BOOL_TYPE       reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    LIST            reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    MAP             reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    SET             reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    RKEY            reduce using rule 24 (sentencias_clase -> cambiar_variable .)


state 95

    (25) sentencias_clase -> funcion .

    FINAL_TYPE      reduce using rule 25 (sentencias_clase -> funcion .)
    VARIABLE        reduce using rule 25 (sentencias_clase -> funcion .)
    STATIC          reduce using rule 25 (sentencias_clase -> funcion .)
    VOID            reduce using rule 25 (sentencias_clase -> funcion .)
    CONST_TYPE      reduce using rule 25 (sentencias_clase -> funcion .)
    VAR_TYPE        reduce using rule 25 (sentencias_clase -> funcion .)
    INT_TYPE        reduce using rule 25 (sentencias_clase -> funcion .)
    STRING_TYPE     reduce using rule 25 (sentencias_clase -> funcion .)
    DOUBLE_TYPE     reduce using rule 25 (sentencias_clase -> funcion .)
    BOOL_TYPE       reduce using rule 25 (sentencias_clase -> funcion .)
    LIST            reduce using rule 25 (sentencias_clase -> funcion .)
    MAP             reduce using rule 25 (sentencias_clase -> funcion .)
    SET             reduce using rule 25 (sentencias_clase -> funcion .)
    RKEY            reduce using rule 25 (sentencias_clase -> funcion .)


state 96

    (26) sentencias_clase -> constructor .

    FINAL_TYPE      reduce using rule 26 (sentencias_clase -> constructor .)
    VARIABLE        reduce using rule 26 (sentencias_clase -> constructor .)
    STATIC          reduce using rule 26 (sentencias_clase -> constructor .)
    VOID            reduce using rule 26 (sentencias_clase -> constructor .)
    CONST_TYPE      reduce using rule 26 (sentencias_clase -> constructor .)
    VAR_TYPE        reduce using rule 26 (sentencias_clase -> constructor .)
    INT_TYPE        reduce using rule 26 (sentencias_clase -> constructor .)
    STRING_TYPE     reduce using rule 26 (sentencias_clase -> constructor .)
    DOUBLE_TYPE     reduce using rule 26 (sentencias_clase -> constructor .)
    BOOL_TYPE       reduce using rule 26 (sentencias_clase -> constructor .)
    LIST            reduce using rule 26 (sentencias_clase -> constructor .)
    MAP             reduce using rule 26 (sentencias_clase -> constructor .)
    SET             reduce using rule 26 (sentencias_clase -> constructor .)
    RKEY            reduce using rule 26 (sentencias_clase -> constructor .)


state 97

    (27) sentencias_clase -> funcion_static .

    FINAL_TYPE      reduce using rule 27 (sentencias_clase -> funcion_static .)
    VARIABLE        reduce using rule 27 (sentencias_clase -> funcion_static .)
    STATIC          reduce using rule 27 (sentencias_clase -> funcion_static .)
    VOID            reduce using rule 27 (sentencias_clase -> funcion_static .)
    CONST_TYPE      reduce using rule 27 (sentencias_clase -> funcion_static .)
    VAR_TYPE        reduce using rule 27 (sentencias_clase -> funcion_static .)
    INT_TYPE        reduce using rule 27 (sentencias_clase -> funcion_static .)
    STRING_TYPE     reduce using rule 27 (sentencias_clase -> funcion_static .)
    DOUBLE_TYPE     reduce using rule 27 (sentencias_clase -> funcion_static .)
    BOOL_TYPE       reduce using rule 27 (sentencias_clase -> funcion_static .)
    LIST            reduce using rule 27 (sentencias_clase -> funcion_static .)
    MAP             reduce using rule 27 (sentencias_clase -> funcion_static .)
    SET             reduce using rule 27 (sentencias_clase -> funcion_static .)
    RKEY            reduce using rule 27 (sentencias_clase -> funcion_static .)


state 98

    (50) cambiar_variable -> variables . modificador SEMICOLON
    (51) cambiar_variable -> variables . asignador expresion SEMICOLON
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    INCREMENT_VAR   shift and go to state 144
    DECREMENT_VAR   shift and go to state 145
    ASSIGN          shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    TIMES_ASSIGN    shift and go to state 43
    DIVIDE_ASSIGN   shift and go to state 44
    MODULO_ASSIGN   shift and go to state 45

    modificador                    shift and go to state 142
    asignador                      shift and go to state 143

state 99

    (40) funcion_static -> STATIC . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    FINAL_TYPE      shift and go to state 31
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 146

state 100

    (111) tipo_dato -> LIST LESS_THAN tipo_coleccion GREATER_THAN .

    VARIABLE        reduce using rule 111 (tipo_dato -> LIST LESS_THAN tipo_coleccion GREATER_THAN .)


state 101

    (112) tipo_dato -> MAP LESS_THAN tipo_coleccion COMA . tipo_coleccion GREATER_THAN
    (114) tipo_coleccion -> . INT_TYPE
    (115) tipo_coleccion -> . STRING_TYPE
    (116) tipo_coleccion -> . DOUBLE_TYPE
    (117) tipo_coleccion -> . FINAL_TYPE
    (118) tipo_coleccion -> . CONST_TYPE
    (119) tipo_coleccion -> . VAR_TYPE
    (120) tipo_coleccion -> . BOOL_TYPE

    INT_TYPE        shift and go to state 52
    STRING_TYPE     shift and go to state 53
    DOUBLE_TYPE     shift and go to state 54
    FINAL_TYPE      shift and go to state 55
    CONST_TYPE      shift and go to state 56
    VAR_TYPE        shift and go to state 57
    BOOL_TYPE       shift and go to state 58

    tipo_coleccion                 shift and go to state 147

state 102

    (113) tipo_dato -> SET LESS_THAN tipo_coleccion GREATER_THAN .

    VARIABLE        reduce using rule 113 (tipo_dato -> SET LESS_THAN tipo_coleccion GREATER_THAN .)


state 103

    (45) getVariable -> variables DOT . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 49

    variables                      shift and go to state 61
    getVariable                    shift and go to state 148
    variable_indexada              shift and go to state 30

state 104

    (46) asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .

    FINAL_TYPE      reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    CLASS           reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    VOID            reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    VARIABLE        reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    INT_TYPE        reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    LIST            reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    MAP             reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    SET             reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    $end            reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    STATIC          reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    RKEY            reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    PRINT           reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    IF              reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    RETURN          reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    WHILE           reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    DO              reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    FOR             reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    INT             reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    DOUBLE          reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    STRING          reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)
    BOOLEAN         reduce using rule 46 (asignar_variable -> tipo_dato variables asignador expresion SEMICOLON .)


state 105

    (79) comparacion -> operacion comparador . operacion
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    operacion                      shift and go to state 149
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 106

    (85) comparador -> EQUALITY .

    INT             reduce using rule 85 (comparador -> EQUALITY .)
    DOUBLE          reduce using rule 85 (comparador -> EQUALITY .)
    STRING          reduce using rule 85 (comparador -> EQUALITY .)
    BOOLEAN         reduce using rule 85 (comparador -> EQUALITY .)
    VARIABLE        reduce using rule 85 (comparador -> EQUALITY .)


state 107

    (86) comparador -> INEQUALITY .

    INT             reduce using rule 86 (comparador -> INEQUALITY .)
    DOUBLE          reduce using rule 86 (comparador -> INEQUALITY .)
    STRING          reduce using rule 86 (comparador -> INEQUALITY .)
    BOOLEAN         reduce using rule 86 (comparador -> INEQUALITY .)
    VARIABLE        reduce using rule 86 (comparador -> INEQUALITY .)


state 108

    (87) comparador -> GREATER_THAN .

    INT             reduce using rule 87 (comparador -> GREATER_THAN .)
    DOUBLE          reduce using rule 87 (comparador -> GREATER_THAN .)
    STRING          reduce using rule 87 (comparador -> GREATER_THAN .)
    BOOLEAN         reduce using rule 87 (comparador -> GREATER_THAN .)
    VARIABLE        reduce using rule 87 (comparador -> GREATER_THAN .)


state 109

    (88) comparador -> LESS_THAN .

    INT             reduce using rule 88 (comparador -> LESS_THAN .)
    DOUBLE          reduce using rule 88 (comparador -> LESS_THAN .)
    STRING          reduce using rule 88 (comparador -> LESS_THAN .)
    BOOLEAN         reduce using rule 88 (comparador -> LESS_THAN .)
    VARIABLE        reduce using rule 88 (comparador -> LESS_THAN .)


state 110

    (89) comparador -> GREATER_EQ_THAN .

    INT             reduce using rule 89 (comparador -> GREATER_EQ_THAN .)
    DOUBLE          reduce using rule 89 (comparador -> GREATER_EQ_THAN .)
    STRING          reduce using rule 89 (comparador -> GREATER_EQ_THAN .)
    BOOLEAN         reduce using rule 89 (comparador -> GREATER_EQ_THAN .)
    VARIABLE        reduce using rule 89 (comparador -> GREATER_EQ_THAN .)


state 111

    (90) comparador -> LESS_EQ_THAN .

    INT             reduce using rule 90 (comparador -> LESS_EQ_THAN .)
    DOUBLE          reduce using rule 90 (comparador -> LESS_EQ_THAN .)
    STRING          reduce using rule 90 (comparador -> LESS_EQ_THAN .)
    BOOLEAN         reduce using rule 90 (comparador -> LESS_EQ_THAN .)
    VARIABLE        reduce using rule 90 (comparador -> LESS_EQ_THAN .)


state 112

    (92) operacion -> elemento operador . operacion
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    elemento                       shift and go to state 70
    operacion                      shift and go to state 150
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 113

    (93) operador -> PLUS .

    INT             reduce using rule 93 (operador -> PLUS .)
    DOUBLE          reduce using rule 93 (operador -> PLUS .)
    STRING          reduce using rule 93 (operador -> PLUS .)
    BOOLEAN         reduce using rule 93 (operador -> PLUS .)
    VARIABLE        reduce using rule 93 (operador -> PLUS .)


state 114

    (94) operador -> MINUS .

    INT             reduce using rule 94 (operador -> MINUS .)
    DOUBLE          reduce using rule 94 (operador -> MINUS .)
    STRING          reduce using rule 94 (operador -> MINUS .)
    BOOLEAN         reduce using rule 94 (operador -> MINUS .)
    VARIABLE        reduce using rule 94 (operador -> MINUS .)


state 115

    (95) operador -> TIMES .

    INT             reduce using rule 95 (operador -> TIMES .)
    DOUBLE          reduce using rule 95 (operador -> TIMES .)
    STRING          reduce using rule 95 (operador -> TIMES .)
    BOOLEAN         reduce using rule 95 (operador -> TIMES .)
    VARIABLE        reduce using rule 95 (operador -> TIMES .)


state 116

    (96) operador -> DIVIDE .

    INT             reduce using rule 96 (operador -> DIVIDE .)
    DOUBLE          reduce using rule 96 (operador -> DIVIDE .)
    STRING          reduce using rule 96 (operador -> DIVIDE .)
    BOOLEAN         reduce using rule 96 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 96 (operador -> DIVIDE .)


state 117

    (97) operador -> MODULO .

    INT             reduce using rule 97 (operador -> MODULO .)
    DOUBLE          reduce using rule 97 (operador -> MODULO .)
    STRING          reduce using rule 97 (operador -> MODULO .)
    BOOLEAN         reduce using rule 97 (operador -> MODULO .)
    VARIABLE        reduce using rule 97 (operador -> MODULO .)


state 118

    (98) list -> LBRACKETS element_list . RBRACKETS

    RBRACKETS       shift and go to state 151


state 119

    (99) list -> LBRACKETS RBRACKETS .

    SEMICOLON       reduce using rule 99 (list -> LBRACKETS RBRACKETS .)


state 120

    (100) element_list -> elemento .
    (101) element_list -> elemento . COMA element_list

    RBRACKETS       reduce using rule 100 (element_list -> elemento .)
    RKEY            reduce using rule 100 (element_list -> elemento .)
    RPAREN          reduce using rule 100 (element_list -> elemento .)
    COMA            shift and go to state 152


state 121

    (78) elemento -> getVariable .

    COMA            reduce using rule 78 (elemento -> getVariable .)
    RBRACKETS       reduce using rule 78 (elemento -> getVariable .)
    RKEY            reduce using rule 78 (elemento -> getVariable .)
    PLUS            reduce using rule 78 (elemento -> getVariable .)
    MINUS           reduce using rule 78 (elemento -> getVariable .)
    TIMES           reduce using rule 78 (elemento -> getVariable .)
    DIVIDE          reduce using rule 78 (elemento -> getVariable .)
    MODULO          reduce using rule 78 (elemento -> getVariable .)
    SEMICOLON       reduce using rule 78 (elemento -> getVariable .)
    AND             reduce using rule 78 (elemento -> getVariable .)
    OR              reduce using rule 78 (elemento -> getVariable .)
    NOT             reduce using rule 78 (elemento -> getVariable .)
    RPAREN          reduce using rule 78 (elemento -> getVariable .)
    EQUALITY        reduce using rule 78 (elemento -> getVariable .)
    INEQUALITY      reduce using rule 78 (elemento -> getVariable .)
    GREATER_THAN    reduce using rule 78 (elemento -> getVariable .)
    LESS_THAN       reduce using rule 78 (elemento -> getVariable .)
    GREATER_EQ_THAN reduce using rule 78 (elemento -> getVariable .)
    LESS_EQ_THAN    reduce using rule 78 (elemento -> getVariable .)


state 122

    (141) diccionario -> LKEY key_element_list . RKEY

    RKEY            shift and go to state 153


state 123

    (142) diccionario -> LKEY RKEY .

    SEMICOLON       reduce using rule 142 (diccionario -> LKEY RKEY .)


state 124

    (144) set -> LKEY element_list . RKEY

    RKEY            shift and go to state 154


state 125

    (139) key_element_list -> key_element .
    (140) key_element_list -> key_element . COMA key_element_list

    RKEY            reduce using rule 139 (key_element_list -> key_element .)
    COMA            shift and go to state 155


state 126

    (138) key_element -> inmutables . DOS_PUNTOS elemento

    DOS_PUNTOS      shift and go to state 156


state 127

    (74) elemento -> INT .
    (136) inmutables -> INT .

    COMA            reduce using rule 74 (elemento -> INT .)
    RKEY            reduce using rule 74 (elemento -> INT .)
    DOS_PUNTOS      reduce using rule 136 (inmutables -> INT .)


state 128

    (75) elemento -> DOUBLE .
    (137) inmutables -> DOUBLE .

    COMA            reduce using rule 75 (elemento -> DOUBLE .)
    RKEY            reduce using rule 75 (elemento -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 137 (inmutables -> DOUBLE .)


state 129

    (76) elemento -> STRING .
    (135) inmutables -> STRING .

    COMA            reduce using rule 76 (elemento -> STRING .)
    RKEY            reduce using rule 76 (elemento -> STRING .)
    DOS_PUNTOS      reduce using rule 135 (inmutables -> STRING .)


state 130

    (143) diccionario -> DICT LPAREN . RPAREN

    RPAREN          shift and go to state 157


state 131

    (145) set -> CONJUNTO LPAREN . RPAREN

    RPAREN          shift and go to state 158


state 132

    (73) input -> STDIN DOT . READLINESYNC LPAREN RPAREN

    READLINESYNC    shift and go to state 159


state 133

    (33) invocar -> getVariable LPAREN . element_list RPAREN
    (34) invocar -> getVariable LPAREN . RPAREN
    (100) element_list -> . elemento
    (101) element_list -> . elemento COMA element_list
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RPAREN          shift and go to state 161
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    getVariable                    shift and go to state 121
    element_list                   shift and go to state 160
    elemento                       shift and go to state 120
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 134

    (152) parametros -> tipo_dato VARIABLE .
    (153) parametros -> tipo_dato VARIABLE . COMA parametros

    RPAREN          reduce using rule 152 (parametros -> tipo_dato VARIABLE .)
    COMA            shift and go to state 162


state 135

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 163


state 136

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 164
    cuerpo_funcion                 shift and go to state 166
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 137

    (69) variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .

    SEMICOLON       reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    ASSIGN          reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    PLUS_ASSIGN     reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MINUS_ASSIGN    reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    TIMES_ASSIGN    reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DIVIDE_ASSIGN   reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MODULO_ASSIGN   reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DOT             reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    LPAREN          reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    PLUS            reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MINUS           reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    TIMES           reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DIVIDE          reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MODULO          reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    EQUALITY        reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    INEQUALITY      reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    GREATER_THAN    reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    LESS_THAN       reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    GREATER_EQ_THAN reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    LESS_EQ_THAN    reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    INCREMENT_VAR   reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DECREMENT_VAR   reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    COMA            reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    RBRACKETS       reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    RKEY            reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    AND             reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    OR              reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    NOT             reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    RPAREN          reduce using rule 69 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)


state 138

    (48) asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion . SEMICOLON

    SEMICOLON       shift and go to state 186


state 139

    (35) constructor -> VARIABLE LPAREN . atributo_list RPAREN SEMICOLON
    (36) atributo_list -> . THIS DOT VARIABLE
    (37) atributo_list -> . THIS DOT VARIABLE COMA atributo_list

    THIS            shift and go to state 188

    atributo_list                  shift and go to state 187

state 140

    (30) class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .

    FINAL_TYPE      reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    CLASS           reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    VOID            reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    VARIABLE        reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    CONST_TYPE      reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    VAR_TYPE        reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    INT_TYPE        reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    STRING_TYPE     reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    DOUBLE_TYPE     reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    BOOL_TYPE       reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    LIST            reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    MAP             reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    SET             reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    $end            reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)


state 141

    (29) cuerpo_clase -> sentencias_clase cuerpo_clase .

    RKEY            reduce using rule 29 (cuerpo_clase -> sentencias_clase cuerpo_clase .)


state 142

    (50) cambiar_variable -> variables modificador . SEMICOLON

    SEMICOLON       shift and go to state 189


state 143

    (51) cambiar_variable -> variables asignador . expresion SEMICOLON
    (60) expresion -> . operacion
    (61) expresion -> . comparacion
    (62) expresion -> . list
    (63) expresion -> . diccionario
    (64) expresion -> . set
    (65) expresion -> . input
    (66) expresion -> . invocar
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (79) comparacion -> . operacion comparador operacion
    (98) list -> . LBRACKETS element_list RBRACKETS
    (99) list -> . LBRACKETS RBRACKETS
    (141) diccionario -> . LKEY key_element_list RKEY
    (142) diccionario -> . LKEY RKEY
    (143) diccionario -> . DICT LPAREN RPAREN
    (144) set -> . LKEY element_list RKEY
    (145) set -> . CONJUNTO LPAREN RPAREN
    (73) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    LBRACKETS       shift and go to state 71
    LKEY            shift and go to state 72
    DICT            shift and go to state 73
    CONJUNTO        shift and go to state 74
    STDIN           shift and go to state 75
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    variables                      shift and go to state 61
    expresion                      shift and go to state 190
    operacion                      shift and go to state 63
    comparacion                    shift and go to state 64
    list                           shift and go to state 65
    diccionario                    shift and go to state 66
    set                            shift and go to state 67
    input                          shift and go to state 68
    invocar                        shift and go to state 69
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 76
    variable_indexada              shift and go to state 30

state 144

    (52) modificador -> INCREMENT_VAR .

    SEMICOLON       reduce using rule 52 (modificador -> INCREMENT_VAR .)
    RPAREN          reduce using rule 52 (modificador -> INCREMENT_VAR .)


state 145

    (53) modificador -> DECREMENT_VAR .

    SEMICOLON       reduce using rule 53 (modificador -> DECREMENT_VAR .)
    RPAREN          reduce using rule 53 (modificador -> DECREMENT_VAR .)


state 146

    (40) funcion_static -> STATIC tipo_dato . VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC tipo_dato . VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 191


state 147

    (112) tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion . GREATER_THAN

    GREATER_THAN    shift and go to state 192


state 148

    (45) getVariable -> variables DOT getVariable .

    LPAREN          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    PLUS            reduce using rule 45 (getVariable -> variables DOT getVariable .)
    MINUS           reduce using rule 45 (getVariable -> variables DOT getVariable .)
    TIMES           reduce using rule 45 (getVariable -> variables DOT getVariable .)
    DIVIDE          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    MODULO          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    EQUALITY        reduce using rule 45 (getVariable -> variables DOT getVariable .)
    INEQUALITY      reduce using rule 45 (getVariable -> variables DOT getVariable .)
    GREATER_THAN    reduce using rule 45 (getVariable -> variables DOT getVariable .)
    LESS_THAN       reduce using rule 45 (getVariable -> variables DOT getVariable .)
    GREATER_EQ_THAN reduce using rule 45 (getVariable -> variables DOT getVariable .)
    LESS_EQ_THAN    reduce using rule 45 (getVariable -> variables DOT getVariable .)
    SEMICOLON       reduce using rule 45 (getVariable -> variables DOT getVariable .)
    COMA            reduce using rule 45 (getVariable -> variables DOT getVariable .)
    RBRACKETS       reduce using rule 45 (getVariable -> variables DOT getVariable .)
    RKEY            reduce using rule 45 (getVariable -> variables DOT getVariable .)
    AND             reduce using rule 45 (getVariable -> variables DOT getVariable .)
    OR              reduce using rule 45 (getVariable -> variables DOT getVariable .)
    NOT             reduce using rule 45 (getVariable -> variables DOT getVariable .)
    RPAREN          reduce using rule 45 (getVariable -> variables DOT getVariable .)


state 149

    (79) comparacion -> operacion comparador operacion .

    SEMICOLON       reduce using rule 79 (comparacion -> operacion comparador operacion .)
    AND             reduce using rule 79 (comparacion -> operacion comparador operacion .)
    OR              reduce using rule 79 (comparacion -> operacion comparador operacion .)
    NOT             reduce using rule 79 (comparacion -> operacion comparador operacion .)
    RPAREN          reduce using rule 79 (comparacion -> operacion comparador operacion .)


state 150

    (92) operacion -> elemento operador operacion .

    EQUALITY        reduce using rule 92 (operacion -> elemento operador operacion .)
    INEQUALITY      reduce using rule 92 (operacion -> elemento operador operacion .)
    GREATER_THAN    reduce using rule 92 (operacion -> elemento operador operacion .)
    LESS_THAN       reduce using rule 92 (operacion -> elemento operador operacion .)
    GREATER_EQ_THAN reduce using rule 92 (operacion -> elemento operador operacion .)
    LESS_EQ_THAN    reduce using rule 92 (operacion -> elemento operador operacion .)
    SEMICOLON       reduce using rule 92 (operacion -> elemento operador operacion .)
    AND             reduce using rule 92 (operacion -> elemento operador operacion .)
    OR              reduce using rule 92 (operacion -> elemento operador operacion .)
    NOT             reduce using rule 92 (operacion -> elemento operador operacion .)
    RPAREN          reduce using rule 92 (operacion -> elemento operador operacion .)


state 151

    (98) list -> LBRACKETS element_list RBRACKETS .

    SEMICOLON       reduce using rule 98 (list -> LBRACKETS element_list RBRACKETS .)


state 152

    (101) element_list -> elemento COMA . element_list
    (100) element_list -> . elemento
    (101) element_list -> . elemento COMA element_list
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    elemento                       shift and go to state 120
    element_list                   shift and go to state 193
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 153

    (141) diccionario -> LKEY key_element_list RKEY .

    SEMICOLON       reduce using rule 141 (diccionario -> LKEY key_element_list RKEY .)


state 154

    (144) set -> LKEY element_list RKEY .

    SEMICOLON       reduce using rule 144 (set -> LKEY element_list RKEY .)


state 155

    (140) key_element_list -> key_element COMA . key_element_list
    (139) key_element_list -> . key_element
    (140) key_element_list -> . key_element COMA key_element_list
    (138) key_element -> . inmutables DOS_PUNTOS elemento
    (135) inmutables -> . STRING
    (136) inmutables -> . INT
    (137) inmutables -> . DOUBLE

    STRING          shift and go to state 85
    INT             shift and go to state 86
    DOUBLE          shift and go to state 87

    key_element                    shift and go to state 125
    key_element_list               shift and go to state 194
    inmutables                     shift and go to state 126

state 156

    (138) key_element -> inmutables DOS_PUNTOS . elemento
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    elemento                       shift and go to state 195
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 157

    (143) diccionario -> DICT LPAREN RPAREN .

    SEMICOLON       reduce using rule 143 (diccionario -> DICT LPAREN RPAREN .)


state 158

    (145) set -> CONJUNTO LPAREN RPAREN .

    SEMICOLON       reduce using rule 145 (set -> CONJUNTO LPAREN RPAREN .)


state 159

    (73) input -> STDIN DOT READLINESYNC . LPAREN RPAREN

    LPAREN          shift and go to state 196


state 160

    (33) invocar -> getVariable LPAREN element_list . RPAREN

    RPAREN          shift and go to state 197


state 161

    (34) invocar -> getVariable LPAREN RPAREN .

    SEMICOLON       reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    RPAREN          reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)


state 162

    (153) parametros -> tipo_dato VARIABLE COMA . parametros
    (152) parametros -> . tipo_dato VARIABLE
    (153) parametros -> . tipo_dato VARIABLE COMA parametros
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    FINAL_TYPE      shift and go to state 31
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 81
    parametros                     shift and go to state 198

state 163

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 164
    cuerpo_funcion                 shift and go to state 199
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 164

    (46) asignar_variable -> tipo_dato . variables asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato . variables SEMICOLON
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 49

    variables                      shift and go to state 28
    variable_indexada              shift and go to state 30

state 165

    (103) tipo_dato -> VARIABLE .
    (42) variables -> VARIABLE .
    (69) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    VARIABLE        reduce using rule 103 (tipo_dato -> VARIABLE .)
    DOT             reduce using rule 42 (variables -> VARIABLE .)
    INCREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    DECREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LPAREN          reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 47


state 166

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 200


state 167

    (21) cuerpo_funcion -> sentencias_funcion .
    (22) cuerpo_funcion -> sentencias_funcion . cuerpo_funcion
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            reduce using rule 21 (cuerpo_funcion -> sentencias_funcion .)
    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    sentencias_funcion             shift and go to state 167
    cuerpo_funcion                 shift and go to state 201
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 168

    (11) sentencias_funcion -> asignar_variable .

    FINAL_TYPE      reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    PRINT           reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    IF              reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    RETURN          reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    WHILE           reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    DO              reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    FOR             reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    VOID            reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    VARIABLE        reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    CONST_TYPE      reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    VAR_TYPE        reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    INT_TYPE        reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    STRING_TYPE     reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    DOUBLE_TYPE     reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    BOOL_TYPE       reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    LIST            reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    MAP             reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    SET             reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    RKEY            reduce using rule 11 (sentencias_funcion -> asignar_variable .)


state 169

    (12) sentencias_funcion -> cambiar_variable .

    FINAL_TYPE      reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    PRINT           reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    IF              reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    RETURN          reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    WHILE           reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    DO              reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    FOR             reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    VOID            reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    VARIABLE        reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    CONST_TYPE      reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    VAR_TYPE        reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    INT_TYPE        reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    STRING_TYPE     reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    DOUBLE_TYPE     reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    BOOL_TYPE       reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    LIST            reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    MAP             reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    SET             reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    RKEY            reduce using rule 12 (sentencias_funcion -> cambiar_variable .)


state 170

    (13) sentencias_funcion -> impresion .

    FINAL_TYPE      reduce using rule 13 (sentencias_funcion -> impresion .)
    PRINT           reduce using rule 13 (sentencias_funcion -> impresion .)
    IF              reduce using rule 13 (sentencias_funcion -> impresion .)
    RETURN          reduce using rule 13 (sentencias_funcion -> impresion .)
    WHILE           reduce using rule 13 (sentencias_funcion -> impresion .)
    DO              reduce using rule 13 (sentencias_funcion -> impresion .)
    FOR             reduce using rule 13 (sentencias_funcion -> impresion .)
    VOID            reduce using rule 13 (sentencias_funcion -> impresion .)
    VARIABLE        reduce using rule 13 (sentencias_funcion -> impresion .)
    CONST_TYPE      reduce using rule 13 (sentencias_funcion -> impresion .)
    VAR_TYPE        reduce using rule 13 (sentencias_funcion -> impresion .)
    INT_TYPE        reduce using rule 13 (sentencias_funcion -> impresion .)
    STRING_TYPE     reduce using rule 13 (sentencias_funcion -> impresion .)
    DOUBLE_TYPE     reduce using rule 13 (sentencias_funcion -> impresion .)
    BOOL_TYPE       reduce using rule 13 (sentencias_funcion -> impresion .)
    LIST            reduce using rule 13 (sentencias_funcion -> impresion .)
    MAP             reduce using rule 13 (sentencias_funcion -> impresion .)
    SET             reduce using rule 13 (sentencias_funcion -> impresion .)
    RKEY            reduce using rule 13 (sentencias_funcion -> impresion .)


state 171

    (14) sentencias_funcion -> condicional .

    FINAL_TYPE      reduce using rule 14 (sentencias_funcion -> condicional .)
    PRINT           reduce using rule 14 (sentencias_funcion -> condicional .)
    IF              reduce using rule 14 (sentencias_funcion -> condicional .)
    RETURN          reduce using rule 14 (sentencias_funcion -> condicional .)
    WHILE           reduce using rule 14 (sentencias_funcion -> condicional .)
    DO              reduce using rule 14 (sentencias_funcion -> condicional .)
    FOR             reduce using rule 14 (sentencias_funcion -> condicional .)
    VOID            reduce using rule 14 (sentencias_funcion -> condicional .)
    VARIABLE        reduce using rule 14 (sentencias_funcion -> condicional .)
    CONST_TYPE      reduce using rule 14 (sentencias_funcion -> condicional .)
    VAR_TYPE        reduce using rule 14 (sentencias_funcion -> condicional .)
    INT_TYPE        reduce using rule 14 (sentencias_funcion -> condicional .)
    STRING_TYPE     reduce using rule 14 (sentencias_funcion -> condicional .)
    DOUBLE_TYPE     reduce using rule 14 (sentencias_funcion -> condicional .)
    BOOL_TYPE       reduce using rule 14 (sentencias_funcion -> condicional .)
    LIST            reduce using rule 14 (sentencias_funcion -> condicional .)
    MAP             reduce using rule 14 (sentencias_funcion -> condicional .)
    SET             reduce using rule 14 (sentencias_funcion -> condicional .)
    RKEY            reduce using rule 14 (sentencias_funcion -> condicional .)


state 172

    (15) sentencias_funcion -> retorno .

    FINAL_TYPE      reduce using rule 15 (sentencias_funcion -> retorno .)
    PRINT           reduce using rule 15 (sentencias_funcion -> retorno .)
    IF              reduce using rule 15 (sentencias_funcion -> retorno .)
    RETURN          reduce using rule 15 (sentencias_funcion -> retorno .)
    WHILE           reduce using rule 15 (sentencias_funcion -> retorno .)
    DO              reduce using rule 15 (sentencias_funcion -> retorno .)
    FOR             reduce using rule 15 (sentencias_funcion -> retorno .)
    VOID            reduce using rule 15 (sentencias_funcion -> retorno .)
    VARIABLE        reduce using rule 15 (sentencias_funcion -> retorno .)
    CONST_TYPE      reduce using rule 15 (sentencias_funcion -> retorno .)
    VAR_TYPE        reduce using rule 15 (sentencias_funcion -> retorno .)
    INT_TYPE        reduce using rule 15 (sentencias_funcion -> retorno .)
    STRING_TYPE     reduce using rule 15 (sentencias_funcion -> retorno .)
    DOUBLE_TYPE     reduce using rule 15 (sentencias_funcion -> retorno .)
    BOOL_TYPE       reduce using rule 15 (sentencias_funcion -> retorno .)
    LIST            reduce using rule 15 (sentencias_funcion -> retorno .)
    MAP             reduce using rule 15 (sentencias_funcion -> retorno .)
    SET             reduce using rule 15 (sentencias_funcion -> retorno .)
    RKEY            reduce using rule 15 (sentencias_funcion -> retorno .)


state 173

    (16) sentencias_funcion -> while .

    FINAL_TYPE      reduce using rule 16 (sentencias_funcion -> while .)
    PRINT           reduce using rule 16 (sentencias_funcion -> while .)
    IF              reduce using rule 16 (sentencias_funcion -> while .)
    RETURN          reduce using rule 16 (sentencias_funcion -> while .)
    WHILE           reduce using rule 16 (sentencias_funcion -> while .)
    DO              reduce using rule 16 (sentencias_funcion -> while .)
    FOR             reduce using rule 16 (sentencias_funcion -> while .)
    VOID            reduce using rule 16 (sentencias_funcion -> while .)
    VARIABLE        reduce using rule 16 (sentencias_funcion -> while .)
    CONST_TYPE      reduce using rule 16 (sentencias_funcion -> while .)
    VAR_TYPE        reduce using rule 16 (sentencias_funcion -> while .)
    INT_TYPE        reduce using rule 16 (sentencias_funcion -> while .)
    STRING_TYPE     reduce using rule 16 (sentencias_funcion -> while .)
    DOUBLE_TYPE     reduce using rule 16 (sentencias_funcion -> while .)
    BOOL_TYPE       reduce using rule 16 (sentencias_funcion -> while .)
    LIST            reduce using rule 16 (sentencias_funcion -> while .)
    MAP             reduce using rule 16 (sentencias_funcion -> while .)
    SET             reduce using rule 16 (sentencias_funcion -> while .)
    RKEY            reduce using rule 16 (sentencias_funcion -> while .)


state 174

    (17) sentencias_funcion -> do_while .

    FINAL_TYPE      reduce using rule 17 (sentencias_funcion -> do_while .)
    PRINT           reduce using rule 17 (sentencias_funcion -> do_while .)
    IF              reduce using rule 17 (sentencias_funcion -> do_while .)
    RETURN          reduce using rule 17 (sentencias_funcion -> do_while .)
    WHILE           reduce using rule 17 (sentencias_funcion -> do_while .)
    DO              reduce using rule 17 (sentencias_funcion -> do_while .)
    FOR             reduce using rule 17 (sentencias_funcion -> do_while .)
    VOID            reduce using rule 17 (sentencias_funcion -> do_while .)
    VARIABLE        reduce using rule 17 (sentencias_funcion -> do_while .)
    CONST_TYPE      reduce using rule 17 (sentencias_funcion -> do_while .)
    VAR_TYPE        reduce using rule 17 (sentencias_funcion -> do_while .)
    INT_TYPE        reduce using rule 17 (sentencias_funcion -> do_while .)
    STRING_TYPE     reduce using rule 17 (sentencias_funcion -> do_while .)
    DOUBLE_TYPE     reduce using rule 17 (sentencias_funcion -> do_while .)
    BOOL_TYPE       reduce using rule 17 (sentencias_funcion -> do_while .)
    LIST            reduce using rule 17 (sentencias_funcion -> do_while .)
    MAP             reduce using rule 17 (sentencias_funcion -> do_while .)
    SET             reduce using rule 17 (sentencias_funcion -> do_while .)
    RKEY            reduce using rule 17 (sentencias_funcion -> do_while .)


state 175

    (18) sentencias_funcion -> for .

    FINAL_TYPE      reduce using rule 18 (sentencias_funcion -> for .)
    PRINT           reduce using rule 18 (sentencias_funcion -> for .)
    IF              reduce using rule 18 (sentencias_funcion -> for .)
    RETURN          reduce using rule 18 (sentencias_funcion -> for .)
    WHILE           reduce using rule 18 (sentencias_funcion -> for .)
    DO              reduce using rule 18 (sentencias_funcion -> for .)
    FOR             reduce using rule 18 (sentencias_funcion -> for .)
    VOID            reduce using rule 18 (sentencias_funcion -> for .)
    VARIABLE        reduce using rule 18 (sentencias_funcion -> for .)
    CONST_TYPE      reduce using rule 18 (sentencias_funcion -> for .)
    VAR_TYPE        reduce using rule 18 (sentencias_funcion -> for .)
    INT_TYPE        reduce using rule 18 (sentencias_funcion -> for .)
    STRING_TYPE     reduce using rule 18 (sentencias_funcion -> for .)
    DOUBLE_TYPE     reduce using rule 18 (sentencias_funcion -> for .)
    BOOL_TYPE       reduce using rule 18 (sentencias_funcion -> for .)
    LIST            reduce using rule 18 (sentencias_funcion -> for .)
    MAP             reduce using rule 18 (sentencias_funcion -> for .)
    SET             reduce using rule 18 (sentencias_funcion -> for .)
    RKEY            reduce using rule 18 (sentencias_funcion -> for .)


state 176

    (19) sentencias_funcion -> for_each .

    FINAL_TYPE      reduce using rule 19 (sentencias_funcion -> for_each .)
    PRINT           reduce using rule 19 (sentencias_funcion -> for_each .)
    IF              reduce using rule 19 (sentencias_funcion -> for_each .)
    RETURN          reduce using rule 19 (sentencias_funcion -> for_each .)
    WHILE           reduce using rule 19 (sentencias_funcion -> for_each .)
    DO              reduce using rule 19 (sentencias_funcion -> for_each .)
    FOR             reduce using rule 19 (sentencias_funcion -> for_each .)
    VOID            reduce using rule 19 (sentencias_funcion -> for_each .)
    VARIABLE        reduce using rule 19 (sentencias_funcion -> for_each .)
    CONST_TYPE      reduce using rule 19 (sentencias_funcion -> for_each .)
    VAR_TYPE        reduce using rule 19 (sentencias_funcion -> for_each .)
    INT_TYPE        reduce using rule 19 (sentencias_funcion -> for_each .)
    STRING_TYPE     reduce using rule 19 (sentencias_funcion -> for_each .)
    DOUBLE_TYPE     reduce using rule 19 (sentencias_funcion -> for_each .)
    BOOL_TYPE       reduce using rule 19 (sentencias_funcion -> for_each .)
    LIST            reduce using rule 19 (sentencias_funcion -> for_each .)
    MAP             reduce using rule 19 (sentencias_funcion -> for_each .)
    SET             reduce using rule 19 (sentencias_funcion -> for_each .)
    RKEY            reduce using rule 19 (sentencias_funcion -> for_each .)


state 177

    (20) sentencias_funcion -> invocacion .

    FINAL_TYPE      reduce using rule 20 (sentencias_funcion -> invocacion .)
    PRINT           reduce using rule 20 (sentencias_funcion -> invocacion .)
    IF              reduce using rule 20 (sentencias_funcion -> invocacion .)
    RETURN          reduce using rule 20 (sentencias_funcion -> invocacion .)
    WHILE           reduce using rule 20 (sentencias_funcion -> invocacion .)
    DO              reduce using rule 20 (sentencias_funcion -> invocacion .)
    FOR             reduce using rule 20 (sentencias_funcion -> invocacion .)
    VOID            reduce using rule 20 (sentencias_funcion -> invocacion .)
    VARIABLE        reduce using rule 20 (sentencias_funcion -> invocacion .)
    CONST_TYPE      reduce using rule 20 (sentencias_funcion -> invocacion .)
    VAR_TYPE        reduce using rule 20 (sentencias_funcion -> invocacion .)
    INT_TYPE        reduce using rule 20 (sentencias_funcion -> invocacion .)
    STRING_TYPE     reduce using rule 20 (sentencias_funcion -> invocacion .)
    DOUBLE_TYPE     reduce using rule 20 (sentencias_funcion -> invocacion .)
    BOOL_TYPE       reduce using rule 20 (sentencias_funcion -> invocacion .)
    LIST            reduce using rule 20 (sentencias_funcion -> invocacion .)
    MAP             reduce using rule 20 (sentencias_funcion -> invocacion .)
    SET             reduce using rule 20 (sentencias_funcion -> invocacion .)
    RKEY            reduce using rule 20 (sentencias_funcion -> invocacion .)


state 178

    (50) cambiar_variable -> variables . modificador SEMICOLON
    (51) cambiar_variable -> variables . asignador expresion SEMICOLON
    (44) getVariable -> variables .
    (45) getVariable -> variables . DOT getVariable
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    LPAREN          reduce using rule 44 (getVariable -> variables .)
    DOT             shift and go to state 103
    INCREMENT_VAR   shift and go to state 144
    DECREMENT_VAR   shift and go to state 145
    ASSIGN          shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    TIMES_ASSIGN    shift and go to state 43
    DIVIDE_ASSIGN   shift and go to state 44
    MODULO_ASSIGN   shift and go to state 45

    modificador                    shift and go to state 142
    asignador                      shift and go to state 143

state 179

    (70) impresion -> PRINT . LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> PRINT . LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> PRINT . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 202


state 180

    (146) condicional -> IF . LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> IF . LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> IF . LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> IF . LPAREN condiciones RPAREN LKEY RKEY bloques_else

    LPAREN          shift and go to state 203


state 181

    (67) retorno -> RETURN . SEMICOLON
    (68) retorno -> RETURN . expresion SEMICOLON
    (60) expresion -> . operacion
    (61) expresion -> . comparacion
    (62) expresion -> . list
    (63) expresion -> . diccionario
    (64) expresion -> . set
    (65) expresion -> . input
    (66) expresion -> . invocar
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (79) comparacion -> . operacion comparador operacion
    (98) list -> . LBRACKETS element_list RBRACKETS
    (99) list -> . LBRACKETS RBRACKETS
    (141) diccionario -> . LKEY key_element_list RKEY
    (142) diccionario -> . LKEY RKEY
    (143) diccionario -> . DICT LPAREN RPAREN
    (144) set -> . LKEY element_list RKEY
    (145) set -> . CONJUNTO LPAREN RPAREN
    (73) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    SEMICOLON       shift and go to state 204
    LBRACKETS       shift and go to state 71
    LKEY            shift and go to state 72
    DICT            shift and go to state 73
    CONJUNTO        shift and go to state 74
    STDIN           shift and go to state 75
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    expresion                      shift and go to state 205
    operacion                      shift and go to state 63
    comparacion                    shift and go to state 64
    list                           shift and go to state 65
    diccionario                    shift and go to state 66
    set                            shift and go to state 67
    input                          shift and go to state 68
    invocar                        shift and go to state 69
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 76
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 182

    (128) while -> WHILE . LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> WHILE . LPAREN condiciones RPAREN LKEY RKEY

    LPAREN          shift and go to state 206


state 183

    (130) do_while -> DO . LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON

    LKEY            shift and go to state 207


state 184

    (121) for -> FOR . LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> FOR . LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> FOR . LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> FOR . LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> FOR . LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    LPAREN          shift and go to state 208


state 185

    (31) invocacion -> getVariable . LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> getVariable . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 209


state 186

    (48) asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .

    FINAL_TYPE      reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    CLASS           reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    VOID            reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    VARIABLE        reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    INT_TYPE        reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    LIST            reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    MAP             reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    SET             reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    $end            reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    STATIC          reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    RKEY            reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    PRINT           reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    IF              reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    RETURN          reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    WHILE           reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    DO              reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    FOR             reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    INT             reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    DOUBLE          reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    STRING          reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)
    BOOLEAN         reduce using rule 48 (asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON .)


state 187

    (35) constructor -> VARIABLE LPAREN atributo_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 210


state 188

    (36) atributo_list -> THIS . DOT VARIABLE
    (37) atributo_list -> THIS . DOT VARIABLE COMA atributo_list

    DOT             shift and go to state 211


state 189

    (50) cambiar_variable -> variables modificador SEMICOLON .

    FINAL_TYPE      reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    VARIABLE        reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    STATIC          reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    VOID            reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    CONST_TYPE      reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    VAR_TYPE        reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    INT_TYPE        reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    STRING_TYPE     reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    BOOL_TYPE       reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    LIST            reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    MAP             reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    SET             reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    RKEY            reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    PRINT           reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    IF              reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    RETURN          reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    WHILE           reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    DO              reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)
    FOR             reduce using rule 50 (cambiar_variable -> variables modificador SEMICOLON .)


state 190

    (51) cambiar_variable -> variables asignador expresion . SEMICOLON

    SEMICOLON       shift and go to state 212


state 191

    (40) funcion_static -> STATIC tipo_dato VARIABLE . LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC tipo_dato VARIABLE . LPAREN RPAREN LKEY cuerpo_funcion RKEY

    LPAREN          shift and go to state 213


state 192

    (112) tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN .

    VARIABLE        reduce using rule 112 (tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN .)


state 193

    (101) element_list -> elemento COMA element_list .

    RBRACKETS       reduce using rule 101 (element_list -> elemento COMA element_list .)
    RKEY            reduce using rule 101 (element_list -> elemento COMA element_list .)
    RPAREN          reduce using rule 101 (element_list -> elemento COMA element_list .)


state 194

    (140) key_element_list -> key_element COMA key_element_list .

    RKEY            reduce using rule 140 (key_element_list -> key_element COMA key_element_list .)


state 195

    (138) key_element -> inmutables DOS_PUNTOS elemento .

    COMA            reduce using rule 138 (key_element -> inmutables DOS_PUNTOS elemento .)
    RKEY            reduce using rule 138 (key_element -> inmutables DOS_PUNTOS elemento .)


state 196

    (73) input -> STDIN DOT READLINESYNC LPAREN . RPAREN

    RPAREN          shift and go to state 214


state 197

    (33) invocar -> getVariable LPAREN element_list RPAREN .

    SEMICOLON       reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    RPAREN          reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)


state 198

    (153) parametros -> tipo_dato VARIABLE COMA parametros .

    RPAREN          reduce using rule 153 (parametros -> tipo_dato VARIABLE COMA parametros .)


state 199

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 215


state 200

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    CLASS           reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    $end            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)


state 201

    (22) cuerpo_funcion -> sentencias_funcion cuerpo_funcion .

    RKEY            reduce using rule 22 (cuerpo_funcion -> sentencias_funcion cuerpo_funcion .)


state 202

    (70) impresion -> PRINT LPAREN . operacion RPAREN SEMICOLON
    (71) impresion -> PRINT LPAREN . comparacion_logica RPAREN SEMICOLON
    (72) impresion -> PRINT LPAREN . RPAREN SEMICOLON
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (79) comparacion -> . operacion comparador operacion
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RPAREN          shift and go to state 217
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    operacion                      shift and go to state 216
    comparacion_logica             shift and go to state 218
    elemento                       shift and go to state 70
    comparacion                    shift and go to state 219
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 203

    (146) condicional -> IF LPAREN . condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> IF LPAREN . condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> IF LPAREN . condiciones RPAREN LKEY RKEY
    (149) condicional -> IF LPAREN . condiciones RPAREN LKEY RKEY bloques_else
    (131) condiciones -> . comparacion_logica
    (132) condiciones -> . getVariable
    (133) condiciones -> . BOOLEAN
    (134) condiciones -> . invocar
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (79) comparacion -> . operacion comparador operacion
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable

    BOOLEAN         shift and go to state 223
    VARIABLE        shift and go to state 49
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79

    condiciones                    shift and go to state 220
    comparacion_logica             shift and go to state 221
    getVariable                    shift and go to state 222
    invocar                        shift and go to state 224
    comparacion                    shift and go to state 219
    variables                      shift and go to state 61
    operacion                      shift and go to state 225
    variable_indexada              shift and go to state 30
    elemento                       shift and go to state 70

state 204

    (67) retorno -> RETURN SEMICOLON .

    FINAL_TYPE      reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    PRINT           reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    IF              reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    RETURN          reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    WHILE           reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    DO              reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    FOR             reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    VOID            reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    VARIABLE        reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    CONST_TYPE      reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    VAR_TYPE        reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    INT_TYPE        reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    STRING_TYPE     reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    BOOL_TYPE       reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    LIST            reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    MAP             reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    SET             reduce using rule 67 (retorno -> RETURN SEMICOLON .)
    RKEY            reduce using rule 67 (retorno -> RETURN SEMICOLON .)


state 205

    (68) retorno -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 226


state 206

    (128) while -> WHILE LPAREN . condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> WHILE LPAREN . condiciones RPAREN LKEY RKEY
    (131) condiciones -> . comparacion_logica
    (132) condiciones -> . getVariable
    (133) condiciones -> . BOOLEAN
    (134) condiciones -> . invocar
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (79) comparacion -> . operacion comparador operacion
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable

    BOOLEAN         shift and go to state 223
    VARIABLE        shift and go to state 49
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79

    condiciones                    shift and go to state 227
    comparacion_logica             shift and go to state 221
    getVariable                    shift and go to state 222
    invocar                        shift and go to state 224
    comparacion                    shift and go to state 219
    variables                      shift and go to state 61
    operacion                      shift and go to state 225
    variable_indexada              shift and go to state 30
    elemento                       shift and go to state 70

state 207

    (130) do_while -> DO LKEY . cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 228
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 208

    (121) for -> FOR LPAREN . asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> FOR LPAREN . SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> FOR LPAREN . SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> FOR LPAREN . tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> FOR LPAREN . tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    SEMICOLON       shift and go to state 230
    FINAL_TYPE      shift and go to state 11
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    asignar_variable               shift and go to state 229
    tipo_dato                      shift and go to state 231

state 209

    (31) invocacion -> getVariable LPAREN . element_list RPAREN SEMICOLON
    (32) invocacion -> getVariable LPAREN . RPAREN SEMICOLON
    (100) element_list -> . elemento
    (101) element_list -> . elemento COMA element_list
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RPAREN          shift and go to state 233
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    getVariable                    shift and go to state 121
    element_list                   shift and go to state 232
    elemento                       shift and go to state 120
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 210

    (35) constructor -> VARIABLE LPAREN atributo_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 234


state 211

    (36) atributo_list -> THIS DOT . VARIABLE
    (37) atributo_list -> THIS DOT . VARIABLE COMA atributo_list

    VARIABLE        shift and go to state 235


state 212

    (51) cambiar_variable -> variables asignador expresion SEMICOLON .

    FINAL_TYPE      reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    VARIABLE        reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    STATIC          reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    VOID            reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    INT_TYPE        reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    LIST            reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    MAP             reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    SET             reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    RKEY            reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    PRINT           reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    IF              reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    RETURN          reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    WHILE           reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    DO              reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)
    FOR             reduce using rule 51 (cambiar_variable -> variables asignador expresion SEMICOLON .)


state 213

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN . parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN . RPAREN LKEY cuerpo_funcion RKEY
    (152) parametros -> . tipo_dato VARIABLE
    (153) parametros -> . tipo_dato VARIABLE COMA parametros
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    RPAREN          shift and go to state 237
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 12
    FINAL_TYPE      shift and go to state 31
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 81
    parametros                     shift and go to state 236

state 214

    (73) input -> STDIN DOT READLINESYNC LPAREN RPAREN .

    SEMICOLON       reduce using rule 73 (input -> STDIN DOT READLINESYNC LPAREN RPAREN .)


state 215

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    CLASS           reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    $end            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)


state 216

    (70) impresion -> PRINT LPAREN operacion . RPAREN SEMICOLON
    (79) comparacion -> operacion . comparador operacion
    (85) comparador -> . EQUALITY
    (86) comparador -> . INEQUALITY
    (87) comparador -> . GREATER_THAN
    (88) comparador -> . LESS_THAN
    (89) comparador -> . GREATER_EQ_THAN
    (90) comparador -> . LESS_EQ_THAN

    RPAREN          shift and go to state 238
    EQUALITY        shift and go to state 106
    INEQUALITY      shift and go to state 107
    GREATER_THAN    shift and go to state 108
    LESS_THAN       shift and go to state 109
    GREATER_EQ_THAN shift and go to state 110
    LESS_EQ_THAN    shift and go to state 111

    comparador                     shift and go to state 105

state 217

    (72) impresion -> PRINT LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 239


state 218

    (71) impresion -> PRINT LPAREN comparacion_logica . RPAREN SEMICOLON

    RPAREN          shift and go to state 240


state 219

    (80) comparacion_logica -> comparacion .
    (81) comparacion_logica -> comparacion . operador_logico comparacion_logica
    (82) operador_logico -> . AND
    (83) operador_logico -> . OR
    (84) operador_logico -> . NOT

    RPAREN          reduce using rule 80 (comparacion_logica -> comparacion .)
    SEMICOLON       reduce using rule 80 (comparacion_logica -> comparacion .)
    AND             shift and go to state 242
    OR              shift and go to state 243
    NOT             shift and go to state 244

    operador_logico                shift and go to state 241

state 220

    (146) condicional -> IF LPAREN condiciones . RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> IF LPAREN condiciones . RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> IF LPAREN condiciones . RPAREN LKEY RKEY
    (149) condicional -> IF LPAREN condiciones . RPAREN LKEY RKEY bloques_else

    RPAREN          shift and go to state 245


state 221

    (131) condiciones -> comparacion_logica .

    RPAREN          reduce using rule 131 (condiciones -> comparacion_logica .)


state 222

    (132) condiciones -> getVariable .
    (33) invocar -> getVariable . LPAREN element_list RPAREN
    (34) invocar -> getVariable . LPAREN RPAREN
    (78) elemento -> getVariable .

    RPAREN          reduce using rule 132 (condiciones -> getVariable .)
    LPAREN          shift and go to state 133
    PLUS            reduce using rule 78 (elemento -> getVariable .)
    MINUS           reduce using rule 78 (elemento -> getVariable .)
    TIMES           reduce using rule 78 (elemento -> getVariable .)
    DIVIDE          reduce using rule 78 (elemento -> getVariable .)
    MODULO          reduce using rule 78 (elemento -> getVariable .)
    EQUALITY        reduce using rule 78 (elemento -> getVariable .)
    INEQUALITY      reduce using rule 78 (elemento -> getVariable .)
    GREATER_THAN    reduce using rule 78 (elemento -> getVariable .)
    LESS_THAN       reduce using rule 78 (elemento -> getVariable .)
    GREATER_EQ_THAN reduce using rule 78 (elemento -> getVariable .)
    LESS_EQ_THAN    reduce using rule 78 (elemento -> getVariable .)


state 223

    (133) condiciones -> BOOLEAN .
    (77) elemento -> BOOLEAN .

    RPAREN          reduce using rule 133 (condiciones -> BOOLEAN .)
    PLUS            reduce using rule 77 (elemento -> BOOLEAN .)
    MINUS           reduce using rule 77 (elemento -> BOOLEAN .)
    TIMES           reduce using rule 77 (elemento -> BOOLEAN .)
    DIVIDE          reduce using rule 77 (elemento -> BOOLEAN .)
    MODULO          reduce using rule 77 (elemento -> BOOLEAN .)
    EQUALITY        reduce using rule 77 (elemento -> BOOLEAN .)
    INEQUALITY      reduce using rule 77 (elemento -> BOOLEAN .)
    GREATER_THAN    reduce using rule 77 (elemento -> BOOLEAN .)
    LESS_THAN       reduce using rule 77 (elemento -> BOOLEAN .)
    GREATER_EQ_THAN reduce using rule 77 (elemento -> BOOLEAN .)
    LESS_EQ_THAN    reduce using rule 77 (elemento -> BOOLEAN .)


state 224

    (134) condiciones -> invocar .

    RPAREN          reduce using rule 134 (condiciones -> invocar .)


state 225

    (79) comparacion -> operacion . comparador operacion
    (85) comparador -> . EQUALITY
    (86) comparador -> . INEQUALITY
    (87) comparador -> . GREATER_THAN
    (88) comparador -> . LESS_THAN
    (89) comparador -> . GREATER_EQ_THAN
    (90) comparador -> . LESS_EQ_THAN

    EQUALITY        shift and go to state 106
    INEQUALITY      shift and go to state 107
    GREATER_THAN    shift and go to state 108
    LESS_THAN       shift and go to state 109
    GREATER_EQ_THAN shift and go to state 110
    LESS_EQ_THAN    shift and go to state 111

    comparador                     shift and go to state 105

state 226

    (68) retorno -> RETURN expresion SEMICOLON .

    FINAL_TYPE      reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    PRINT           reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    FOR             reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    VOID            reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    VARIABLE        reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    INT_TYPE        reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    LIST            reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    MAP             reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    SET             reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)
    RKEY            reduce using rule 68 (retorno -> RETURN expresion SEMICOLON .)


state 227

    (128) while -> WHILE LPAREN condiciones . RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> WHILE LPAREN condiciones . RPAREN LKEY RKEY

    RPAREN          shift and go to state 246


state 228

    (130) do_while -> DO LKEY cuerpo_funcion . RKEY WHILE LPAREN condiciones RPAREN SEMICOLON

    RKEY            shift and go to state 247


state 229

    (121) for -> FOR LPAREN asignar_variable . comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (79) comparacion -> . operacion comparador operacion
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    comparacion_logica             shift and go to state 248
    comparacion                    shift and go to state 219
    operacion                      shift and go to state 225
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 230

    (122) for -> FOR LPAREN SEMICOLON . comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> FOR LPAREN SEMICOLON . SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (79) comparacion -> . operacion comparador operacion
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    SEMICOLON       shift and go to state 249
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    comparacion_logica             shift and go to state 250
    comparacion                    shift and go to state 219
    operacion                      shift and go to state 225
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 231

    (124) for_each -> FOR LPAREN tipo_dato . VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> FOR LPAREN tipo_dato . VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (46) asignar_variable -> tipo_dato . variables asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato . variables SEMICOLON
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 251

    variables                      shift and go to state 28
    variable_indexada              shift and go to state 30

state 232

    (31) invocacion -> getVariable LPAREN element_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 252


state 233

    (32) invocacion -> getVariable LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 253


state 234

    (35) constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    STATIC          reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    VOID            reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    LIST            reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    MAP             reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    SET             reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    RKEY            reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)


state 235

    (36) atributo_list -> THIS DOT VARIABLE .
    (37) atributo_list -> THIS DOT VARIABLE . COMA atributo_list

    RPAREN          reduce using rule 36 (atributo_list -> THIS DOT VARIABLE .)
    COMA            shift and go to state 254


state 236

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 255


state 237

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 256


state 238

    (70) impresion -> PRINT LPAREN operacion RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 257


state 239

    (72) impresion -> PRINT LPAREN RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    RKEY            reduce using rule 72 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)


state 240

    (71) impresion -> PRINT LPAREN comparacion_logica RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 258


state 241

    (81) comparacion_logica -> comparacion operador_logico . comparacion_logica
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (79) comparacion -> . operacion comparador operacion
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79
    BOOLEAN         shift and go to state 80
    VARIABLE        shift and go to state 49

    comparacion                    shift and go to state 219
    comparacion_logica             shift and go to state 259
    operacion                      shift and go to state 225
    elemento                       shift and go to state 70
    getVariable                    shift and go to state 121
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 242

    (82) operador_logico -> AND .

    INT             reduce using rule 82 (operador_logico -> AND .)
    DOUBLE          reduce using rule 82 (operador_logico -> AND .)
    STRING          reduce using rule 82 (operador_logico -> AND .)
    BOOLEAN         reduce using rule 82 (operador_logico -> AND .)
    VARIABLE        reduce using rule 82 (operador_logico -> AND .)


state 243

    (83) operador_logico -> OR .

    INT             reduce using rule 83 (operador_logico -> OR .)
    DOUBLE          reduce using rule 83 (operador_logico -> OR .)
    STRING          reduce using rule 83 (operador_logico -> OR .)
    BOOLEAN         reduce using rule 83 (operador_logico -> OR .)
    VARIABLE        reduce using rule 83 (operador_logico -> OR .)


state 244

    (84) operador_logico -> NOT .

    INT             reduce using rule 84 (operador_logico -> NOT .)
    DOUBLE          reduce using rule 84 (operador_logico -> NOT .)
    STRING          reduce using rule 84 (operador_logico -> NOT .)
    BOOLEAN         reduce using rule 84 (operador_logico -> NOT .)
    VARIABLE        reduce using rule 84 (operador_logico -> NOT .)


state 245

    (146) condicional -> IF LPAREN condiciones RPAREN . LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> IF LPAREN condiciones RPAREN . LKEY cuerpo_funcion RKEY
    (148) condicional -> IF LPAREN condiciones RPAREN . LKEY RKEY
    (149) condicional -> IF LPAREN condiciones RPAREN . LKEY RKEY bloques_else

    LKEY            shift and go to state 260


state 246

    (128) while -> WHILE LPAREN condiciones RPAREN . LKEY cuerpo_funcion RKEY
    (129) while -> WHILE LPAREN condiciones RPAREN . LKEY RKEY

    LKEY            shift and go to state 261


state 247

    (130) do_while -> DO LKEY cuerpo_funcion RKEY . WHILE LPAREN condiciones RPAREN SEMICOLON

    WHILE           shift and go to state 262


state 248

    (121) for -> FOR LPAREN asignar_variable comparacion_logica . SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    SEMICOLON       shift and go to state 263


state 249

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON . VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 264


state 250

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica . SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    SEMICOLON       shift and go to state 265


state 251

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE . IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> FOR LPAREN tipo_dato VARIABLE . LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (42) variables -> VARIABLE .
    (69) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    IN              shift and go to state 267
    LPAREN          shift and go to state 266
    SEMICOLON       reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 47


state 252

    (31) invocacion -> getVariable LPAREN element_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 253

    (32) invocacion -> getVariable LPAREN RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    RKEY            reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)


state 254

    (37) atributo_list -> THIS DOT VARIABLE COMA . atributo_list
    (36) atributo_list -> . THIS DOT VARIABLE
    (37) atributo_list -> . THIS DOT VARIABLE COMA atributo_list

    THIS            shift and go to state 188

    atributo_list                  shift and go to state 269

state 255

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 270


state 256

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 164
    cuerpo_funcion                 shift and go to state 271
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 257

    (70) impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    PRINT           reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    IF              reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    DO              reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    FOR             reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    VOID            reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    LIST            reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    MAP             reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    SET             reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)
    RKEY            reduce using rule 70 (impresion -> PRINT LPAREN operacion RPAREN SEMICOLON .)


state 258

    (71) impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    PRINT           reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    IF              reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    DO              reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    FOR             reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    VOID            reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    LIST            reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    MAP             reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    SET             reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    RKEY            reduce using rule 71 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)


state 259

    (81) comparacion_logica -> comparacion operador_logico comparacion_logica .

    RPAREN          reduce using rule 81 (comparacion_logica -> comparacion operador_logico comparacion_logica .)
    SEMICOLON       reduce using rule 81 (comparacion_logica -> comparacion operador_logico comparacion_logica .)


state 260

    (146) condicional -> IF LPAREN condiciones RPAREN LKEY . cuerpo_funcion RKEY bloques_else
    (147) condicional -> IF LPAREN condiciones RPAREN LKEY . cuerpo_funcion RKEY
    (148) condicional -> IF LPAREN condiciones RPAREN LKEY . RKEY
    (149) condicional -> IF LPAREN condiciones RPAREN LKEY . RKEY bloques_else
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            shift and go to state 273
    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 272
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 261

    (128) while -> WHILE LPAREN condiciones RPAREN LKEY . cuerpo_funcion RKEY
    (129) while -> WHILE LPAREN condiciones RPAREN LKEY . RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            shift and go to state 275
    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 274
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 262

    (130) do_while -> DO LKEY cuerpo_funcion RKEY WHILE . LPAREN condiciones RPAREN SEMICOLON

    LPAREN          shift and go to state 276


state 263

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON . VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 277


state 264

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE . modificador RPAREN LKEY cuerpo_funcion RKEY
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR

    INCREMENT_VAR   shift and go to state 144
    DECREMENT_VAR   shift and go to state 145

    modificador                    shift and go to state 278

state 265

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON . VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 279


state 266

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN . specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (126) specific_instance -> . DOS_PUNTOS VARIABLE
    (127) specific_instance -> . DOS_PUNTOS VARIABLE COMA specific_instance

    DOS_PUNTOS      shift and go to state 281

    specific_instance              shift and go to state 280

state 267

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE IN . getVariable RPAREN LKEY cuerpo_funcion RKEY
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 49

    getVariable                    shift and go to state 282
    variables                      shift and go to state 61
    variable_indexada              shift and go to state 30

state 268

    (31) invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    IF              reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    DO              reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    FOR             reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    VOID            reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    LIST            reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    MAP             reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    SET             reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    RKEY            reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)


state 269

    (37) atributo_list -> THIS DOT VARIABLE COMA atributo_list .

    RPAREN          reduce using rule 37 (atributo_list -> THIS DOT VARIABLE COMA atributo_list .)


state 270

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 164
    cuerpo_funcion                 shift and go to state 283
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 271

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 284


state 272

    (146) condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion . RKEY bloques_else
    (147) condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 285


state 273

    (148) condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .
    (149) condicional -> IF LPAREN condiciones RPAREN LKEY RKEY . bloques_else
    (150) bloques_else -> . ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (151) bloques_else -> . ELSE LKEY cuerpo_funcion RKEY

    FINAL_TYPE      reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    PRINT           reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    IF              reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    RETURN          reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    WHILE           reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    DO              reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    FOR             reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    VOID            reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    VARIABLE        reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    CONST_TYPE      reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    VAR_TYPE        reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    INT_TYPE        reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    STRING_TYPE     reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    DOUBLE_TYPE     reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    BOOL_TYPE       reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    LIST            reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    MAP             reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    SET             reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    RKEY            reduce using rule 148 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY .)
    ELSE            shift and go to state 287

    bloques_else                   shift and go to state 286

state 274

    (128) while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 288


state 275

    (129) while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .

    FINAL_TYPE      reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    PRINT           reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    IF              reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    RETURN          reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    WHILE           reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    DO              reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    FOR             reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    VOID            reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    VARIABLE        reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    CONST_TYPE      reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    VAR_TYPE        reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    INT_TYPE        reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    STRING_TYPE     reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    DOUBLE_TYPE     reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    BOOL_TYPE       reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    LIST            reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    MAP             reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    SET             reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)
    RKEY            reduce using rule 129 (while -> WHILE LPAREN condiciones RPAREN LKEY RKEY .)


state 276

    (130) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN . condiciones RPAREN SEMICOLON
    (131) condiciones -> . comparacion_logica
    (132) condiciones -> . getVariable
    (133) condiciones -> . BOOLEAN
    (134) condiciones -> . invocar
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (79) comparacion -> . operacion comparador operacion
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable

    BOOLEAN         shift and go to state 223
    VARIABLE        shift and go to state 49
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79

    condiciones                    shift and go to state 289
    comparacion_logica             shift and go to state 221
    getVariable                    shift and go to state 222
    invocar                        shift and go to state 224
    comparacion                    shift and go to state 219
    variables                      shift and go to state 61
    operacion                      shift and go to state 225
    variable_indexada              shift and go to state 30
    elemento                       shift and go to state 70

state 277

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE . modificador RPAREN LKEY cuerpo_funcion RKEY
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR

    INCREMENT_VAR   shift and go to state 144
    DECREMENT_VAR   shift and go to state 145

    modificador                    shift and go to state 290

state 278

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 291


state 279

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE . modificador RPAREN LKEY cuerpo_funcion RKEY
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR

    INCREMENT_VAR   shift and go to state 144
    DECREMENT_VAR   shift and go to state 145

    modificador                    shift and go to state 292

state 280

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance . RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 293


state 281

    (126) specific_instance -> DOS_PUNTOS . VARIABLE
    (127) specific_instance -> DOS_PUNTOS . VARIABLE COMA specific_instance

    VARIABLE        shift and go to state 294


state 282

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 295


state 283

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 296


state 284

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)


state 285

    (146) condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY . bloques_else
    (147) condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .
    (150) bloques_else -> . ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (151) bloques_else -> . ELSE LKEY cuerpo_funcion RKEY

    FINAL_TYPE      reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 147 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    ELSE            shift and go to state 287

    bloques_else                   shift and go to state 297

state 286

    (149) condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .

    FINAL_TYPE      reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    PRINT           reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    IF              reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    RETURN          reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    WHILE           reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    DO              reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    FOR             reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    VOID            reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    VARIABLE        reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    CONST_TYPE      reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    VAR_TYPE        reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    INT_TYPE        reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    STRING_TYPE     reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    DOUBLE_TYPE     reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    BOOL_TYPE       reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    LIST            reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    MAP             reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    SET             reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)
    RKEY            reduce using rule 149 (condicional -> IF LPAREN condiciones RPAREN LKEY RKEY bloques_else .)


state 287

    (150) bloques_else -> ELSE . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (151) bloques_else -> ELSE . LKEY cuerpo_funcion RKEY

    IF              shift and go to state 298
    LKEY            shift and go to state 299


state 288

    (128) while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 128 (while -> WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY .)


state 289

    (130) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones . RPAREN SEMICOLON

    RPAREN          shift and go to state 300


state 290

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 301


state 291

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 302


state 292

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 303


state 293

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN . IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    IN              shift and go to state 304


state 294

    (126) specific_instance -> DOS_PUNTOS VARIABLE .
    (127) specific_instance -> DOS_PUNTOS VARIABLE . COMA specific_instance

    RPAREN          reduce using rule 126 (specific_instance -> DOS_PUNTOS VARIABLE .)
    COMA            shift and go to state 305


state 295

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 306


state 296

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)


state 297

    (146) condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .

    FINAL_TYPE      reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    PRINT           reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    IF              reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RETURN          reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    WHILE           reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DO              reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    FOR             reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VOID            reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VARIABLE        reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    CONST_TYPE      reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VAR_TYPE        reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    INT_TYPE        reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    STRING_TYPE     reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DOUBLE_TYPE     reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    BOOL_TYPE       reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    LIST            reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    MAP             reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    SET             reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RKEY            reduce using rule 146 (condicional -> IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)


state 298

    (150) bloques_else -> ELSE IF . LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else

    LPAREN          shift and go to state 307


state 299

    (151) bloques_else -> ELSE LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 308
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 300

    (130) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 309


state 301

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 310


state 302

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 311
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 303

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 312


state 304

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN . VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 313


state 305

    (127) specific_instance -> DOS_PUNTOS VARIABLE COMA . specific_instance
    (126) specific_instance -> . DOS_PUNTOS VARIABLE
    (127) specific_instance -> . DOS_PUNTOS VARIABLE COMA specific_instance

    DOS_PUNTOS      shift and go to state 281

    specific_instance              shift and go to state 314

state 306

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 164
    getVariable                    shift and go to state 185
    cuerpo_funcion                 shift and go to state 315
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    variables                      shift and go to state 178
    variable_indexada              shift and go to state 30

state 307

    (150) bloques_else -> ELSE IF LPAREN . condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (131) condiciones -> . comparacion_logica
    (132) condiciones -> . getVariable
    (133) condiciones -> . BOOLEAN
    (134) condiciones -> . invocar
    (80) comparacion_logica -> . comparacion
    (81) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (79) comparacion -> . operacion comparador operacion
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (91) operacion -> . elemento
    (92) operacion -> . elemento operador operacion
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS
    (74) elemento -> . INT
    (75) elemento -> . DOUBLE
    (76) elemento -> . STRING
    (77) elemento -> . BOOLEAN
    (78) elemento -> . getVariable

    BOOLEAN         shift and go to state 223
    VARIABLE        shift and go to state 49
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    STRING          shift and go to state 79

    condiciones                    shift and go to state 316
    comparacion_logica             shift and go to state 221
    getVariable                    shift and go to state 222
    invocar                        shift and go to state 224
    comparacion                    shift and go to state 219
    variables                      shift and go to state 61
    operacion                      shift and go to state 225
    variable_indexada              shift and go to state 30
    elemento                       shift and go to state 70

state 308

    (151) bloques_else -> ELSE LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 317


state 309

    (130) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .

    FINAL_TYPE      reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    PRINT           reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    IF              reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    RETURN          reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    WHILE           reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    DO              reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    FOR             reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    VOID            reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    LIST            reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    MAP             reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    SET             reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)
    RKEY            reduce using rule 130 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON .)


state 310

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    asignar_variable               shift and go to state 168
    cuerpo_funcion                 shift and go to state 318
    sentencias_funcion             shift and go to state 167
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 311

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 319


state 312

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 320
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 313

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 321


state 314

    (127) specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance .

    RPAREN          reduce using rule 127 (specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance .)


state 315

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 322


state 316

    (150) bloques_else -> ELSE IF LPAREN condiciones . RPAREN LKEY cuerpo_funcion RKEY bloques_else

    RPAREN          shift and go to state 323


state 317

    (151) bloques_else -> ELSE LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 151 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)


state 318

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 324


state 319

    (123) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 123 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)


state 320

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 325


state 321

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 326


state 322

    (124) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 124 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)


state 323

    (150) bloques_else -> ELSE IF LPAREN condiciones RPAREN . LKEY cuerpo_funcion RKEY bloques_else

    LKEY            shift and go to state 327


state 324

    (121) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 121 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)


state 325

    (122) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 122 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)


state 326

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    tipo_dato                      shift and go to state 164
    cuerpo_funcion                 shift and go to state 328
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 327

    (150) bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY . cuerpo_funcion RKEY bloques_else
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato variables asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato variables SEMICOLON
    (48) asignar_variable -> . FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON
    (49) asignar_variable -> . FINAL_TYPE tipo_dato variables SEMICOLON
    (50) cambiar_variable -> . variables modificador SEMICOLON
    (51) cambiar_variable -> . variables asignador expresion SEMICOLON
    (70) impresion -> . PRINT LPAREN operacion RPAREN SEMICOLON
    (71) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (72) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (146) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (147) condicional -> . IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (148) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY
    (149) condicional -> . IF LPAREN condiciones RPAREN LKEY RKEY bloques_else
    (67) retorno -> . RETURN SEMICOLON
    (68) retorno -> . RETURN expresion SEMICOLON
    (128) while -> . WHILE LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY
    (129) while -> . WHILE LPAREN condiciones RPAREN LKEY RKEY
    (130) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN condiciones RPAREN SEMICOLON
    (121) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (122) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (123) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (124) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (125) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (102) tipo_dato -> . VOID
    (103) tipo_dato -> . VARIABLE
    (104) tipo_dato -> . FINAL_TYPE
    (105) tipo_dato -> . CONST_TYPE
    (106) tipo_dato -> . VAR_TYPE
    (107) tipo_dato -> . INT_TYPE
    (108) tipo_dato -> . STRING_TYPE
    (109) tipo_dato -> . DOUBLE_TYPE
    (110) tipo_dato -> . BOOL_TYPE
    (111) tipo_dato -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (112) tipo_dato -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (113) tipo_dato -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (69) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    FINAL_TYPE      shift and go to state 11
    PRINT           shift and go to state 179
    IF              shift and go to state 180
    RETURN          shift and go to state 181
    WHILE           shift and go to state 182
    DO              shift and go to state 183
    FOR             shift and go to state 184
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 165
    CONST_TYPE      shift and go to state 15
    VAR_TYPE        shift and go to state 16
    INT_TYPE        shift and go to state 17
    STRING_TYPE     shift and go to state 18
    DOUBLE_TYPE     shift and go to state 19
    BOOL_TYPE       shift and go to state 20
    LIST            shift and go to state 21
    MAP             shift and go to state 22
    SET             shift and go to state 23

    cuerpo_funcion                 shift and go to state 329
    sentencias_funcion             shift and go to state 167
    asignar_variable               shift and go to state 168
    cambiar_variable               shift and go to state 169
    impresion                      shift and go to state 170
    condicional                    shift and go to state 171
    retorno                        shift and go to state 172
    while                          shift and go to state 173
    do_while                       shift and go to state 174
    for                            shift and go to state 175
    for_each                       shift and go to state 176
    invocacion                     shift and go to state 177
    tipo_dato                      shift and go to state 164
    variables                      shift and go to state 178
    getVariable                    shift and go to state 185
    variable_indexada              shift and go to state 30

state 328

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 330


state 329

    (150) bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion . RKEY bloques_else

    RKEY            shift and go to state 331


state 330

    (125) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .

    FINAL_TYPE      reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    PRINT           reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 125 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)


state 331

    (150) bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY . bloques_else
    (150) bloques_else -> . ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (151) bloques_else -> . ELSE LKEY cuerpo_funcion RKEY

    ELSE            shift and go to state 287

    bloques_else                   shift and go to state 332

state 332

    (150) bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .

    FINAL_TYPE      reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    PRINT           reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    IF              reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RETURN          reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    WHILE           reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DO              reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    FOR             reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VOID            reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VARIABLE        reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    CONST_TYPE      reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VAR_TYPE        reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    INT_TYPE        reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    STRING_TYPE     reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DOUBLE_TYPE     reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    BOOL_TYPE       reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    LIST            reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    MAP             reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    SET             reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RKEY            reduce using rule 150 (bloques_else -> ELSE IF LPAREN condiciones RPAREN LKEY cuerpo_funcion RKEY bloques_else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
