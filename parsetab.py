
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOLEAN BOOL_TYPE CLASS COMA COMMENT CONJUNTO CONST_TYPE DECREMENT_VAR DICT DIVIDE DIVIDE_ASSIGN DO DOC_COMMENT DOS_PUNTOS DOT DOUBLE DOUBLE_TYPE ELSE EQUALITY FINAL_TYPE FOR GREATER_EQ_THAN GREATER_THAN IF IMPORT IN INCREMENT_VAR INEQUALITY INT INT_TYPE LBRACKETS LESS_EQ_THAN LESS_THAN LIST LKEY LPAREN MAP MINUS MINUS_ASSIGN MODULO MODULO_ASSIGN NOT OR PLUS PLUS_ASSIGN PRINT RBRACKETS READLINESYNC RETURN RKEY RPAREN SEMICOLON SET STATIC STDIN STRING STRING_TYPE THIS TIMES TIMES_ASSIGN VARIABLE VAR_TYPE VOID WHILEprograma : importaciones instrucciones\n                | instruccionesinstrucciones : sentencias\n                | sentencias instruccionesimportaciones : import\n                    | import importacionesimport : IMPORT STRING SEMICOLONsentencias : asignar_variable\n                  | funcion\n                  | classsentencias_funcion : asignar_variable\n                        | cambiar_variable\n                        | impresion\n                        | condicional\n                        | retorno\n                        | while\n                        | do_while\n                        | for\n                        | for_each\n                        | invocacioncuerpo_funcion : sentencias_funcion\n                        | sentencias_funcion cuerpo_funcionsentencias_clase : asignar_variable\n                        | cambiar_variable\n                        | funcion\n                        | constructor\n                        | funcion_staticcuerpo_clase : sentencias_clase\n                    | sentencias_clase cuerpo_claseclass : CLASS VARIABLE LKEY cuerpo_clase RKEYinvocacion : getVariable LPAREN element_list RPAREN SEMICOLON\n                | getVariable LPAREN RPAREN SEMICOLONinvocar : getVariable LPAREN element_list RPAREN\n                | getVariable LPAREN RPARENconstructor : VARIABLE LPAREN atributo_list RPAREN SEMICOLONatributo_list : THIS DOT VARIABLE\n                    | THIS DOT VARIABLE COMA atributo_listfuncion : tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY\n                | tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEYfuncion_static : STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY\n                | STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEYvariables : VARIABLE\n                 | variable_indexadagetVariable : variables \n                    | variables DOT getVariableasignar_variable : tipo_dato VARIABLE asignador expresion SEMICOLON\n                        | tipo_dato VARIABLE SEMICOLON\n                        | prefijo tipo_variable VARIABLE asignador expresion SEMICOLON\n                        | prefijo tipo_variable VARIABLE SEMICOLONcambiar_variable : getVariable modificador SEMICOLON\n                        | getVariable asignador expresion SEMICOLONmodificador : INCREMENT_VAR\n                    | DECREMENT_VARasignador : ASSIGN\n                | PLUS_ASSIGN\n                | MINUS_ASSIGN\n                | TIMES_ASSIGN\n                | DIVIDE_ASSIGN\n                | MODULO_ASSIGNexpresion : comparacion_logica\n                    | list\n                    | diccionario\n                    | set\n                    | inputretorno : RETURN SEMICOLON\n                | RETURN expresion SEMICOLONvariable_indexada : VARIABLE LBRACKETS inmutables RBRACKETSimpresion : PRINT LPAREN comparacion_logica RPAREN SEMICOLON\n                 | PRINT LPAREN RPAREN SEMICOLONparametros : tipo_dato VARIABLE\n                  | tipo_dato VARIABLE COMA parametrosinput : STDIN DOT READLINESYNC LPAREN RPARENelemento : INT\n                | DOUBLE\n                | STRING\n                | BOOLEAN\n                | getVariablecomparables : operacion\n                    | STRING\n                    | BOOLEAN\n                    | invocarcomparacion : comparables comparador comparables\n                    | comparablescomparacion_logica : comparacion\n                          | comparacion operador_logico comparacion_logicaoperador_logico : AND\n                        | OR\n                        | NOTcomparador : EQUALITY\n                    | INEQUALITY\n                    | GREATER_THAN\n                    | LESS_THAN\n                    | GREATER_EQ_THAN\n                    | LESS_EQ_THANoperables : INT\n                | DOUBLE\n                | getVariableoperacion : operables\n                | operables operador operablesoperador : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MODULOlist : LBRACKETS element_list RBRACKETS\n            | LBRACKETS RBRACKETSelement_list : elemento\n                    | elemento COMA element_listprefijo : FINAL_TYPE\n             | CONST_TYPEtipo_dato : VOID\n             | VARIABLE \n             | prefijo\n             | VAR_TYPE\n             | INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | BOOL_TYPE\n             | coleccionescolecciones : LIST LESS_THAN tipo_coleccion GREATER_THAN\n             | MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN\n             | SET LESS_THAN tipo_coleccion GREATER_THANtipo_coleccion : INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | FINAL_TYPE\n             | CONST_TYPE\n             | VAR_TYPE\n             | BOOL_TYPE\n             | VARIABLEtipo_variable : VOID\n             | VARIABLE \n             | VAR_TYPE\n             | INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | BOOL_TYPE\n             | coleccionesfor  : FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY\n            | FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY\n            | FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEYfor_each : FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY\n                | FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEYspecific_instance    : DOS_PUNTOS VARIABLE\n                            | DOS_PUNTOS VARIABLE COMA specific_instancewhile : WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY\n              | WHILE LPAREN comparacion_logica RPAREN LKEY RKEYdo_while : DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLONinmutables : STRING\n             | INT\n             | DOUBLEkey_element : inmutables DOS_PUNTOS elementokey_element_list : key_element\n                        | key_element COMA key_element_listdiccionario : LKEY key_element_list RKEY\n                    | LKEY RKEY\n                    | DICT LPAREN RPARENset : LKEY element_list RKEY\n            | CONJUNTO LPAREN RPARENcondicional : IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY\n                    | IF LPAREN comparacion_logica RPAREN LKEY RKEY\n                    | IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_elsebloques_else : ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | ELSE LKEY cuerpo_funcion RKEY'
    
_lr_action_items = {'IMPORT':([0,4,44,],[6,6,-7,]),'CLASS':([0,2,4,5,7,8,9,27,44,46,96,111,155,206,222,237,],[13,13,-5,13,-8,-9,-10,-6,-7,-47,-49,-46,-30,-48,-39,-38,]),'VOID':([0,2,4,5,7,8,9,12,21,22,27,44,46,47,55,96,99,100,101,102,103,104,106,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[14,14,-5,14,-8,-9,-10,33,-109,-110,-6,-7,-47,14,14,-49,14,-23,-24,-25,-26,-27,14,-46,14,-30,14,14,14,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,14,14,-51,14,-38,-66,-35,-32,-69,14,-31,-68,14,14,14,-162,-147,-41,-161,-163,-146,-40,-160,14,14,14,-148,14,14,-165,-141,-142,-139,-140,14,14,-143,-164,]),'VARIABLE':([0,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,27,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,75,76,91,94,95,96,97,99,100,101,102,103,104,106,107,108,109,111,112,113,114,115,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,155,158,161,169,173,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,202,206,209,212,222,224,225,226,227,229,230,231,233,234,235,237,243,246,247,248,249,254,256,261,266,267,268,269,270,272,274,276,278,281,283,284,289,292,293,294,296,304,305,307,310,312,314,315,317,318,320,325,327,330,332,333,334,335,338,340,],[11,11,-5,11,-8,-9,-10,30,-112,32,40,-111,-114,-115,-116,-117,-118,-119,-109,-110,-6,54,-132,-131,-133,-134,-135,-136,-137,-138,64,64,64,-7,67,-47,11,-54,-55,-56,-57,-58,-59,97,67,67,150,-113,67,-49,-112,97,-23,-24,-25,-26,-27,11,-120,64,-122,-46,67,-86,-87,-88,67,-89,-90,-91,-92,-93,-94,67,-100,-101,-102,-103,-104,67,67,186,-30,67,211,67,67,11,186,221,-112,186,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,67,-48,-50,-121,-39,67,67,67,-65,67,186,11,250,-51,11,-38,-66,67,67,263,-35,-32,-69,273,186,-31,-68,186,186,285,287,67,186,-162,-147,67,302,-41,-161,-163,-146,-40,-160,186,186,321,186,67,-148,186,186,-165,-141,-142,-139,-140,186,186,-143,-164,]),'VAR_TYPE':([0,2,4,5,7,8,9,12,21,22,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[15,15,-5,15,-8,-9,-10,34,-109,-110,-6,62,62,62,-7,-47,15,15,-49,15,-23,-24,-25,-26,-27,15,62,-46,15,-30,15,15,15,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,15,15,-51,15,-38,-66,-35,-32,-69,15,-31,-68,15,15,15,-162,-147,-41,-161,-163,-146,-40,-160,15,15,15,-148,15,15,-165,-141,-142,-139,-140,15,15,-143,-164,]),'INT_TYPE':([0,2,4,5,7,8,9,12,21,22,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[16,16,-5,16,-8,-9,-10,35,-109,-110,-6,57,57,57,-7,-47,16,16,-49,16,-23,-24,-25,-26,-27,16,57,-46,16,-30,16,16,16,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,16,16,-51,16,-38,-66,-35,-32,-69,16,-31,-68,16,16,16,-162,-147,-41,-161,-163,-146,-40,-160,16,16,16,-148,16,16,-165,-141,-142,-139,-140,16,16,-143,-164,]),'STRING_TYPE':([0,2,4,5,7,8,9,12,21,22,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[17,17,-5,17,-8,-9,-10,36,-109,-110,-6,58,58,58,-7,-47,17,17,-49,17,-23,-24,-25,-26,-27,17,58,-46,17,-30,17,17,17,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,17,17,-51,17,-38,-66,-35,-32,-69,17,-31,-68,17,17,17,-162,-147,-41,-161,-163,-146,-40,-160,17,17,17,-148,17,17,-165,-141,-142,-139,-140,17,17,-143,-164,]),'DOUBLE_TYPE':([0,2,4,5,7,8,9,12,21,22,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[18,18,-5,18,-8,-9,-10,37,-109,-110,-6,59,59,59,-7,-47,18,18,-49,18,-23,-24,-25,-26,-27,18,59,-46,18,-30,18,18,18,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,18,18,-51,18,-38,-66,-35,-32,-69,18,-31,-68,18,18,18,-162,-147,-41,-161,-163,-146,-40,-160,18,18,18,-148,18,18,-165,-141,-142,-139,-140,18,18,-143,-164,]),'BOOL_TYPE':([0,2,4,5,7,8,9,12,21,22,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[19,19,-5,19,-8,-9,-10,38,-109,-110,-6,63,63,63,-7,-47,19,19,-49,19,-23,-24,-25,-26,-27,19,63,-46,19,-30,19,19,19,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,19,19,-51,19,-38,-66,-35,-32,-69,19,-31,-68,19,19,19,-162,-147,-41,-161,-163,-146,-40,-160,19,19,19,-148,19,19,-165,-141,-142,-139,-140,19,19,-143,-164,]),'FINAL_TYPE':([0,2,4,5,7,8,9,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[21,21,-5,21,-8,-9,-10,-6,60,60,60,-7,-47,21,21,-49,21,-23,-24,-25,-26,-27,21,60,-46,21,-30,21,21,21,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,21,21,-51,21,-38,-66,-35,-32,-69,21,-31,-68,21,21,21,-162,-147,-41,-161,-163,-146,-40,-160,21,21,21,-148,21,21,-165,-141,-142,-139,-140,21,21,-143,-164,]),'CONST_TYPE':([0,2,4,5,7,8,9,27,41,42,43,44,46,47,55,96,99,100,101,102,103,104,106,108,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[22,22,-5,22,-8,-9,-10,-6,61,61,61,-7,-47,22,22,-49,22,-23,-24,-25,-26,-27,22,61,-46,22,-30,22,22,22,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,22,22,-51,22,-38,-66,-35,-32,-69,22,-31,-68,22,22,22,-162,-147,-41,-161,-163,-146,-40,-160,22,22,22,-148,22,22,-165,-141,-142,-139,-140,22,22,-143,-164,]),'LIST':([0,2,4,5,7,8,9,12,21,22,27,44,46,47,55,96,99,100,101,102,103,104,106,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[23,23,-5,23,-8,-9,-10,23,-109,-110,-6,-7,-47,23,23,-49,23,-23,-24,-25,-26,-27,23,-46,23,-30,23,23,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,23,23,-51,23,-38,-66,-35,-32,-69,23,-31,-68,23,23,23,-162,-147,-41,-161,-163,-146,-40,-160,23,23,23,-148,23,23,-165,-141,-142,-139,-140,23,23,-143,-164,]),'MAP':([0,2,4,5,7,8,9,12,21,22,27,44,46,47,55,96,99,100,101,102,103,104,106,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[24,24,-5,24,-8,-9,-10,24,-109,-110,-6,-7,-47,24,24,-49,24,-23,-24,-25,-26,-27,24,-46,24,-30,24,24,24,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,24,24,-51,24,-38,-66,-35,-32,-69,24,-31,-68,24,24,24,-162,-147,-41,-161,-163,-146,-40,-160,24,24,24,-148,24,24,-165,-141,-142,-139,-140,24,24,-143,-164,]),'SET':([0,2,4,5,7,8,9,12,21,22,27,44,46,47,55,96,99,100,101,102,103,104,106,111,152,155,183,184,188,189,190,191,192,193,194,195,196,197,198,206,209,222,227,230,231,234,235,237,243,249,254,256,266,267,268,269,270,278,281,283,292,293,294,296,304,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[25,25,-5,25,-8,-9,-10,25,-109,-110,-6,-7,-47,25,25,-49,25,-23,-24,-25,-26,-27,25,-46,25,-30,25,25,25,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-39,-65,25,25,-51,25,-38,-66,-35,-32,-69,25,-31,-68,25,25,25,-162,-147,-41,-161,-163,-146,-40,-160,25,25,25,-148,25,25,-165,-141,-142,-139,-140,25,25,-143,-164,]),'$end':([1,3,5,7,8,9,26,28,46,96,111,155,206,222,237,],[0,-2,-3,-8,-9,-10,-1,-4,-47,-49,-46,-30,-48,-39,-38,]),'STRING':([6,45,46,48,49,50,51,52,53,75,76,95,96,110,111,112,113,114,115,135,136,137,138,139,140,141,148,158,169,172,173,202,206,224,225,226,229,246,247,284,315,],[29,82,-47,-54,-55,-56,-57,-58,-59,121,131,82,-49,164,-46,82,-86,-87,-88,82,-89,-90,-91,-92,-93,-94,121,82,121,164,121,82,-48,121,82,82,82,82,82,82,82,]),'LESS_THAN':([23,24,25,67,80,81,82,83,84,85,86,87,88,89,90,178,179,181,182,213,218,],[41,42,43,-42,139,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-99,-97,-34,-45,-67,-33,]),'SEMICOLON':([29,30,54,67,68,69,70,71,72,73,74,80,81,82,83,84,85,86,87,88,89,90,117,125,153,157,159,160,167,168,170,171,174,175,177,178,179,181,182,202,210,213,218,221,228,231,232,236,239,241,247,253,255,260,262,263,308,],[44,46,96,-42,111,-60,-61,-62,-63,-64,-84,-83,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-106,-156,206,209,-52,-53,-85,-105,-155,-158,-157,-159,-82,-99,-97,-34,-45,227,234,-67,-33,46,243,247,249,-72,254,256,261,267,268,272,274,46,317,]),'LPAREN':([30,67,77,78,86,89,90,97,176,182,186,199,200,201,203,205,211,213,263,271,306,],[47,-42,132,133,148,-44,-43,154,217,-45,-42,224,225,226,229,231,235,-67,275,284,315,]),'ASSIGN':([30,54,67,89,90,97,105,182,186,199,213,221,263,],[48,48,-42,-44,-43,-42,48,-45,-42,48,-67,48,48,]),'PLUS_ASSIGN':([30,54,67,89,90,97,105,182,186,199,213,221,263,],[49,49,-42,-44,-43,-42,49,-45,-42,49,-67,49,49,]),'MINUS_ASSIGN':([30,54,67,89,90,97,105,182,186,199,213,221,263,],[50,50,-42,-44,-43,-42,50,-45,-42,50,-67,50,50,]),'TIMES_ASSIGN':([30,54,67,89,90,97,105,182,186,199,213,221,263,],[51,51,-42,-44,-43,-42,51,-45,-42,51,-67,51,51,]),'DIVIDE_ASSIGN':([30,54,67,89,90,97,105,182,186,199,213,221,263,],[52,52,-42,-44,-43,-42,52,-45,-42,52,-67,52,52,]),'MODULO_ASSIGN':([30,54,67,89,90,97,105,182,186,199,213,221,263,],[53,53,-42,-44,-43,-42,53,-45,-42,53,-67,53,53,]),'LKEY':([40,45,48,49,50,51,52,53,93,95,151,158,202,204,252,257,258,265,295,299,303,309,311,329,331,],[55,76,-54,-55,-56,-57,-58,-59,152,76,184,76,76,230,266,269,270,278,307,310,314,318,320,334,335,]),'LBRACKETS':([45,48,49,50,51,52,53,67,95,97,158,186,202,],[75,-54,-55,-56,-57,-58,-59,110,75,110,75,110,75,]),'DICT':([45,48,49,50,51,52,53,95,158,202,],[77,-54,-55,-56,-57,-58,-59,77,77,77,]),'CONJUNTO':([45,48,49,50,51,52,53,95,158,202,],[78,-54,-55,-56,-57,-58,-59,78,78,78,]),'STDIN':([45,48,49,50,51,52,53,95,158,202,],[79,-54,-55,-56,-57,-58,-59,79,79,79,]),'BOOLEAN':([45,46,48,49,50,51,52,53,75,76,95,96,111,112,113,114,115,135,136,137,138,139,140,141,148,158,169,173,202,206,224,225,226,229,246,247,284,315,],[83,-47,-54,-55,-56,-57,-58,-59,122,122,83,-49,-46,83,-86,-87,-88,83,-89,-90,-91,-92,-93,-94,122,83,122,122,83,-48,122,83,83,83,83,83,83,83,]),'INT':([45,46,48,49,50,51,52,53,75,76,95,96,110,111,112,113,114,115,135,136,137,138,139,140,141,142,143,144,145,146,147,148,158,169,172,173,202,206,224,225,226,229,246,247,284,315,],[87,-47,-54,-55,-56,-57,-58,-59,119,129,87,-49,165,-46,87,-86,-87,-88,87,-89,-90,-91,-92,-93,-94,87,-100,-101,-102,-103,-104,119,87,119,165,119,87,-48,119,87,87,87,87,87,87,87,]),'DOUBLE':([45,46,48,49,50,51,52,53,75,76,95,96,110,111,112,113,114,115,135,136,137,138,139,140,141,142,143,144,145,146,147,148,158,169,172,173,202,206,224,225,226,229,246,247,284,315,],[88,-47,-54,-55,-56,-57,-58,-59,120,130,88,-49,166,-46,88,-86,-87,-88,88,-89,-90,-91,-92,-93,-94,88,-100,-101,-102,-103,-104,120,88,120,166,120,88,-48,120,88,88,88,88,88,88,88,]),'STATIC':([46,55,96,99,100,101,102,103,104,111,206,209,222,234,237,249,292,304,],[-47,106,-49,106,-23,-24,-25,-26,-27,-46,-48,-50,-39,-51,-38,-35,-41,-40,]),'RKEY':([46,67,76,89,90,96,98,99,100,101,102,103,104,111,118,119,120,121,122,123,124,126,127,129,130,131,156,182,187,188,189,190,191,192,193,194,195,196,197,198,206,209,213,214,215,216,220,222,223,227,234,237,243,245,249,254,256,267,268,269,270,279,280,281,282,283,291,292,293,294,296,304,305,316,317,319,323,325,326,327,328,330,332,333,336,337,338,340,],[-47,-42,125,-44,-43,-49,155,-28,-23,-24,-25,-26,-27,-46,-107,-73,-74,-75,-76,-77,170,171,-153,-73,-74,-75,-29,-45,222,-21,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-67,-108,-154,-152,237,-39,-22,-65,-51,-38,-66,259,-35,-32,-69,-31,-68,281,283,292,293,-162,296,-147,304,-41,-161,-163,-146,-40,-160,325,-148,327,330,-165,332,-141,333,-142,-139,-140,338,339,-143,-164,]),'PRINT':([46,96,111,152,184,188,189,190,191,192,193,194,195,196,197,198,206,209,227,230,234,243,254,256,266,267,268,269,270,278,281,283,293,294,296,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[-47,-49,-46,200,200,200,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-65,200,-51,-66,-32,-69,200,-31,-68,200,200,200,-162,-147,-161,-163,-146,-160,200,200,200,-148,200,200,-165,-141,-142,-139,-140,200,200,-143,-164,]),'IF':([46,96,111,152,184,188,189,190,191,192,193,194,195,196,197,198,206,209,227,230,234,243,254,256,266,267,268,269,270,278,281,283,293,294,295,296,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[-47,-49,-46,201,201,201,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-65,201,-51,-66,-32,-69,201,-31,-68,201,201,201,-162,-147,-161,-163,306,-146,-160,201,201,201,-148,201,201,-165,-141,-142,-139,-140,201,201,-143,-164,]),'RETURN':([46,96,111,152,184,188,189,190,191,192,193,194,195,196,197,198,206,209,227,230,234,243,254,256,266,267,268,269,270,278,281,283,293,294,296,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[-47,-49,-46,202,202,202,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-65,202,-51,-66,-32,-69,202,-31,-68,202,202,202,-162,-147,-161,-163,-146,-160,202,202,202,-148,202,202,-165,-141,-142,-139,-140,202,202,-143,-164,]),'WHILE':([46,96,111,152,184,188,189,190,191,192,193,194,195,196,197,198,206,209,227,230,234,243,254,256,259,266,267,268,269,270,278,281,283,293,294,296,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[-47,-49,-46,203,203,203,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-65,203,-51,-66,-32,-69,271,203,-31,-68,203,203,203,-162,-147,-161,-163,-146,-160,203,203,203,-148,203,203,-165,-141,-142,-139,-140,203,203,-143,-164,]),'DO':([46,96,111,152,184,188,189,190,191,192,193,194,195,196,197,198,206,209,227,230,234,243,254,256,266,267,268,269,270,278,281,283,293,294,296,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[-47,-49,-46,204,204,204,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-65,204,-51,-66,-32,-69,204,-31,-68,204,204,204,-162,-147,-161,-163,-146,-160,204,204,204,-148,204,204,-165,-141,-142,-139,-140,204,204,-143,-164,]),'FOR':([46,96,111,152,184,188,189,190,191,192,193,194,195,196,197,198,206,209,227,230,234,243,254,256,266,267,268,269,270,278,281,283,293,294,296,305,307,310,314,317,318,320,325,327,330,332,333,334,335,338,340,],[-47,-49,-46,205,205,205,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-50,-65,205,-51,-66,-32,-69,205,-31,-68,205,205,205,-162,-147,-161,-163,-146,-160,205,205,205,-148,205,205,-165,-141,-142,-139,-140,205,205,-143,-164,]),'RPAREN':([47,67,74,80,81,82,83,84,85,86,87,88,89,90,92,118,119,120,121,122,123,132,133,148,150,159,160,167,177,178,179,180,181,182,207,213,214,217,218,219,224,225,235,238,240,242,244,250,251,277,286,288,290,297,298,300,302,321,322,324,],[93,-42,-84,-83,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,151,-107,-73,-74,-75,-76,-77,174,175,181,-70,-52,-53,-85,-82,-99,-97,218,-34,-45,232,-67,-108,236,-33,-71,239,241,252,253,255,257,258,-36,265,-37,299,301,303,308,309,311,-144,329,-145,331,]),'GREATER_THAN':([56,57,58,59,60,61,62,63,64,66,67,80,81,82,83,84,85,86,87,88,89,90,162,178,179,181,182,213,218,],[107,-123,-124,-125,-126,-127,-128,-129,-130,109,-42,138,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,212,-99,-97,-34,-45,-67,-33,]),'COMA':([57,58,59,60,61,62,63,64,65,67,89,90,118,119,120,121,122,123,127,129,130,131,150,182,213,216,250,302,],[-123,-124,-125,-126,-127,-128,-129,-130,108,-42,-44,-43,169,-73,-74,-75,-76,-77,172,-73,-74,-75,183,-45,-67,-152,264,313,]),'DOT':([67,79,89,90,97,186,208,213,],[-42,134,149,-43,-42,-42,233,-67,]),'PLUS':([67,85,86,87,88,89,90,182,213,],[-42,143,-97,-95,-96,-44,-43,-45,-67,]),'MINUS':([67,85,86,87,88,89,90,182,213,],[-42,144,-97,-95,-96,-44,-43,-45,-67,]),'TIMES':([67,85,86,87,88,89,90,182,213,],[-42,145,-97,-95,-96,-44,-43,-45,-67,]),'DIVIDE':([67,85,86,87,88,89,90,182,213,],[-42,146,-97,-95,-96,-44,-43,-45,-67,]),'MODULO':([67,85,86,87,88,89,90,182,213,],[-42,147,-97,-95,-96,-44,-43,-45,-67,]),'EQUALITY':([67,80,81,82,83,84,85,86,87,88,89,90,178,179,181,182,213,218,],[-42,136,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-99,-97,-34,-45,-67,-33,]),'INEQUALITY':([67,80,81,82,83,84,85,86,87,88,89,90,178,179,181,182,213,218,],[-42,137,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-99,-97,-34,-45,-67,-33,]),'GREATER_EQ_THAN':([67,80,81,82,83,84,85,86,87,88,89,90,178,179,181,182,213,218,],[-42,140,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-99,-97,-34,-45,-67,-33,]),'LESS_EQ_THAN':([67,80,81,82,83,84,85,86,87,88,89,90,178,179,181,182,213,218,],[-42,141,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-99,-97,-34,-45,-67,-33,]),'AND':([67,74,80,81,82,83,84,85,86,87,88,89,90,177,178,179,181,182,213,218,],[-42,113,-83,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-82,-99,-97,-34,-45,-67,-33,]),'OR':([67,74,80,81,82,83,84,85,86,87,88,89,90,177,178,179,181,182,213,218,],[-42,114,-83,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-82,-99,-97,-34,-45,-67,-33,]),'NOT':([67,74,80,81,82,83,84,85,86,87,88,89,90,177,178,179,181,182,213,218,],[-42,115,-83,-78,-79,-80,-81,-98,-97,-95,-96,-44,-43,-82,-99,-97,-34,-45,-67,-33,]),'RBRACKETS':([67,75,89,90,116,118,119,120,121,122,123,163,164,165,166,182,213,214,],[-42,117,-44,-43,168,-107,-73,-74,-75,-76,-77,213,-149,-150,-151,-45,-67,-108,]),'INCREMENT_VAR':([67,89,90,97,105,182,186,199,213,273,285,287,],[-42,-44,-43,-42,159,-45,-42,159,-67,159,159,159,]),'DECREMENT_VAR':([67,89,90,97,105,182,186,199,213,273,285,287,],[-42,-44,-43,-42,160,-45,-42,160,-67,160,160,160,]),'DOS_PUNTOS':([128,129,130,131,164,165,166,275,313,],[173,-150,-151,-149,-149,-150,-151,289,289,]),'READLINESYNC':([134,],[176,]),'THIS':([154,264,],[208,208,]),'IN':([263,301,],[276,312,]),'ELSE':([281,293,339,],[295,295,295,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'importaciones':([0,4,],[2,27,]),'instrucciones':([0,2,5,],[3,26,28,]),'import':([0,4,],[4,4,]),'sentencias':([0,2,5,],[5,5,5,]),'asignar_variable':([0,2,5,55,99,152,184,188,230,231,266,269,270,278,307,310,314,318,320,334,335,],[7,7,7,100,100,189,189,189,189,246,189,189,189,189,189,189,189,189,189,189,189,]),'funcion':([0,2,5,55,99,],[8,8,8,102,102,]),'class':([0,2,5,],[9,9,9,]),'tipo_dato':([0,2,5,47,55,99,106,152,183,184,188,230,231,235,266,269,270,278,307,310,314,318,320,334,335,],[10,10,10,91,10,10,161,185,91,185,185,185,248,91,185,185,185,185,185,185,185,185,185,185,185,]),'prefijo':([0,2,5,47,55,99,106,152,183,184,188,230,231,235,266,269,270,278,307,310,314,318,320,334,335,],[12,12,12,94,12,12,94,12,94,12,12,12,12,94,12,12,12,12,12,12,12,12,12,12,12,]),'colecciones':([0,2,5,12,47,55,99,106,152,183,184,188,230,231,235,266,269,270,278,307,310,314,318,320,334,335,],[20,20,20,39,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'tipo_variable':([12,],[31,]),'asignador':([30,54,105,199,221,263,],[45,95,158,158,45,45,]),'tipo_coleccion':([41,42,43,108,],[56,65,66,162,]),'expresion':([45,95,158,202,],[68,153,210,228,]),'comparacion_logica':([45,95,112,158,202,225,226,229,246,247,284,315,],[69,69,167,69,69,240,242,244,260,262,297,324,]),'list':([45,95,158,202,],[70,70,70,70,]),'diccionario':([45,95,158,202,],[71,71,71,71,]),'set':([45,95,158,202,],[72,72,72,72,]),'input':([45,95,158,202,],[73,73,73,73,]),'comparacion':([45,95,112,158,202,225,226,229,246,247,284,315,],[74,74,74,74,74,74,74,74,74,74,74,74,]),'comparables':([45,95,112,135,158,202,225,226,229,246,247,284,315,],[80,80,80,177,80,80,80,80,80,80,80,80,80,]),'operacion':([45,95,112,135,158,202,225,226,229,246,247,284,315,],[81,81,81,81,81,81,81,81,81,81,81,81,81,]),'invocar':([45,95,112,135,158,202,225,226,229,246,247,284,315,],[84,84,84,84,84,84,84,84,84,84,84,84,84,]),'operables':([45,95,112,135,142,158,202,225,226,229,246,247,284,315,],[85,85,85,85,178,85,85,85,85,85,85,85,85,85,]),'getVariable':([45,55,75,76,95,99,112,135,142,148,149,152,158,169,173,184,188,202,224,225,226,229,230,246,247,266,269,270,276,278,284,307,310,314,315,318,320,334,335,],[86,105,123,123,86,105,86,86,179,123,182,199,86,123,123,199,199,86,123,86,86,86,199,86,86,199,199,199,290,199,86,199,199,199,86,199,199,199,199,]),'variables':([45,55,75,76,95,99,112,135,142,148,149,152,158,169,173,184,188,202,224,225,226,229,230,246,247,266,269,270,276,278,284,307,310,314,315,318,320,334,335,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'variable_indexada':([45,55,75,76,95,99,112,135,142,148,149,152,158,169,173,184,188,202,224,225,226,229,230,246,247,266,269,270,276,278,284,307,310,314,315,318,320,334,335,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'parametros':([47,183,235,],[92,219,251,]),'cuerpo_clase':([55,99,],[98,156,]),'sentencias_clase':([55,99,],[99,99,]),'cambiar_variable':([55,99,152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[101,101,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'constructor':([55,99,],[103,103,]),'funcion_static':([55,99,],[104,104,]),'operador_logico':([74,],[112,]),'element_list':([75,76,148,169,224,],[116,126,180,214,238,]),'elemento':([75,76,148,169,173,224,],[118,118,118,118,216,118,]),'key_element_list':([76,172,],[124,215,]),'key_element':([76,172,],[127,127,]),'inmutables':([76,110,172,],[128,163,128,]),'comparador':([80,],[135,]),'operador':([85,],[142,]),'modificador':([105,199,273,285,287,],[157,157,286,298,300,]),'cuerpo_funcion':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[187,220,223,245,279,280,282,291,316,319,323,326,328,336,337,]),'sentencias_funcion':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'impresion':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,]),'condicional':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,]),'retorno':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,]),'while':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,]),'do_while':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,]),'for':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,]),'for_each':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,]),'invocacion':([152,184,188,230,266,269,270,278,307,310,314,318,320,334,335,],[198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,]),'atributo_list':([154,264,],[207,277,]),'specific_instance':([275,313,],[288,322,]),'bloques_else':([281,293,339,],[294,305,340,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> importaciones instrucciones','programa',2,'p_programa','analizador_sintactico.py',5),
  ('programa -> instrucciones','programa',1,'p_programa','analizador_sintactico.py',6),
  ('instrucciones -> sentencias','instrucciones',1,'p_instrucciones','analizador_sintactico.py',9),
  ('instrucciones -> sentencias instrucciones','instrucciones',2,'p_instrucciones','analizador_sintactico.py',10),
  ('importaciones -> import','importaciones',1,'p_importaciones','analizador_sintactico.py',13),
  ('importaciones -> import importaciones','importaciones',2,'p_importaciones','analizador_sintactico.py',14),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizador_sintactico.py',17),
  ('sentencias -> asignar_variable','sentencias',1,'p_sentencias','analizador_sintactico.py',21),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','analizador_sintactico.py',22),
  ('sentencias -> class','sentencias',1,'p_sentencias','analizador_sintactico.py',23),
  ('sentencias_funcion -> asignar_variable','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',26),
  ('sentencias_funcion -> cambiar_variable','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',27),
  ('sentencias_funcion -> impresion','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',28),
  ('sentencias_funcion -> condicional','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',29),
  ('sentencias_funcion -> retorno','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',30),
  ('sentencias_funcion -> while','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',31),
  ('sentencias_funcion -> do_while','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',32),
  ('sentencias_funcion -> for','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',33),
  ('sentencias_funcion -> for_each','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',34),
  ('sentencias_funcion -> invocacion','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',35),
  ('cuerpo_funcion -> sentencias_funcion','cuerpo_funcion',1,'p_cuerpo_funcion','analizador_sintactico.py',38),
  ('cuerpo_funcion -> sentencias_funcion cuerpo_funcion','cuerpo_funcion',2,'p_cuerpo_funcion','analizador_sintactico.py',39),
  ('sentencias_clase -> asignar_variable','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',42),
  ('sentencias_clase -> cambiar_variable','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',43),
  ('sentencias_clase -> funcion','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',44),
  ('sentencias_clase -> constructor','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',45),
  ('sentencias_clase -> funcion_static','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',46),
  ('cuerpo_clase -> sentencias_clase','cuerpo_clase',1,'p_cuerpo_clase','analizador_sintactico.py',49),
  ('cuerpo_clase -> sentencias_clase cuerpo_clase','cuerpo_clase',2,'p_cuerpo_clase','analizador_sintactico.py',50),
  ('class -> CLASS VARIABLE LKEY cuerpo_clase RKEY','class',5,'p_class','analizador_sintactico.py',53),
  ('invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON','invocacion',5,'p_invocacion','analizador_sintactico.py',57),
  ('invocacion -> getVariable LPAREN RPAREN SEMICOLON','invocacion',4,'p_invocacion','analizador_sintactico.py',58),
  ('invocar -> getVariable LPAREN element_list RPAREN','invocar',4,'p_invocar','analizador_sintactico.py',62),
  ('invocar -> getVariable LPAREN RPAREN','invocar',3,'p_invocar','analizador_sintactico.py',63),
  ('constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON','constructor',5,'p_constructor','analizador_sintactico.py',66),
  ('atributo_list -> THIS DOT VARIABLE','atributo_list',3,'p_atributo_list','analizador_sintactico.py',70),
  ('atributo_list -> THIS DOT VARIABLE COMA atributo_list','atributo_list',5,'p_atributo_list','analizador_sintactico.py',71),
  ('funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY','funcion',8,'p_funcion','analizador_sintactico.py',74),
  ('funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY','funcion',7,'p_funcion','analizador_sintactico.py',75),
  ('funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY','funcion_static',9,'p_funcion_static','analizador_sintactico.py',79),
  ('funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY','funcion_static',8,'p_funcion_static','analizador_sintactico.py',80),
  ('variables -> VARIABLE','variables',1,'p_variables','analizador_sintactico.py',84),
  ('variables -> variable_indexada','variables',1,'p_variables','analizador_sintactico.py',85),
  ('getVariable -> variables','getVariable',1,'p_getVariable','analizador_sintactico.py',88),
  ('getVariable -> variables DOT getVariable','getVariable',3,'p_getVariable','analizador_sintactico.py',89),
  ('asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON','asignar_variable',5,'p_asignar_variable','analizador_sintactico.py',92),
  ('asignar_variable -> tipo_dato VARIABLE SEMICOLON','asignar_variable',3,'p_asignar_variable','analizador_sintactico.py',93),
  ('asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON','asignar_variable',6,'p_asignar_variable','analizador_sintactico.py',94),
  ('asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON','asignar_variable',4,'p_asignar_variable','analizador_sintactico.py',95),
  ('cambiar_variable -> getVariable modificador SEMICOLON','cambiar_variable',3,'p_cambiar_variable','analizador_sintactico.py',99),
  ('cambiar_variable -> getVariable asignador expresion SEMICOLON','cambiar_variable',4,'p_cambiar_variable','analizador_sintactico.py',100),
  ('modificador -> INCREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',104),
  ('modificador -> DECREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',105),
  ('asignador -> ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',108),
  ('asignador -> PLUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',109),
  ('asignador -> MINUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',110),
  ('asignador -> TIMES_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',111),
  ('asignador -> DIVIDE_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',112),
  ('asignador -> MODULO_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',113),
  ('expresion -> comparacion_logica','expresion',1,'p_expresion','analizador_sintactico.py',116),
  ('expresion -> list','expresion',1,'p_expresion','analizador_sintactico.py',117),
  ('expresion -> diccionario','expresion',1,'p_expresion','analizador_sintactico.py',118),
  ('expresion -> set','expresion',1,'p_expresion','analizador_sintactico.py',119),
  ('expresion -> input','expresion',1,'p_expresion','analizador_sintactico.py',120),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','analizador_sintactico.py',123),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','analizador_sintactico.py',124),
  ('variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS','variable_indexada',4,'p_variable_indexada','analizador_sintactico.py',128),
  ('impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',132),
  ('impresion -> PRINT LPAREN RPAREN SEMICOLON','impresion',4,'p_impresion','analizador_sintactico.py',133),
  ('parametros -> tipo_dato VARIABLE','parametros',2,'p_parametros','analizador_sintactico.py',137),
  ('parametros -> tipo_dato VARIABLE COMA parametros','parametros',4,'p_parametros','analizador_sintactico.py',138),
  ('input -> STDIN DOT READLINESYNC LPAREN RPAREN','input',5,'p_input','analizador_sintactico.py',141),
  ('elemento -> INT','elemento',1,'p_elemento','analizador_sintactico.py',145),
  ('elemento -> DOUBLE','elemento',1,'p_elemento','analizador_sintactico.py',146),
  ('elemento -> STRING','elemento',1,'p_elemento','analizador_sintactico.py',147),
  ('elemento -> BOOLEAN','elemento',1,'p_elemento','analizador_sintactico.py',148),
  ('elemento -> getVariable','elemento',1,'p_elemento','analizador_sintactico.py',149),
  ('comparables -> operacion','comparables',1,'p_comparables','analizador_sintactico.py',152),
  ('comparables -> STRING','comparables',1,'p_comparables','analizador_sintactico.py',153),
  ('comparables -> BOOLEAN','comparables',1,'p_comparables','analizador_sintactico.py',154),
  ('comparables -> invocar','comparables',1,'p_comparables','analizador_sintactico.py',155),
  ('comparacion -> comparables comparador comparables','comparacion',3,'p_comparacion','analizador_sintactico.py',158),
  ('comparacion -> comparables','comparacion',1,'p_comparacion','analizador_sintactico.py',159),
  ('comparacion_logica -> comparacion','comparacion_logica',1,'p_comparacion_logica','analizador_sintactico.py',162),
  ('comparacion_logica -> comparacion operador_logico comparacion_logica','comparacion_logica',3,'p_comparacion_logica','analizador_sintactico.py',163),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','analizador_sintactico.py',166),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','analizador_sintactico.py',167),
  ('operador_logico -> NOT','operador_logico',1,'p_operador_logico','analizador_sintactico.py',168),
  ('comparador -> EQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',171),
  ('comparador -> INEQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',172),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','analizador_sintactico.py',173),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','analizador_sintactico.py',174),
  ('comparador -> GREATER_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',175),
  ('comparador -> LESS_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',176),
  ('operables -> INT','operables',1,'p_operables','analizador_sintactico.py',179),
  ('operables -> DOUBLE','operables',1,'p_operables','analizador_sintactico.py',180),
  ('operables -> getVariable','operables',1,'p_operables','analizador_sintactico.py',181),
  ('operacion -> operables','operacion',1,'p_operacion','analizador_sintactico.py',184),
  ('operacion -> operables operador operables','operacion',3,'p_operacion','analizador_sintactico.py',185),
  ('operador -> PLUS','operador',1,'p_operador','analizador_sintactico.py',188),
  ('operador -> MINUS','operador',1,'p_operador','analizador_sintactico.py',189),
  ('operador -> TIMES','operador',1,'p_operador','analizador_sintactico.py',190),
  ('operador -> DIVIDE','operador',1,'p_operador','analizador_sintactico.py',191),
  ('operador -> MODULO','operador',1,'p_operador','analizador_sintactico.py',192),
  ('list -> LBRACKETS element_list RBRACKETS','list',3,'p_list','analizador_sintactico.py',195),
  ('list -> LBRACKETS RBRACKETS','list',2,'p_list','analizador_sintactico.py',196),
  ('element_list -> elemento','element_list',1,'p_element_list','analizador_sintactico.py',200),
  ('element_list -> elemento COMA element_list','element_list',3,'p_element_list','analizador_sintactico.py',201),
  ('prefijo -> FINAL_TYPE','prefijo',1,'p_prefijo','analizador_sintactico.py',204),
  ('prefijo -> CONST_TYPE','prefijo',1,'p_prefijo','analizador_sintactico.py',205),
  ('tipo_dato -> VOID','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',208),
  ('tipo_dato -> VARIABLE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',209),
  ('tipo_dato -> prefijo','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',210),
  ('tipo_dato -> VAR_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',211),
  ('tipo_dato -> INT_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',212),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',213),
  ('tipo_dato -> DOUBLE_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',214),
  ('tipo_dato -> BOOL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',215),
  ('tipo_dato -> colecciones','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',216),
  ('colecciones -> LIST LESS_THAN tipo_coleccion GREATER_THAN','colecciones',4,'p_colecciones','analizador_sintactico.py',219),
  ('colecciones -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN','colecciones',6,'p_colecciones','analizador_sintactico.py',220),
  ('colecciones -> SET LESS_THAN tipo_coleccion GREATER_THAN','colecciones',4,'p_colecciones','analizador_sintactico.py',221),
  ('tipo_coleccion -> INT_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',224),
  ('tipo_coleccion -> STRING_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',225),
  ('tipo_coleccion -> DOUBLE_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',226),
  ('tipo_coleccion -> FINAL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',227),
  ('tipo_coleccion -> CONST_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',228),
  ('tipo_coleccion -> VAR_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',229),
  ('tipo_coleccion -> BOOL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',230),
  ('tipo_coleccion -> VARIABLE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',231),
  ('tipo_variable -> VOID','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',234),
  ('tipo_variable -> VARIABLE','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',235),
  ('tipo_variable -> VAR_TYPE','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',236),
  ('tipo_variable -> INT_TYPE','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',237),
  ('tipo_variable -> STRING_TYPE','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',238),
  ('tipo_variable -> DOUBLE_TYPE','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',239),
  ('tipo_variable -> BOOL_TYPE','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',240),
  ('tipo_variable -> colecciones','tipo_variable',1,'p_tipo_variable','analizador_sintactico.py',241),
  ('for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',11,'p_for','analizador_sintactico.py',244),
  ('for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',11,'p_for','analizador_sintactico.py',245),
  ('for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',10,'p_for','analizador_sintactico.py',246),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY','for_each',10,'p_for_each','analizador_sintactico.py',250),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY','for_each',13,'p_for_each','analizador_sintactico.py',251),
  ('specific_instance -> DOS_PUNTOS VARIABLE','specific_instance',2,'p_specific_instance','analizador_sintactico.py',255),
  ('specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance','specific_instance',4,'p_specific_instance','analizador_sintactico.py',256),
  ('while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY','while',7,'p_while','analizador_sintactico.py',259),
  ('while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY','while',6,'p_while','analizador_sintactico.py',260),
  ('do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON','do_while',9,'p_do_while','analizador_sintactico.py',264),
  ('inmutables -> STRING','inmutables',1,'p_inmutables','analizador_sintactico.py',268),
  ('inmutables -> INT','inmutables',1,'p_inmutables','analizador_sintactico.py',269),
  ('inmutables -> DOUBLE','inmutables',1,'p_inmutables','analizador_sintactico.py',270),
  ('key_element -> inmutables DOS_PUNTOS elemento','key_element',3,'p_key_element','analizador_sintactico.py',273),
  ('key_element_list -> key_element','key_element_list',1,'p_key_element_list','analizador_sintactico.py',276),
  ('key_element_list -> key_element COMA key_element_list','key_element_list',3,'p_key_element_list','analizador_sintactico.py',277),
  ('diccionario -> LKEY key_element_list RKEY','diccionario',3,'p_diccionario','analizador_sintactico.py',280),
  ('diccionario -> LKEY RKEY','diccionario',2,'p_diccionario','analizador_sintactico.py',281),
  ('diccionario -> DICT LPAREN RPAREN','diccionario',3,'p_diccionario','analizador_sintactico.py',282),
  ('set -> LKEY element_list RKEY','set',3,'p_set','analizador_sintactico.py',286),
  ('set -> CONJUNTO LPAREN RPAREN','set',3,'p_set','analizador_sintactico.py',287),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else','condicional',8,'p_condicional','analizador_sintactico.py',291),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY','condicional',7,'p_condicional','analizador_sintactico.py',292),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY','condicional',6,'p_condicional','analizador_sintactico.py',293),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else','condicional',7,'p_condicional','analizador_sintactico.py',294),
  ('bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else','bloques_else',9,'p_bloques_else','analizador_sintactico.py',298),
  ('bloques_else -> ELSE LKEY cuerpo_funcion RKEY','bloques_else',4,'p_bloques_else','analizador_sintactico.py',299),
]
