Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    DOC_COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> importaciones instrucciones
Rule 2     programa -> instrucciones
Rule 3     instrucciones -> sentencias
Rule 4     instrucciones -> sentencias instrucciones
Rule 5     importaciones -> import
Rule 6     importaciones -> import importaciones
Rule 7     import -> IMPORT STRING SEMICOLON
Rule 8     sentencias -> asignar_variable
Rule 9     sentencias -> funcion
Rule 10    sentencias -> class
Rule 11    sentencias_funcion -> asignar_variable
Rule 12    sentencias_funcion -> cambiar_variable
Rule 13    sentencias_funcion -> impresion
Rule 14    sentencias_funcion -> condicional
Rule 15    sentencias_funcion -> retorno
Rule 16    sentencias_funcion -> while
Rule 17    sentencias_funcion -> do_while
Rule 18    sentencias_funcion -> for
Rule 19    sentencias_funcion -> for_each
Rule 20    sentencias_funcion -> invocacion
Rule 21    cuerpo_funcion -> sentencias_funcion
Rule 22    cuerpo_funcion -> sentencias_funcion cuerpo_funcion
Rule 23    sentencias_clase -> asignar_variable
Rule 24    sentencias_clase -> cambiar_variable
Rule 25    sentencias_clase -> funcion
Rule 26    sentencias_clase -> constructor
Rule 27    sentencias_clase -> funcion_static
Rule 28    cuerpo_clase -> sentencias_clase
Rule 29    cuerpo_clase -> sentencias_clase cuerpo_clase
Rule 30    class -> CLASS VARIABLE LKEY cuerpo_clase RKEY
Rule 31    invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON
Rule 32    invocacion -> getVariable LPAREN RPAREN SEMICOLON
Rule 33    invocar -> getVariable LPAREN element_list RPAREN
Rule 34    invocar -> getVariable LPAREN RPAREN
Rule 35    constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON
Rule 36    atributo_list -> THIS DOT VARIABLE
Rule 37    atributo_list -> THIS DOT VARIABLE COMA atributo_list
Rule 38    funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
Rule 39    funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
Rule 40    funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
Rule 41    funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
Rule 42    variables -> VARIABLE
Rule 43    variables -> variable_indexada
Rule 44    getVariable -> variables
Rule 45    getVariable -> variables DOT getVariable
Rule 46    asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON
Rule 47    asignar_variable -> tipo_dato VARIABLE SEMICOLON
Rule 48    asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
Rule 49    asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON
Rule 50    cambiar_variable -> getVariable modificador SEMICOLON
Rule 51    cambiar_variable -> getVariable asignador expresion SEMICOLON
Rule 52    modificador -> INCREMENT_VAR
Rule 53    modificador -> DECREMENT_VAR
Rule 54    asignador -> ASSIGN
Rule 55    asignador -> PLUS_ASSIGN
Rule 56    asignador -> MINUS_ASSIGN
Rule 57    asignador -> TIMES_ASSIGN
Rule 58    asignador -> DIVIDE_ASSIGN
Rule 59    asignador -> MODULO_ASSIGN
Rule 60    expresion -> comparacion_logica
Rule 61    expresion -> list
Rule 62    expresion -> diccionario
Rule 63    expresion -> set
Rule 64    expresion -> input
Rule 65    retorno -> RETURN SEMICOLON
Rule 66    retorno -> RETURN expresion SEMICOLON
Rule 67    variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS
Rule 68    impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON
Rule 69    impresion -> PRINT LPAREN RPAREN SEMICOLON
Rule 70    parametros -> tipo_dato VARIABLE
Rule 71    parametros -> tipo_dato VARIABLE COMA parametros
Rule 72    input -> STDIN DOT READLINESYNC LPAREN RPAREN
Rule 73    elemento -> INT
Rule 74    elemento -> DOUBLE
Rule 75    elemento -> STRING
Rule 76    elemento -> BOOLEAN
Rule 77    elemento -> getVariable
Rule 78    comparables -> operacion
Rule 79    comparables -> STRING
Rule 80    comparables -> BOOLEAN
Rule 81    comparables -> invocar
Rule 82    comparacion -> comparables comparador comparables
Rule 83    comparacion -> comparables
Rule 84    comparacion_logica -> comparacion
Rule 85    comparacion_logica -> comparacion operador_logico comparacion_logica
Rule 86    operador_logico -> AND
Rule 87    operador_logico -> OR
Rule 88    operador_logico -> NOT
Rule 89    comparador -> EQUALITY
Rule 90    comparador -> INEQUALITY
Rule 91    comparador -> GREATER_THAN
Rule 92    comparador -> LESS_THAN
Rule 93    comparador -> GREATER_EQ_THAN
Rule 94    comparador -> LESS_EQ_THAN
Rule 95    operables -> INT
Rule 96    operables -> DOUBLE
Rule 97    operables -> getVariable
Rule 98    operacion -> operables
Rule 99    operacion -> operables operador operables
Rule 100   operador -> PLUS
Rule 101   operador -> MINUS
Rule 102   operador -> TIMES
Rule 103   operador -> DIVIDE
Rule 104   operador -> MODULO
Rule 105   list -> LBRACKETS element_list RBRACKETS
Rule 106   list -> LBRACKETS RBRACKETS
Rule 107   element_list -> elemento
Rule 108   element_list -> elemento COMA element_list
Rule 109   prefijo -> FINAL_TYPE
Rule 110   prefijo -> CONST_TYPE
Rule 111   tipo_dato -> VOID
Rule 112   tipo_dato -> VARIABLE
Rule 113   tipo_dato -> prefijo
Rule 114   tipo_dato -> VAR_TYPE
Rule 115   tipo_dato -> INT_TYPE
Rule 116   tipo_dato -> STRING_TYPE
Rule 117   tipo_dato -> DOUBLE_TYPE
Rule 118   tipo_dato -> BOOL_TYPE
Rule 119   tipo_dato -> colecciones
Rule 120   colecciones -> LIST LESS_THAN tipo_coleccion GREATER_THAN
Rule 121   colecciones -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
Rule 122   colecciones -> SET LESS_THAN tipo_coleccion GREATER_THAN
Rule 123   tipo_coleccion -> INT_TYPE
Rule 124   tipo_coleccion -> STRING_TYPE
Rule 125   tipo_coleccion -> DOUBLE_TYPE
Rule 126   tipo_coleccion -> FINAL_TYPE
Rule 127   tipo_coleccion -> CONST_TYPE
Rule 128   tipo_coleccion -> VAR_TYPE
Rule 129   tipo_coleccion -> BOOL_TYPE
Rule 130   tipo_coleccion -> VARIABLE
Rule 131   tipo_variable -> VOID
Rule 132   tipo_variable -> VARIABLE
Rule 133   tipo_variable -> VAR_TYPE
Rule 134   tipo_variable -> INT_TYPE
Rule 135   tipo_variable -> STRING_TYPE
Rule 136   tipo_variable -> DOUBLE_TYPE
Rule 137   tipo_variable -> BOOL_TYPE
Rule 138   tipo_variable -> colecciones
Rule 139   for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
Rule 140   for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
Rule 141   for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
Rule 142   for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
Rule 143   for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
Rule 144   specific_instance -> DOS_PUNTOS VARIABLE
Rule 145   specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance
Rule 146   while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
Rule 147   while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
Rule 148   do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
Rule 149   inmutables -> STRING
Rule 150   inmutables -> INT
Rule 151   inmutables -> DOUBLE
Rule 152   key_element -> inmutables DOS_PUNTOS elemento
Rule 153   key_element_list -> key_element
Rule 154   key_element_list -> key_element COMA key_element_list
Rule 155   diccionario -> LKEY key_element_list RKEY
Rule 156   diccionario -> LKEY RKEY
Rule 157   diccionario -> DICT LPAREN RPAREN
Rule 158   set -> LKEY element_list RKEY
Rule 159   set -> CONJUNTO LPAREN RPAREN
Rule 160   condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
Rule 161   condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
Rule 162   condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY
Rule 163   condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
Rule 164   bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
Rule 165   bloques_else -> ELSE LKEY cuerpo_funcion RKEY

Terminals, with rules where they appear

AND                  : 86
ASSIGN               : 54
BOOLEAN              : 76 80
BOOL_TYPE            : 118 129 137
CLASS                : 30
COMA                 : 37 71 108 121 145 154
COMMENT              : 
CONJUNTO             : 159
CONST_TYPE           : 110 127
DECREMENT_VAR        : 53
DICT                 : 157
DIVIDE               : 103
DIVIDE_ASSIGN        : 58
DO                   : 148
DOC_COMMENT          : 
DOS_PUNTOS           : 144 145 152
DOT                  : 36 37 45 72
DOUBLE               : 74 96 151
DOUBLE_TYPE          : 117 125 136
ELSE                 : 164 165
EQUALITY             : 89
FINAL_TYPE           : 109 126
FOR                  : 139 140 141 142 143
GREATER_EQ_THAN      : 93
GREATER_THAN         : 91 120 121 122
IF                   : 160 161 162 163 164
IMPORT               : 7
IN                   : 142 143
INCREMENT_VAR        : 52
INEQUALITY           : 90
INT                  : 73 95 150
INT_TYPE             : 115 123 134
LBRACKETS            : 67 105 106
LESS_EQ_THAN         : 94
LESS_THAN            : 92 120 121 122
LIST                 : 120
LKEY                 : 30 38 39 40 41 139 140 141 142 143 146 147 148 155 156 158 160 161 162 163 164 165
LPAREN               : 31 32 33 34 35 38 39 40 41 68 69 72 139 140 141 142 143 143 146 147 148 157 159 160 161 162 163 164
MAP                  : 121
MINUS                : 101
MINUS_ASSIGN         : 56
MODULO               : 104
MODULO_ASSIGN        : 59
NOT                  : 88
OR                   : 87
PLUS                 : 100
PLUS_ASSIGN          : 55
PRINT                : 68 69
RBRACKETS            : 67 105 106
READLINESYNC         : 72
RETURN               : 65 66
RKEY                 : 30 38 39 40 41 139 140 141 142 143 146 147 148 155 156 158 160 161 162 163 164 165
RPAREN               : 31 32 33 34 35 38 39 40 41 68 69 72 139 140 141 142 143 143 146 147 148 157 159 160 161 162 163 164
SEMICOLON            : 7 31 32 35 46 47 48 49 50 51 65 66 68 69 139 140 140 141 141 148
SET                  : 122
STATIC               : 40 41
STDIN                : 72
STRING               : 7 75 79 149
STRING_TYPE          : 116 124 135
THIS                 : 36 37
TIMES                : 102
TIMES_ASSIGN         : 57
VARIABLE             : 30 35 36 37 38 39 40 41 42 46 47 48 49 67 70 71 112 130 132 139 140 141 142 143 143 144 145
VAR_TYPE             : 114 128 133
VOID                 : 111 131
WHILE                : 146 147 148
error                : 

Nonterminals, with rules where they appear

asignador            : 46 48 51
asignar_variable     : 8 11 23 139
atributo_list        : 35 37
bloques_else         : 160 163 164
cambiar_variable     : 12 24
class                : 10
colecciones          : 119 138
comparables          : 82 82 83
comparacion          : 84 85
comparacion_logica   : 60 68 85 139 140 146 147 148 160 161 162 163 164
comparador           : 82
condicional          : 14
constructor          : 26
cuerpo_clase         : 29 30
cuerpo_funcion       : 22 38 39 40 41 139 140 141 142 143 146 148 160 161 164 165
diccionario          : 62
do_while             : 17
element_list         : 31 33 105 108 158
elemento             : 107 108 152
expresion            : 46 48 51 66
for                  : 18
for_each             : 19
funcion              : 9 25
funcion_static       : 27
getVariable          : 31 32 33 34 45 50 51 77 97 142
import               : 5 6
importaciones        : 1 6
impresion            : 13
inmutables           : 67 152
input                : 64
instrucciones        : 1 2 4
invocacion           : 20
invocar              : 81
key_element          : 153 154
key_element_list     : 154 155
list                 : 61
modificador          : 50 139 140 141
operables            : 98 99 99
operacion            : 78
operador             : 99
operador_logico      : 85
parametros           : 38 40 71
prefijo              : 48 49 113
programa             : 0
retorno              : 15
sentencias           : 3 4
sentencias_clase     : 28 29
sentencias_funcion   : 21 22
set                  : 63
specific_instance    : 143 145
tipo_coleccion       : 120 121 121 122
tipo_dato            : 38 39 40 41 46 47 70 71 142 143
tipo_variable        : 48 49
variable_indexada    : 43
variables            : 44 45
while                : 16

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . importaciones instrucciones
    (2) programa -> . instrucciones
    (5) importaciones -> . import
    (6) importaciones -> . import importaciones
    (3) instrucciones -> . sentencias
    (4) instrucciones -> . sentencias instrucciones
    (7) import -> . IMPORT STRING SEMICOLON
    (8) sentencias -> . asignar_variable
    (9) sentencias -> . funcion
    (10) sentencias -> . class
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (30) class -> . CLASS VARIABLE LKEY cuerpo_clase RKEY
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    IMPORT          shift and go to state 6
    CLASS           shift and go to state 13
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    programa                       shift and go to state 1
    importaciones                  shift and go to state 2
    instrucciones                  shift and go to state 3
    import                         shift and go to state 4
    sentencias                     shift and go to state 5
    asignar_variable               shift and go to state 7
    funcion                        shift and go to state 8
    class                          shift and go to state 9
    tipo_dato                      shift and go to state 10
    prefijo                        shift and go to state 12
    colecciones                    shift and go to state 20

state 1

    (0) S' -> programa .



state 2

    (1) programa -> importaciones . instrucciones
    (3) instrucciones -> . sentencias
    (4) instrucciones -> . sentencias instrucciones
    (8) sentencias -> . asignar_variable
    (9) sentencias -> . funcion
    (10) sentencias -> . class
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (30) class -> . CLASS VARIABLE LKEY cuerpo_clase RKEY
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    CLASS           shift and go to state 13
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    instrucciones                  shift and go to state 26
    sentencias                     shift and go to state 5
    asignar_variable               shift and go to state 7
    funcion                        shift and go to state 8
    class                          shift and go to state 9
    tipo_dato                      shift and go to state 10
    prefijo                        shift and go to state 12
    colecciones                    shift and go to state 20

state 3

    (2) programa -> instrucciones .

    $end            reduce using rule 2 (programa -> instrucciones .)


state 4

    (5) importaciones -> import .
    (6) importaciones -> import . importaciones
    (5) importaciones -> . import
    (6) importaciones -> . import importaciones
    (7) import -> . IMPORT STRING SEMICOLON

    CLASS           reduce using rule 5 (importaciones -> import .)
    VOID            reduce using rule 5 (importaciones -> import .)
    VARIABLE        reduce using rule 5 (importaciones -> import .)
    VAR_TYPE        reduce using rule 5 (importaciones -> import .)
    INT_TYPE        reduce using rule 5 (importaciones -> import .)
    STRING_TYPE     reduce using rule 5 (importaciones -> import .)
    DOUBLE_TYPE     reduce using rule 5 (importaciones -> import .)
    BOOL_TYPE       reduce using rule 5 (importaciones -> import .)
    FINAL_TYPE      reduce using rule 5 (importaciones -> import .)
    CONST_TYPE      reduce using rule 5 (importaciones -> import .)
    LIST            reduce using rule 5 (importaciones -> import .)
    MAP             reduce using rule 5 (importaciones -> import .)
    SET             reduce using rule 5 (importaciones -> import .)
    IMPORT          shift and go to state 6

    import                         shift and go to state 4
    importaciones                  shift and go to state 27

state 5

    (3) instrucciones -> sentencias .
    (4) instrucciones -> sentencias . instrucciones
    (3) instrucciones -> . sentencias
    (4) instrucciones -> . sentencias instrucciones
    (8) sentencias -> . asignar_variable
    (9) sentencias -> . funcion
    (10) sentencias -> . class
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (30) class -> . CLASS VARIABLE LKEY cuerpo_clase RKEY
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    $end            reduce using rule 3 (instrucciones -> sentencias .)
    CLASS           shift and go to state 13
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    sentencias                     shift and go to state 5
    instrucciones                  shift and go to state 28
    asignar_variable               shift and go to state 7
    funcion                        shift and go to state 8
    class                          shift and go to state 9
    tipo_dato                      shift and go to state 10
    prefijo                        shift and go to state 12
    colecciones                    shift and go to state 20

state 6

    (7) import -> IMPORT . STRING SEMICOLON

    STRING          shift and go to state 29


state 7

    (8) sentencias -> asignar_variable .

    CLASS           reduce using rule 8 (sentencias -> asignar_variable .)
    VOID            reduce using rule 8 (sentencias -> asignar_variable .)
    VARIABLE        reduce using rule 8 (sentencias -> asignar_variable .)
    VAR_TYPE        reduce using rule 8 (sentencias -> asignar_variable .)
    INT_TYPE        reduce using rule 8 (sentencias -> asignar_variable .)
    STRING_TYPE     reduce using rule 8 (sentencias -> asignar_variable .)
    DOUBLE_TYPE     reduce using rule 8 (sentencias -> asignar_variable .)
    BOOL_TYPE       reduce using rule 8 (sentencias -> asignar_variable .)
    FINAL_TYPE      reduce using rule 8 (sentencias -> asignar_variable .)
    CONST_TYPE      reduce using rule 8 (sentencias -> asignar_variable .)
    LIST            reduce using rule 8 (sentencias -> asignar_variable .)
    MAP             reduce using rule 8 (sentencias -> asignar_variable .)
    SET             reduce using rule 8 (sentencias -> asignar_variable .)
    $end            reduce using rule 8 (sentencias -> asignar_variable .)


state 8

    (9) sentencias -> funcion .

    CLASS           reduce using rule 9 (sentencias -> funcion .)
    VOID            reduce using rule 9 (sentencias -> funcion .)
    VARIABLE        reduce using rule 9 (sentencias -> funcion .)
    VAR_TYPE        reduce using rule 9 (sentencias -> funcion .)
    INT_TYPE        reduce using rule 9 (sentencias -> funcion .)
    STRING_TYPE     reduce using rule 9 (sentencias -> funcion .)
    DOUBLE_TYPE     reduce using rule 9 (sentencias -> funcion .)
    BOOL_TYPE       reduce using rule 9 (sentencias -> funcion .)
    FINAL_TYPE      reduce using rule 9 (sentencias -> funcion .)
    CONST_TYPE      reduce using rule 9 (sentencias -> funcion .)
    LIST            reduce using rule 9 (sentencias -> funcion .)
    MAP             reduce using rule 9 (sentencias -> funcion .)
    SET             reduce using rule 9 (sentencias -> funcion .)
    $end            reduce using rule 9 (sentencias -> funcion .)


state 9

    (10) sentencias -> class .

    CLASS           reduce using rule 10 (sentencias -> class .)
    VOID            reduce using rule 10 (sentencias -> class .)
    VARIABLE        reduce using rule 10 (sentencias -> class .)
    VAR_TYPE        reduce using rule 10 (sentencias -> class .)
    INT_TYPE        reduce using rule 10 (sentencias -> class .)
    STRING_TYPE     reduce using rule 10 (sentencias -> class .)
    DOUBLE_TYPE     reduce using rule 10 (sentencias -> class .)
    BOOL_TYPE       reduce using rule 10 (sentencias -> class .)
    FINAL_TYPE      reduce using rule 10 (sentencias -> class .)
    CONST_TYPE      reduce using rule 10 (sentencias -> class .)
    LIST            reduce using rule 10 (sentencias -> class .)
    MAP             reduce using rule 10 (sentencias -> class .)
    SET             reduce using rule 10 (sentencias -> class .)
    $end            reduce using rule 10 (sentencias -> class .)


state 10

    (46) asignar_variable -> tipo_dato . VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato . VARIABLE SEMICOLON
    (38) funcion -> tipo_dato . VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> tipo_dato . VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 30


state 11

    (112) tipo_dato -> VARIABLE .

    VARIABLE        reduce using rule 112 (tipo_dato -> VARIABLE .)


state 12

    (48) asignar_variable -> prefijo . tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> prefijo . tipo_variable VARIABLE SEMICOLON
    (113) tipo_dato -> prefijo .
    (131) tipo_variable -> . VOID
    (132) tipo_variable -> . VARIABLE
    (133) tipo_variable -> . VAR_TYPE
    (134) tipo_variable -> . INT_TYPE
    (135) tipo_variable -> . STRING_TYPE
    (136) tipo_variable -> . DOUBLE_TYPE
    (137) tipo_variable -> . BOOL_TYPE
    (138) tipo_variable -> . colecciones
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

  ! shift/reduce conflict for VARIABLE resolved as shift
    VOID            shift and go to state 33
    VARIABLE        shift and go to state 32
    VAR_TYPE        shift and go to state 34
    INT_TYPE        shift and go to state 35
    STRING_TYPE     shift and go to state 36
    DOUBLE_TYPE     shift and go to state 37
    BOOL_TYPE       shift and go to state 38
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

  ! VARIABLE        [ reduce using rule 113 (tipo_dato -> prefijo .) ]

    tipo_variable                  shift and go to state 31
    colecciones                    shift and go to state 39

state 13

    (30) class -> CLASS . VARIABLE LKEY cuerpo_clase RKEY

    VARIABLE        shift and go to state 40


state 14

    (111) tipo_dato -> VOID .

    VARIABLE        reduce using rule 111 (tipo_dato -> VOID .)


state 15

    (114) tipo_dato -> VAR_TYPE .

    VARIABLE        reduce using rule 114 (tipo_dato -> VAR_TYPE .)


state 16

    (115) tipo_dato -> INT_TYPE .

    VARIABLE        reduce using rule 115 (tipo_dato -> INT_TYPE .)


state 17

    (116) tipo_dato -> STRING_TYPE .

    VARIABLE        reduce using rule 116 (tipo_dato -> STRING_TYPE .)


state 18

    (117) tipo_dato -> DOUBLE_TYPE .

    VARIABLE        reduce using rule 117 (tipo_dato -> DOUBLE_TYPE .)


state 19

    (118) tipo_dato -> BOOL_TYPE .

    VARIABLE        reduce using rule 118 (tipo_dato -> BOOL_TYPE .)


state 20

    (119) tipo_dato -> colecciones .

    VARIABLE        reduce using rule 119 (tipo_dato -> colecciones .)


state 21

    (109) prefijo -> FINAL_TYPE .

    VOID            reduce using rule 109 (prefijo -> FINAL_TYPE .)
    VARIABLE        reduce using rule 109 (prefijo -> FINAL_TYPE .)
    VAR_TYPE        reduce using rule 109 (prefijo -> FINAL_TYPE .)
    INT_TYPE        reduce using rule 109 (prefijo -> FINAL_TYPE .)
    STRING_TYPE     reduce using rule 109 (prefijo -> FINAL_TYPE .)
    DOUBLE_TYPE     reduce using rule 109 (prefijo -> FINAL_TYPE .)
    BOOL_TYPE       reduce using rule 109 (prefijo -> FINAL_TYPE .)
    LIST            reduce using rule 109 (prefijo -> FINAL_TYPE .)
    MAP             reduce using rule 109 (prefijo -> FINAL_TYPE .)
    SET             reduce using rule 109 (prefijo -> FINAL_TYPE .)


state 22

    (110) prefijo -> CONST_TYPE .

    VOID            reduce using rule 110 (prefijo -> CONST_TYPE .)
    VARIABLE        reduce using rule 110 (prefijo -> CONST_TYPE .)
    VAR_TYPE        reduce using rule 110 (prefijo -> CONST_TYPE .)
    INT_TYPE        reduce using rule 110 (prefijo -> CONST_TYPE .)
    STRING_TYPE     reduce using rule 110 (prefijo -> CONST_TYPE .)
    DOUBLE_TYPE     reduce using rule 110 (prefijo -> CONST_TYPE .)
    BOOL_TYPE       reduce using rule 110 (prefijo -> CONST_TYPE .)
    LIST            reduce using rule 110 (prefijo -> CONST_TYPE .)
    MAP             reduce using rule 110 (prefijo -> CONST_TYPE .)
    SET             reduce using rule 110 (prefijo -> CONST_TYPE .)


state 23

    (120) colecciones -> LIST . LESS_THAN tipo_coleccion GREATER_THAN

    LESS_THAN       shift and go to state 41


state 24

    (121) colecciones -> MAP . LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN

    LESS_THAN       shift and go to state 42


state 25

    (122) colecciones -> SET . LESS_THAN tipo_coleccion GREATER_THAN

    LESS_THAN       shift and go to state 43


state 26

    (1) programa -> importaciones instrucciones .

    $end            reduce using rule 1 (programa -> importaciones instrucciones .)


state 27

    (6) importaciones -> import importaciones .

    CLASS           reduce using rule 6 (importaciones -> import importaciones .)
    VOID            reduce using rule 6 (importaciones -> import importaciones .)
    VARIABLE        reduce using rule 6 (importaciones -> import importaciones .)
    VAR_TYPE        reduce using rule 6 (importaciones -> import importaciones .)
    INT_TYPE        reduce using rule 6 (importaciones -> import importaciones .)
    STRING_TYPE     reduce using rule 6 (importaciones -> import importaciones .)
    DOUBLE_TYPE     reduce using rule 6 (importaciones -> import importaciones .)
    BOOL_TYPE       reduce using rule 6 (importaciones -> import importaciones .)
    FINAL_TYPE      reduce using rule 6 (importaciones -> import importaciones .)
    CONST_TYPE      reduce using rule 6 (importaciones -> import importaciones .)
    LIST            reduce using rule 6 (importaciones -> import importaciones .)
    MAP             reduce using rule 6 (importaciones -> import importaciones .)
    SET             reduce using rule 6 (importaciones -> import importaciones .)


state 28

    (4) instrucciones -> sentencias instrucciones .

    $end            reduce using rule 4 (instrucciones -> sentencias instrucciones .)


state 29

    (7) import -> IMPORT STRING . SEMICOLON

    SEMICOLON       shift and go to state 44


state 30

    (46) asignar_variable -> tipo_dato VARIABLE . asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato VARIABLE . SEMICOLON
    (38) funcion -> tipo_dato VARIABLE . LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> tipo_dato VARIABLE . LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    SEMICOLON       shift and go to state 46
    LPAREN          shift and go to state 47
    ASSIGN          shift and go to state 48
    PLUS_ASSIGN     shift and go to state 49
    MINUS_ASSIGN    shift and go to state 50
    TIMES_ASSIGN    shift and go to state 51
    DIVIDE_ASSIGN   shift and go to state 52
    MODULO_ASSIGN   shift and go to state 53

    asignador                      shift and go to state 45

state 31

    (48) asignar_variable -> prefijo tipo_variable . VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> prefijo tipo_variable . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 54


state 32

    (132) tipo_variable -> VARIABLE .

    VARIABLE        reduce using rule 132 (tipo_variable -> VARIABLE .)


state 33

    (131) tipo_variable -> VOID .

    VARIABLE        reduce using rule 131 (tipo_variable -> VOID .)


state 34

    (133) tipo_variable -> VAR_TYPE .

    VARIABLE        reduce using rule 133 (tipo_variable -> VAR_TYPE .)


state 35

    (134) tipo_variable -> INT_TYPE .

    VARIABLE        reduce using rule 134 (tipo_variable -> INT_TYPE .)


state 36

    (135) tipo_variable -> STRING_TYPE .

    VARIABLE        reduce using rule 135 (tipo_variable -> STRING_TYPE .)


state 37

    (136) tipo_variable -> DOUBLE_TYPE .

    VARIABLE        reduce using rule 136 (tipo_variable -> DOUBLE_TYPE .)


state 38

    (137) tipo_variable -> BOOL_TYPE .

    VARIABLE        reduce using rule 137 (tipo_variable -> BOOL_TYPE .)


state 39

    (138) tipo_variable -> colecciones .

    VARIABLE        reduce using rule 138 (tipo_variable -> colecciones .)


state 40

    (30) class -> CLASS VARIABLE . LKEY cuerpo_clase RKEY

    LKEY            shift and go to state 55


state 41

    (120) colecciones -> LIST LESS_THAN . tipo_coleccion GREATER_THAN
    (123) tipo_coleccion -> . INT_TYPE
    (124) tipo_coleccion -> . STRING_TYPE
    (125) tipo_coleccion -> . DOUBLE_TYPE
    (126) tipo_coleccion -> . FINAL_TYPE
    (127) tipo_coleccion -> . CONST_TYPE
    (128) tipo_coleccion -> . VAR_TYPE
    (129) tipo_coleccion -> . BOOL_TYPE
    (130) tipo_coleccion -> . VARIABLE

    INT_TYPE        shift and go to state 57
    STRING_TYPE     shift and go to state 58
    DOUBLE_TYPE     shift and go to state 59
    FINAL_TYPE      shift and go to state 60
    CONST_TYPE      shift and go to state 61
    VAR_TYPE        shift and go to state 62
    BOOL_TYPE       shift and go to state 63
    VARIABLE        shift and go to state 64

    tipo_coleccion                 shift and go to state 56

state 42

    (121) colecciones -> MAP LESS_THAN . tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (123) tipo_coleccion -> . INT_TYPE
    (124) tipo_coleccion -> . STRING_TYPE
    (125) tipo_coleccion -> . DOUBLE_TYPE
    (126) tipo_coleccion -> . FINAL_TYPE
    (127) tipo_coleccion -> . CONST_TYPE
    (128) tipo_coleccion -> . VAR_TYPE
    (129) tipo_coleccion -> . BOOL_TYPE
    (130) tipo_coleccion -> . VARIABLE

    INT_TYPE        shift and go to state 57
    STRING_TYPE     shift and go to state 58
    DOUBLE_TYPE     shift and go to state 59
    FINAL_TYPE      shift and go to state 60
    CONST_TYPE      shift and go to state 61
    VAR_TYPE        shift and go to state 62
    BOOL_TYPE       shift and go to state 63
    VARIABLE        shift and go to state 64

    tipo_coleccion                 shift and go to state 65

state 43

    (122) colecciones -> SET LESS_THAN . tipo_coleccion GREATER_THAN
    (123) tipo_coleccion -> . INT_TYPE
    (124) tipo_coleccion -> . STRING_TYPE
    (125) tipo_coleccion -> . DOUBLE_TYPE
    (126) tipo_coleccion -> . FINAL_TYPE
    (127) tipo_coleccion -> . CONST_TYPE
    (128) tipo_coleccion -> . VAR_TYPE
    (129) tipo_coleccion -> . BOOL_TYPE
    (130) tipo_coleccion -> . VARIABLE

    INT_TYPE        shift and go to state 57
    STRING_TYPE     shift and go to state 58
    DOUBLE_TYPE     shift and go to state 59
    FINAL_TYPE      shift and go to state 60
    CONST_TYPE      shift and go to state 61
    VAR_TYPE        shift and go to state 62
    BOOL_TYPE       shift and go to state 63
    VARIABLE        shift and go to state 64

    tipo_coleccion                 shift and go to state 66

state 44

    (7) import -> IMPORT STRING SEMICOLON .

    IMPORT          reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    CLASS           reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    VOID            reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    VARIABLE        reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    VAR_TYPE        reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    INT_TYPE        reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    STRING_TYPE     reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    BOOL_TYPE       reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    FINAL_TYPE      reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    CONST_TYPE      reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    LIST            reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    MAP             reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)
    SET             reduce using rule 7 (import -> IMPORT STRING SEMICOLON .)


state 45

    (46) asignar_variable -> tipo_dato VARIABLE asignador . expresion SEMICOLON
    (60) expresion -> . comparacion_logica
    (61) expresion -> . list
    (62) expresion -> . diccionario
    (63) expresion -> . set
    (64) expresion -> . input
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (105) list -> . LBRACKETS element_list RBRACKETS
    (106) list -> . LBRACKETS RBRACKETS
    (155) diccionario -> . LKEY key_element_list RKEY
    (156) diccionario -> . LKEY RKEY
    (157) diccionario -> . DICT LPAREN RPAREN
    (158) set -> . LKEY element_list RKEY
    (159) set -> . CONJUNTO LPAREN RPAREN
    (72) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    LBRACKETS       shift and go to state 75
    LKEY            shift and go to state 76
    DICT            shift and go to state 77
    CONJUNTO        shift and go to state 78
    STDIN           shift and go to state 79
    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    expresion                      shift and go to state 68
    comparacion_logica             shift and go to state 69
    list                           shift and go to state 70
    diccionario                    shift and go to state 71
    set                            shift and go to state 72
    input                          shift and go to state 73
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 46

    (47) asignar_variable -> tipo_dato VARIABLE SEMICOLON .

    CLASS           reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    VOID            reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    VAR_TYPE        reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    INT_TYPE        reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    STRING_TYPE     reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    BOOL_TYPE       reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    FINAL_TYPE      reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    CONST_TYPE      reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    LIST            reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    MAP             reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    SET             reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    $end            reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    STATIC          reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    RKEY            reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    PRINT           reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    IF              reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    RETURN          reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    WHILE           reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    DO              reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    FOR             reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    STRING          reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    BOOLEAN         reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    INT             reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)
    DOUBLE          reduce using rule 47 (asignar_variable -> tipo_dato VARIABLE SEMICOLON .)


state 47

    (38) funcion -> tipo_dato VARIABLE LPAREN . parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> tipo_dato VARIABLE LPAREN . RPAREN LKEY cuerpo_funcion RKEY
    (70) parametros -> . tipo_dato VARIABLE
    (71) parametros -> . tipo_dato VARIABLE COMA parametros
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    RPAREN          shift and go to state 93
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 91
    parametros                     shift and go to state 92
    prefijo                        shift and go to state 94
    colecciones                    shift and go to state 20

state 48

    (54) asignador -> ASSIGN .

    LBRACKETS       reduce using rule 54 (asignador -> ASSIGN .)
    LKEY            reduce using rule 54 (asignador -> ASSIGN .)
    DICT            reduce using rule 54 (asignador -> ASSIGN .)
    CONJUNTO        reduce using rule 54 (asignador -> ASSIGN .)
    STDIN           reduce using rule 54 (asignador -> ASSIGN .)
    STRING          reduce using rule 54 (asignador -> ASSIGN .)
    BOOLEAN         reduce using rule 54 (asignador -> ASSIGN .)
    INT             reduce using rule 54 (asignador -> ASSIGN .)
    DOUBLE          reduce using rule 54 (asignador -> ASSIGN .)
    VARIABLE        reduce using rule 54 (asignador -> ASSIGN .)


state 49

    (55) asignador -> PLUS_ASSIGN .

    LBRACKETS       reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    LKEY            reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    DICT            reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    CONJUNTO        reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    STDIN           reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    STRING          reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    BOOLEAN         reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    INT             reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    DOUBLE          reduce using rule 55 (asignador -> PLUS_ASSIGN .)
    VARIABLE        reduce using rule 55 (asignador -> PLUS_ASSIGN .)


state 50

    (56) asignador -> MINUS_ASSIGN .

    LBRACKETS       reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    LKEY            reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    DICT            reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    CONJUNTO        reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    STDIN           reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    STRING          reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    BOOLEAN         reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    INT             reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    DOUBLE          reduce using rule 56 (asignador -> MINUS_ASSIGN .)
    VARIABLE        reduce using rule 56 (asignador -> MINUS_ASSIGN .)


state 51

    (57) asignador -> TIMES_ASSIGN .

    LBRACKETS       reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    LKEY            reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    DICT            reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    CONJUNTO        reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    STDIN           reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    STRING          reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    BOOLEAN         reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    INT             reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    DOUBLE          reduce using rule 57 (asignador -> TIMES_ASSIGN .)
    VARIABLE        reduce using rule 57 (asignador -> TIMES_ASSIGN .)


state 52

    (58) asignador -> DIVIDE_ASSIGN .

    LBRACKETS       reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    LKEY            reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    DICT            reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    CONJUNTO        reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    STDIN           reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    BOOLEAN         reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    INT             reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    DOUBLE          reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)
    VARIABLE        reduce using rule 58 (asignador -> DIVIDE_ASSIGN .)


state 53

    (59) asignador -> MODULO_ASSIGN .

    LBRACKETS       reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    LKEY            reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    DICT            reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    CONJUNTO        reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    STDIN           reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    STRING          reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    BOOLEAN         reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    INT             reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    DOUBLE          reduce using rule 59 (asignador -> MODULO_ASSIGN .)
    VARIABLE        reduce using rule 59 (asignador -> MODULO_ASSIGN .)


state 54

    (48) asignar_variable -> prefijo tipo_variable VARIABLE . asignador expresion SEMICOLON
    (49) asignar_variable -> prefijo tipo_variable VARIABLE . SEMICOLON
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    SEMICOLON       shift and go to state 96
    ASSIGN          shift and go to state 48
    PLUS_ASSIGN     shift and go to state 49
    MINUS_ASSIGN    shift and go to state 50
    TIMES_ASSIGN    shift and go to state 51
    DIVIDE_ASSIGN   shift and go to state 52
    MODULO_ASSIGN   shift and go to state 53

    asignador                      shift and go to state 95

state 55

    (30) class -> CLASS VARIABLE LKEY . cuerpo_clase RKEY
    (28) cuerpo_clase -> . sentencias_clase
    (29) cuerpo_clase -> . sentencias_clase cuerpo_clase
    (23) sentencias_clase -> . asignar_variable
    (24) sentencias_clase -> . cambiar_variable
    (25) sentencias_clase -> . funcion
    (26) sentencias_clase -> . constructor
    (27) sentencias_clase -> . funcion_static
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (35) constructor -> . VARIABLE LPAREN atributo_list RPAREN SEMICOLON
    (40) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 97
    STATIC          shift and go to state 106
    VOID            shift and go to state 14
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_clase                   shift and go to state 98
    sentencias_clase               shift and go to state 99
    asignar_variable               shift and go to state 100
    cambiar_variable               shift and go to state 101
    funcion                        shift and go to state 102
    constructor                    shift and go to state 103
    funcion_static                 shift and go to state 104
    tipo_dato                      shift and go to state 10
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 105
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 56

    (120) colecciones -> LIST LESS_THAN tipo_coleccion . GREATER_THAN

    GREATER_THAN    shift and go to state 107


state 57

    (123) tipo_coleccion -> INT_TYPE .

    GREATER_THAN    reduce using rule 123 (tipo_coleccion -> INT_TYPE .)
    COMA            reduce using rule 123 (tipo_coleccion -> INT_TYPE .)


state 58

    (124) tipo_coleccion -> STRING_TYPE .

    GREATER_THAN    reduce using rule 124 (tipo_coleccion -> STRING_TYPE .)
    COMA            reduce using rule 124 (tipo_coleccion -> STRING_TYPE .)


state 59

    (125) tipo_coleccion -> DOUBLE_TYPE .

    GREATER_THAN    reduce using rule 125 (tipo_coleccion -> DOUBLE_TYPE .)
    COMA            reduce using rule 125 (tipo_coleccion -> DOUBLE_TYPE .)


state 60

    (126) tipo_coleccion -> FINAL_TYPE .

    GREATER_THAN    reduce using rule 126 (tipo_coleccion -> FINAL_TYPE .)
    COMA            reduce using rule 126 (tipo_coleccion -> FINAL_TYPE .)


state 61

    (127) tipo_coleccion -> CONST_TYPE .

    GREATER_THAN    reduce using rule 127 (tipo_coleccion -> CONST_TYPE .)
    COMA            reduce using rule 127 (tipo_coleccion -> CONST_TYPE .)


state 62

    (128) tipo_coleccion -> VAR_TYPE .

    GREATER_THAN    reduce using rule 128 (tipo_coleccion -> VAR_TYPE .)
    COMA            reduce using rule 128 (tipo_coleccion -> VAR_TYPE .)


state 63

    (129) tipo_coleccion -> BOOL_TYPE .

    GREATER_THAN    reduce using rule 129 (tipo_coleccion -> BOOL_TYPE .)
    COMA            reduce using rule 129 (tipo_coleccion -> BOOL_TYPE .)


state 64

    (130) tipo_coleccion -> VARIABLE .

    GREATER_THAN    reduce using rule 130 (tipo_coleccion -> VARIABLE .)
    COMA            reduce using rule 130 (tipo_coleccion -> VARIABLE .)


state 65

    (121) colecciones -> MAP LESS_THAN tipo_coleccion . COMA tipo_coleccion GREATER_THAN

    COMA            shift and go to state 108


state 66

    (122) colecciones -> SET LESS_THAN tipo_coleccion . GREATER_THAN

    GREATER_THAN    shift and go to state 109


state 67

    (42) variables -> VARIABLE .
    (67) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    DOT             reduce using rule 42 (variables -> VARIABLE .)
    LPAREN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS            reduce using rule 42 (variables -> VARIABLE .)
    MINUS           reduce using rule 42 (variables -> VARIABLE .)
    TIMES           reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE          reduce using rule 42 (variables -> VARIABLE .)
    MODULO          reduce using rule 42 (variables -> VARIABLE .)
    EQUALITY        reduce using rule 42 (variables -> VARIABLE .)
    INEQUALITY      reduce using rule 42 (variables -> VARIABLE .)
    GREATER_THAN    reduce using rule 42 (variables -> VARIABLE .)
    LESS_THAN       reduce using rule 42 (variables -> VARIABLE .)
    GREATER_EQ_THAN reduce using rule 42 (variables -> VARIABLE .)
    LESS_EQ_THAN    reduce using rule 42 (variables -> VARIABLE .)
    AND             reduce using rule 42 (variables -> VARIABLE .)
    OR              reduce using rule 42 (variables -> VARIABLE .)
    NOT             reduce using rule 42 (variables -> VARIABLE .)
    SEMICOLON       reduce using rule 42 (variables -> VARIABLE .)
    COMA            reduce using rule 42 (variables -> VARIABLE .)
    RBRACKETS       reduce using rule 42 (variables -> VARIABLE .)
    RKEY            reduce using rule 42 (variables -> VARIABLE .)
    RPAREN          reduce using rule 42 (variables -> VARIABLE .)
    INCREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    DECREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 110


state 68

    (46) asignar_variable -> tipo_dato VARIABLE asignador expresion . SEMICOLON

    SEMICOLON       shift and go to state 111


state 69

    (60) expresion -> comparacion_logica .

    SEMICOLON       reduce using rule 60 (expresion -> comparacion_logica .)


state 70

    (61) expresion -> list .

    SEMICOLON       reduce using rule 61 (expresion -> list .)


state 71

    (62) expresion -> diccionario .

    SEMICOLON       reduce using rule 62 (expresion -> diccionario .)


state 72

    (63) expresion -> set .

    SEMICOLON       reduce using rule 63 (expresion -> set .)


state 73

    (64) expresion -> input .

    SEMICOLON       reduce using rule 64 (expresion -> input .)


state 74

    (84) comparacion_logica -> comparacion .
    (85) comparacion_logica -> comparacion . operador_logico comparacion_logica
    (86) operador_logico -> . AND
    (87) operador_logico -> . OR
    (88) operador_logico -> . NOT

    SEMICOLON       reduce using rule 84 (comparacion_logica -> comparacion .)
    RPAREN          reduce using rule 84 (comparacion_logica -> comparacion .)
    AND             shift and go to state 113
    OR              shift and go to state 114
    NOT             shift and go to state 115

    operador_logico                shift and go to state 112

state 75

    (105) list -> LBRACKETS . element_list RBRACKETS
    (106) list -> LBRACKETS . RBRACKETS
    (107) element_list -> . elemento
    (108) element_list -> . elemento COMA element_list
    (73) elemento -> . INT
    (74) elemento -> . DOUBLE
    (75) elemento -> . STRING
    (76) elemento -> . BOOLEAN
    (77) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RBRACKETS       shift and go to state 117
    INT             shift and go to state 119
    DOUBLE          shift and go to state 120
    STRING          shift and go to state 121
    BOOLEAN         shift and go to state 122
    VARIABLE        shift and go to state 67

    element_list                   shift and go to state 116
    elemento                       shift and go to state 118
    getVariable                    shift and go to state 123
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 76

    (155) diccionario -> LKEY . key_element_list RKEY
    (156) diccionario -> LKEY . RKEY
    (158) set -> LKEY . element_list RKEY
    (153) key_element_list -> . key_element
    (154) key_element_list -> . key_element COMA key_element_list
    (107) element_list -> . elemento
    (108) element_list -> . elemento COMA element_list
    (152) key_element -> . inmutables DOS_PUNTOS elemento
    (73) elemento -> . INT
    (74) elemento -> . DOUBLE
    (75) elemento -> . STRING
    (76) elemento -> . BOOLEAN
    (77) elemento -> . getVariable
    (149) inmutables -> . STRING
    (150) inmutables -> . INT
    (151) inmutables -> . DOUBLE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            shift and go to state 125
    INT             shift and go to state 129
    DOUBLE          shift and go to state 130
    STRING          shift and go to state 131
    BOOLEAN         shift and go to state 122
    VARIABLE        shift and go to state 67

    key_element_list               shift and go to state 124
    element_list                   shift and go to state 126
    key_element                    shift and go to state 127
    elemento                       shift and go to state 118
    inmutables                     shift and go to state 128
    getVariable                    shift and go to state 123
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 77

    (157) diccionario -> DICT . LPAREN RPAREN

    LPAREN          shift and go to state 132


state 78

    (159) set -> CONJUNTO . LPAREN RPAREN

    LPAREN          shift and go to state 133


state 79

    (72) input -> STDIN . DOT READLINESYNC LPAREN RPAREN

    DOT             shift and go to state 134


state 80

    (82) comparacion -> comparables . comparador comparables
    (83) comparacion -> comparables .
    (89) comparador -> . EQUALITY
    (90) comparador -> . INEQUALITY
    (91) comparador -> . GREATER_THAN
    (92) comparador -> . LESS_THAN
    (93) comparador -> . GREATER_EQ_THAN
    (94) comparador -> . LESS_EQ_THAN

    AND             reduce using rule 83 (comparacion -> comparables .)
    OR              reduce using rule 83 (comparacion -> comparables .)
    NOT             reduce using rule 83 (comparacion -> comparables .)
    SEMICOLON       reduce using rule 83 (comparacion -> comparables .)
    RPAREN          reduce using rule 83 (comparacion -> comparables .)
    EQUALITY        shift and go to state 136
    INEQUALITY      shift and go to state 137
    GREATER_THAN    shift and go to state 138
    LESS_THAN       shift and go to state 139
    GREATER_EQ_THAN shift and go to state 140
    LESS_EQ_THAN    shift and go to state 141

    comparador                     shift and go to state 135

state 81

    (78) comparables -> operacion .

    EQUALITY        reduce using rule 78 (comparables -> operacion .)
    INEQUALITY      reduce using rule 78 (comparables -> operacion .)
    GREATER_THAN    reduce using rule 78 (comparables -> operacion .)
    LESS_THAN       reduce using rule 78 (comparables -> operacion .)
    GREATER_EQ_THAN reduce using rule 78 (comparables -> operacion .)
    LESS_EQ_THAN    reduce using rule 78 (comparables -> operacion .)
    AND             reduce using rule 78 (comparables -> operacion .)
    OR              reduce using rule 78 (comparables -> operacion .)
    NOT             reduce using rule 78 (comparables -> operacion .)
    SEMICOLON       reduce using rule 78 (comparables -> operacion .)
    RPAREN          reduce using rule 78 (comparables -> operacion .)


state 82

    (79) comparables -> STRING .

    EQUALITY        reduce using rule 79 (comparables -> STRING .)
    INEQUALITY      reduce using rule 79 (comparables -> STRING .)
    GREATER_THAN    reduce using rule 79 (comparables -> STRING .)
    LESS_THAN       reduce using rule 79 (comparables -> STRING .)
    GREATER_EQ_THAN reduce using rule 79 (comparables -> STRING .)
    LESS_EQ_THAN    reduce using rule 79 (comparables -> STRING .)
    AND             reduce using rule 79 (comparables -> STRING .)
    OR              reduce using rule 79 (comparables -> STRING .)
    NOT             reduce using rule 79 (comparables -> STRING .)
    SEMICOLON       reduce using rule 79 (comparables -> STRING .)
    RPAREN          reduce using rule 79 (comparables -> STRING .)


state 83

    (80) comparables -> BOOLEAN .

    EQUALITY        reduce using rule 80 (comparables -> BOOLEAN .)
    INEQUALITY      reduce using rule 80 (comparables -> BOOLEAN .)
    GREATER_THAN    reduce using rule 80 (comparables -> BOOLEAN .)
    LESS_THAN       reduce using rule 80 (comparables -> BOOLEAN .)
    GREATER_EQ_THAN reduce using rule 80 (comparables -> BOOLEAN .)
    LESS_EQ_THAN    reduce using rule 80 (comparables -> BOOLEAN .)
    AND             reduce using rule 80 (comparables -> BOOLEAN .)
    OR              reduce using rule 80 (comparables -> BOOLEAN .)
    NOT             reduce using rule 80 (comparables -> BOOLEAN .)
    SEMICOLON       reduce using rule 80 (comparables -> BOOLEAN .)
    RPAREN          reduce using rule 80 (comparables -> BOOLEAN .)


state 84

    (81) comparables -> invocar .

    EQUALITY        reduce using rule 81 (comparables -> invocar .)
    INEQUALITY      reduce using rule 81 (comparables -> invocar .)
    GREATER_THAN    reduce using rule 81 (comparables -> invocar .)
    LESS_THAN       reduce using rule 81 (comparables -> invocar .)
    GREATER_EQ_THAN reduce using rule 81 (comparables -> invocar .)
    LESS_EQ_THAN    reduce using rule 81 (comparables -> invocar .)
    AND             reduce using rule 81 (comparables -> invocar .)
    OR              reduce using rule 81 (comparables -> invocar .)
    NOT             reduce using rule 81 (comparables -> invocar .)
    SEMICOLON       reduce using rule 81 (comparables -> invocar .)
    RPAREN          reduce using rule 81 (comparables -> invocar .)


state 85

    (98) operacion -> operables .
    (99) operacion -> operables . operador operables
    (100) operador -> . PLUS
    (101) operador -> . MINUS
    (102) operador -> . TIMES
    (103) operador -> . DIVIDE
    (104) operador -> . MODULO

    EQUALITY        reduce using rule 98 (operacion -> operables .)
    INEQUALITY      reduce using rule 98 (operacion -> operables .)
    GREATER_THAN    reduce using rule 98 (operacion -> operables .)
    LESS_THAN       reduce using rule 98 (operacion -> operables .)
    GREATER_EQ_THAN reduce using rule 98 (operacion -> operables .)
    LESS_EQ_THAN    reduce using rule 98 (operacion -> operables .)
    AND             reduce using rule 98 (operacion -> operables .)
    OR              reduce using rule 98 (operacion -> operables .)
    NOT             reduce using rule 98 (operacion -> operables .)
    SEMICOLON       reduce using rule 98 (operacion -> operables .)
    RPAREN          reduce using rule 98 (operacion -> operables .)
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144
    TIMES           shift and go to state 145
    DIVIDE          shift and go to state 146
    MODULO          shift and go to state 147

    operador                       shift and go to state 142

state 86

    (33) invocar -> getVariable . LPAREN element_list RPAREN
    (34) invocar -> getVariable . LPAREN RPAREN
    (97) operables -> getVariable .

    LPAREN          shift and go to state 148
    PLUS            reduce using rule 97 (operables -> getVariable .)
    MINUS           reduce using rule 97 (operables -> getVariable .)
    TIMES           reduce using rule 97 (operables -> getVariable .)
    DIVIDE          reduce using rule 97 (operables -> getVariable .)
    MODULO          reduce using rule 97 (operables -> getVariable .)
    EQUALITY        reduce using rule 97 (operables -> getVariable .)
    INEQUALITY      reduce using rule 97 (operables -> getVariable .)
    GREATER_THAN    reduce using rule 97 (operables -> getVariable .)
    LESS_THAN       reduce using rule 97 (operables -> getVariable .)
    GREATER_EQ_THAN reduce using rule 97 (operables -> getVariable .)
    LESS_EQ_THAN    reduce using rule 97 (operables -> getVariable .)
    AND             reduce using rule 97 (operables -> getVariable .)
    OR              reduce using rule 97 (operables -> getVariable .)
    NOT             reduce using rule 97 (operables -> getVariable .)
    SEMICOLON       reduce using rule 97 (operables -> getVariable .)
    RPAREN          reduce using rule 97 (operables -> getVariable .)


state 87

    (95) operables -> INT .

    PLUS            reduce using rule 95 (operables -> INT .)
    MINUS           reduce using rule 95 (operables -> INT .)
    TIMES           reduce using rule 95 (operables -> INT .)
    DIVIDE          reduce using rule 95 (operables -> INT .)
    MODULO          reduce using rule 95 (operables -> INT .)
    EQUALITY        reduce using rule 95 (operables -> INT .)
    INEQUALITY      reduce using rule 95 (operables -> INT .)
    GREATER_THAN    reduce using rule 95 (operables -> INT .)
    LESS_THAN       reduce using rule 95 (operables -> INT .)
    GREATER_EQ_THAN reduce using rule 95 (operables -> INT .)
    LESS_EQ_THAN    reduce using rule 95 (operables -> INT .)
    AND             reduce using rule 95 (operables -> INT .)
    OR              reduce using rule 95 (operables -> INT .)
    NOT             reduce using rule 95 (operables -> INT .)
    SEMICOLON       reduce using rule 95 (operables -> INT .)
    RPAREN          reduce using rule 95 (operables -> INT .)


state 88

    (96) operables -> DOUBLE .

    PLUS            reduce using rule 96 (operables -> DOUBLE .)
    MINUS           reduce using rule 96 (operables -> DOUBLE .)
    TIMES           reduce using rule 96 (operables -> DOUBLE .)
    DIVIDE          reduce using rule 96 (operables -> DOUBLE .)
    MODULO          reduce using rule 96 (operables -> DOUBLE .)
    EQUALITY        reduce using rule 96 (operables -> DOUBLE .)
    INEQUALITY      reduce using rule 96 (operables -> DOUBLE .)
    GREATER_THAN    reduce using rule 96 (operables -> DOUBLE .)
    LESS_THAN       reduce using rule 96 (operables -> DOUBLE .)
    GREATER_EQ_THAN reduce using rule 96 (operables -> DOUBLE .)
    LESS_EQ_THAN    reduce using rule 96 (operables -> DOUBLE .)
    AND             reduce using rule 96 (operables -> DOUBLE .)
    OR              reduce using rule 96 (operables -> DOUBLE .)
    NOT             reduce using rule 96 (operables -> DOUBLE .)
    SEMICOLON       reduce using rule 96 (operables -> DOUBLE .)
    RPAREN          reduce using rule 96 (operables -> DOUBLE .)


state 89

    (44) getVariable -> variables .
    (45) getVariable -> variables . DOT getVariable

    LPAREN          reduce using rule 44 (getVariable -> variables .)
    PLUS            reduce using rule 44 (getVariable -> variables .)
    MINUS           reduce using rule 44 (getVariable -> variables .)
    TIMES           reduce using rule 44 (getVariable -> variables .)
    DIVIDE          reduce using rule 44 (getVariable -> variables .)
    MODULO          reduce using rule 44 (getVariable -> variables .)
    EQUALITY        reduce using rule 44 (getVariable -> variables .)
    INEQUALITY      reduce using rule 44 (getVariable -> variables .)
    GREATER_THAN    reduce using rule 44 (getVariable -> variables .)
    LESS_THAN       reduce using rule 44 (getVariable -> variables .)
    GREATER_EQ_THAN reduce using rule 44 (getVariable -> variables .)
    LESS_EQ_THAN    reduce using rule 44 (getVariable -> variables .)
    AND             reduce using rule 44 (getVariable -> variables .)
    OR              reduce using rule 44 (getVariable -> variables .)
    NOT             reduce using rule 44 (getVariable -> variables .)
    SEMICOLON       reduce using rule 44 (getVariable -> variables .)
    INCREMENT_VAR   reduce using rule 44 (getVariable -> variables .)
    DECREMENT_VAR   reduce using rule 44 (getVariable -> variables .)
    ASSIGN          reduce using rule 44 (getVariable -> variables .)
    PLUS_ASSIGN     reduce using rule 44 (getVariable -> variables .)
    MINUS_ASSIGN    reduce using rule 44 (getVariable -> variables .)
    TIMES_ASSIGN    reduce using rule 44 (getVariable -> variables .)
    DIVIDE_ASSIGN   reduce using rule 44 (getVariable -> variables .)
    MODULO_ASSIGN   reduce using rule 44 (getVariable -> variables .)
    COMA            reduce using rule 44 (getVariable -> variables .)
    RBRACKETS       reduce using rule 44 (getVariable -> variables .)
    RKEY            reduce using rule 44 (getVariable -> variables .)
    RPAREN          reduce using rule 44 (getVariable -> variables .)
    DOT             shift and go to state 149


state 90

    (43) variables -> variable_indexada .

    DOT             reduce using rule 43 (variables -> variable_indexada .)
    LPAREN          reduce using rule 43 (variables -> variable_indexada .)
    PLUS            reduce using rule 43 (variables -> variable_indexada .)
    MINUS           reduce using rule 43 (variables -> variable_indexada .)
    TIMES           reduce using rule 43 (variables -> variable_indexada .)
    DIVIDE          reduce using rule 43 (variables -> variable_indexada .)
    MODULO          reduce using rule 43 (variables -> variable_indexada .)
    EQUALITY        reduce using rule 43 (variables -> variable_indexada .)
    INEQUALITY      reduce using rule 43 (variables -> variable_indexada .)
    GREATER_THAN    reduce using rule 43 (variables -> variable_indexada .)
    LESS_THAN       reduce using rule 43 (variables -> variable_indexada .)
    GREATER_EQ_THAN reduce using rule 43 (variables -> variable_indexada .)
    LESS_EQ_THAN    reduce using rule 43 (variables -> variable_indexada .)
    AND             reduce using rule 43 (variables -> variable_indexada .)
    OR              reduce using rule 43 (variables -> variable_indexada .)
    NOT             reduce using rule 43 (variables -> variable_indexada .)
    SEMICOLON       reduce using rule 43 (variables -> variable_indexada .)
    INCREMENT_VAR   reduce using rule 43 (variables -> variable_indexada .)
    DECREMENT_VAR   reduce using rule 43 (variables -> variable_indexada .)
    ASSIGN          reduce using rule 43 (variables -> variable_indexada .)
    PLUS_ASSIGN     reduce using rule 43 (variables -> variable_indexada .)
    MINUS_ASSIGN    reduce using rule 43 (variables -> variable_indexada .)
    TIMES_ASSIGN    reduce using rule 43 (variables -> variable_indexada .)
    DIVIDE_ASSIGN   reduce using rule 43 (variables -> variable_indexada .)
    MODULO_ASSIGN   reduce using rule 43 (variables -> variable_indexada .)
    COMA            reduce using rule 43 (variables -> variable_indexada .)
    RBRACKETS       reduce using rule 43 (variables -> variable_indexada .)
    RKEY            reduce using rule 43 (variables -> variable_indexada .)
    RPAREN          reduce using rule 43 (variables -> variable_indexada .)


state 91

    (70) parametros -> tipo_dato . VARIABLE
    (71) parametros -> tipo_dato . VARIABLE COMA parametros

    VARIABLE        shift and go to state 150


state 92

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 151


state 93

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 152


state 94

    (113) tipo_dato -> prefijo .

    VARIABLE        reduce using rule 113 (tipo_dato -> prefijo .)


state 95

    (48) asignar_variable -> prefijo tipo_variable VARIABLE asignador . expresion SEMICOLON
    (60) expresion -> . comparacion_logica
    (61) expresion -> . list
    (62) expresion -> . diccionario
    (63) expresion -> . set
    (64) expresion -> . input
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (105) list -> . LBRACKETS element_list RBRACKETS
    (106) list -> . LBRACKETS RBRACKETS
    (155) diccionario -> . LKEY key_element_list RKEY
    (156) diccionario -> . LKEY RKEY
    (157) diccionario -> . DICT LPAREN RPAREN
    (158) set -> . LKEY element_list RKEY
    (159) set -> . CONJUNTO LPAREN RPAREN
    (72) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    LBRACKETS       shift and go to state 75
    LKEY            shift and go to state 76
    DICT            shift and go to state 77
    CONJUNTO        shift and go to state 78
    STDIN           shift and go to state 79
    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    expresion                      shift and go to state 153
    comparacion_logica             shift and go to state 69
    list                           shift and go to state 70
    diccionario                    shift and go to state 71
    set                            shift and go to state 72
    input                          shift and go to state 73
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 96

    (49) asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .

    CLASS           reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    VOID            reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    VAR_TYPE        reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    INT_TYPE        reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    STRING_TYPE     reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    BOOL_TYPE       reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    FINAL_TYPE      reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    CONST_TYPE      reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    LIST            reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    MAP             reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    SET             reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    $end            reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    STATIC          reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    RKEY            reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    PRINT           reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    IF              reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    RETURN          reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    WHILE           reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    DO              reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    FOR             reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    STRING          reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    BOOLEAN         reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    INT             reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)
    DOUBLE          reduce using rule 49 (asignar_variable -> prefijo tipo_variable VARIABLE SEMICOLON .)


state 97

    (35) constructor -> VARIABLE . LPAREN atributo_list RPAREN SEMICOLON
    (112) tipo_dato -> VARIABLE .
    (42) variables -> VARIABLE .
    (67) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    LPAREN          shift and go to state 154
    VARIABLE        reduce using rule 112 (tipo_dato -> VARIABLE .)
    DOT             reduce using rule 42 (variables -> VARIABLE .)
    INCREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    DECREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 110


state 98

    (30) class -> CLASS VARIABLE LKEY cuerpo_clase . RKEY

    RKEY            shift and go to state 155


state 99

    (28) cuerpo_clase -> sentencias_clase .
    (29) cuerpo_clase -> sentencias_clase . cuerpo_clase
    (28) cuerpo_clase -> . sentencias_clase
    (29) cuerpo_clase -> . sentencias_clase cuerpo_clase
    (23) sentencias_clase -> . asignar_variable
    (24) sentencias_clase -> . cambiar_variable
    (25) sentencias_clase -> . funcion
    (26) sentencias_clase -> . constructor
    (27) sentencias_clase -> . funcion_static
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (38) funcion -> . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (39) funcion -> . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (35) constructor -> . VARIABLE LPAREN atributo_list RPAREN SEMICOLON
    (40) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> . STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            reduce using rule 28 (cuerpo_clase -> sentencias_clase .)
    VARIABLE        shift and go to state 97
    STATIC          shift and go to state 106
    VOID            shift and go to state 14
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    sentencias_clase               shift and go to state 99
    cuerpo_clase                   shift and go to state 156
    asignar_variable               shift and go to state 100
    cambiar_variable               shift and go to state 101
    funcion                        shift and go to state 102
    constructor                    shift and go to state 103
    funcion_static                 shift and go to state 104
    tipo_dato                      shift and go to state 10
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 105
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 100

    (23) sentencias_clase -> asignar_variable .

    VARIABLE        reduce using rule 23 (sentencias_clase -> asignar_variable .)
    STATIC          reduce using rule 23 (sentencias_clase -> asignar_variable .)
    VOID            reduce using rule 23 (sentencias_clase -> asignar_variable .)
    VAR_TYPE        reduce using rule 23 (sentencias_clase -> asignar_variable .)
    INT_TYPE        reduce using rule 23 (sentencias_clase -> asignar_variable .)
    STRING_TYPE     reduce using rule 23 (sentencias_clase -> asignar_variable .)
    DOUBLE_TYPE     reduce using rule 23 (sentencias_clase -> asignar_variable .)
    BOOL_TYPE       reduce using rule 23 (sentencias_clase -> asignar_variable .)
    FINAL_TYPE      reduce using rule 23 (sentencias_clase -> asignar_variable .)
    CONST_TYPE      reduce using rule 23 (sentencias_clase -> asignar_variable .)
    LIST            reduce using rule 23 (sentencias_clase -> asignar_variable .)
    MAP             reduce using rule 23 (sentencias_clase -> asignar_variable .)
    SET             reduce using rule 23 (sentencias_clase -> asignar_variable .)
    RKEY            reduce using rule 23 (sentencias_clase -> asignar_variable .)


state 101

    (24) sentencias_clase -> cambiar_variable .

    VARIABLE        reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    STATIC          reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    VOID            reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    VAR_TYPE        reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    INT_TYPE        reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    STRING_TYPE     reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    DOUBLE_TYPE     reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    BOOL_TYPE       reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    FINAL_TYPE      reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    CONST_TYPE      reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    LIST            reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    MAP             reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    SET             reduce using rule 24 (sentencias_clase -> cambiar_variable .)
    RKEY            reduce using rule 24 (sentencias_clase -> cambiar_variable .)


state 102

    (25) sentencias_clase -> funcion .

    VARIABLE        reduce using rule 25 (sentencias_clase -> funcion .)
    STATIC          reduce using rule 25 (sentencias_clase -> funcion .)
    VOID            reduce using rule 25 (sentencias_clase -> funcion .)
    VAR_TYPE        reduce using rule 25 (sentencias_clase -> funcion .)
    INT_TYPE        reduce using rule 25 (sentencias_clase -> funcion .)
    STRING_TYPE     reduce using rule 25 (sentencias_clase -> funcion .)
    DOUBLE_TYPE     reduce using rule 25 (sentencias_clase -> funcion .)
    BOOL_TYPE       reduce using rule 25 (sentencias_clase -> funcion .)
    FINAL_TYPE      reduce using rule 25 (sentencias_clase -> funcion .)
    CONST_TYPE      reduce using rule 25 (sentencias_clase -> funcion .)
    LIST            reduce using rule 25 (sentencias_clase -> funcion .)
    MAP             reduce using rule 25 (sentencias_clase -> funcion .)
    SET             reduce using rule 25 (sentencias_clase -> funcion .)
    RKEY            reduce using rule 25 (sentencias_clase -> funcion .)


state 103

    (26) sentencias_clase -> constructor .

    VARIABLE        reduce using rule 26 (sentencias_clase -> constructor .)
    STATIC          reduce using rule 26 (sentencias_clase -> constructor .)
    VOID            reduce using rule 26 (sentencias_clase -> constructor .)
    VAR_TYPE        reduce using rule 26 (sentencias_clase -> constructor .)
    INT_TYPE        reduce using rule 26 (sentencias_clase -> constructor .)
    STRING_TYPE     reduce using rule 26 (sentencias_clase -> constructor .)
    DOUBLE_TYPE     reduce using rule 26 (sentencias_clase -> constructor .)
    BOOL_TYPE       reduce using rule 26 (sentencias_clase -> constructor .)
    FINAL_TYPE      reduce using rule 26 (sentencias_clase -> constructor .)
    CONST_TYPE      reduce using rule 26 (sentencias_clase -> constructor .)
    LIST            reduce using rule 26 (sentencias_clase -> constructor .)
    MAP             reduce using rule 26 (sentencias_clase -> constructor .)
    SET             reduce using rule 26 (sentencias_clase -> constructor .)
    RKEY            reduce using rule 26 (sentencias_clase -> constructor .)


state 104

    (27) sentencias_clase -> funcion_static .

    VARIABLE        reduce using rule 27 (sentencias_clase -> funcion_static .)
    STATIC          reduce using rule 27 (sentencias_clase -> funcion_static .)
    VOID            reduce using rule 27 (sentencias_clase -> funcion_static .)
    VAR_TYPE        reduce using rule 27 (sentencias_clase -> funcion_static .)
    INT_TYPE        reduce using rule 27 (sentencias_clase -> funcion_static .)
    STRING_TYPE     reduce using rule 27 (sentencias_clase -> funcion_static .)
    DOUBLE_TYPE     reduce using rule 27 (sentencias_clase -> funcion_static .)
    BOOL_TYPE       reduce using rule 27 (sentencias_clase -> funcion_static .)
    FINAL_TYPE      reduce using rule 27 (sentencias_clase -> funcion_static .)
    CONST_TYPE      reduce using rule 27 (sentencias_clase -> funcion_static .)
    LIST            reduce using rule 27 (sentencias_clase -> funcion_static .)
    MAP             reduce using rule 27 (sentencias_clase -> funcion_static .)
    SET             reduce using rule 27 (sentencias_clase -> funcion_static .)
    RKEY            reduce using rule 27 (sentencias_clase -> funcion_static .)


state 105

    (50) cambiar_variable -> getVariable . modificador SEMICOLON
    (51) cambiar_variable -> getVariable . asignador expresion SEMICOLON
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    INCREMENT_VAR   shift and go to state 159
    DECREMENT_VAR   shift and go to state 160
    ASSIGN          shift and go to state 48
    PLUS_ASSIGN     shift and go to state 49
    MINUS_ASSIGN    shift and go to state 50
    TIMES_ASSIGN    shift and go to state 51
    DIVIDE_ASSIGN   shift and go to state 52
    MODULO_ASSIGN   shift and go to state 53

    modificador                    shift and go to state 157
    asignador                      shift and go to state 158

state 106

    (40) funcion_static -> STATIC . tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC . tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 161
    prefijo                        shift and go to state 94
    colecciones                    shift and go to state 20

state 107

    (120) colecciones -> LIST LESS_THAN tipo_coleccion GREATER_THAN .

    VARIABLE        reduce using rule 120 (colecciones -> LIST LESS_THAN tipo_coleccion GREATER_THAN .)


state 108

    (121) colecciones -> MAP LESS_THAN tipo_coleccion COMA . tipo_coleccion GREATER_THAN
    (123) tipo_coleccion -> . INT_TYPE
    (124) tipo_coleccion -> . STRING_TYPE
    (125) tipo_coleccion -> . DOUBLE_TYPE
    (126) tipo_coleccion -> . FINAL_TYPE
    (127) tipo_coleccion -> . CONST_TYPE
    (128) tipo_coleccion -> . VAR_TYPE
    (129) tipo_coleccion -> . BOOL_TYPE
    (130) tipo_coleccion -> . VARIABLE

    INT_TYPE        shift and go to state 57
    STRING_TYPE     shift and go to state 58
    DOUBLE_TYPE     shift and go to state 59
    FINAL_TYPE      shift and go to state 60
    CONST_TYPE      shift and go to state 61
    VAR_TYPE        shift and go to state 62
    BOOL_TYPE       shift and go to state 63
    VARIABLE        shift and go to state 64

    tipo_coleccion                 shift and go to state 162

state 109

    (122) colecciones -> SET LESS_THAN tipo_coleccion GREATER_THAN .

    VARIABLE        reduce using rule 122 (colecciones -> SET LESS_THAN tipo_coleccion GREATER_THAN .)


state 110

    (67) variable_indexada -> VARIABLE LBRACKETS . inmutables RBRACKETS
    (149) inmutables -> . STRING
    (150) inmutables -> . INT
    (151) inmutables -> . DOUBLE

    STRING          shift and go to state 164
    INT             shift and go to state 165
    DOUBLE          shift and go to state 166

    inmutables                     shift and go to state 163

state 111

    (46) asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .

    CLASS           reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    VOID            reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    VARIABLE        reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    INT_TYPE        reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    FINAL_TYPE      reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    LIST            reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    MAP             reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    SET             reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    $end            reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    STATIC          reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    RKEY            reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    PRINT           reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    IF              reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    RETURN          reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    WHILE           reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    DO              reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    FOR             reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    STRING          reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    BOOLEAN         reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    INT             reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)
    DOUBLE          reduce using rule 46 (asignar_variable -> tipo_dato VARIABLE asignador expresion SEMICOLON .)


state 112

    (85) comparacion_logica -> comparacion operador_logico . comparacion_logica
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion                    shift and go to state 74
    comparacion_logica             shift and go to state 167
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 113

    (86) operador_logico -> AND .

    STRING          reduce using rule 86 (operador_logico -> AND .)
    BOOLEAN         reduce using rule 86 (operador_logico -> AND .)
    INT             reduce using rule 86 (operador_logico -> AND .)
    DOUBLE          reduce using rule 86 (operador_logico -> AND .)
    VARIABLE        reduce using rule 86 (operador_logico -> AND .)


state 114

    (87) operador_logico -> OR .

    STRING          reduce using rule 87 (operador_logico -> OR .)
    BOOLEAN         reduce using rule 87 (operador_logico -> OR .)
    INT             reduce using rule 87 (operador_logico -> OR .)
    DOUBLE          reduce using rule 87 (operador_logico -> OR .)
    VARIABLE        reduce using rule 87 (operador_logico -> OR .)


state 115

    (88) operador_logico -> NOT .

    STRING          reduce using rule 88 (operador_logico -> NOT .)
    BOOLEAN         reduce using rule 88 (operador_logico -> NOT .)
    INT             reduce using rule 88 (operador_logico -> NOT .)
    DOUBLE          reduce using rule 88 (operador_logico -> NOT .)
    VARIABLE        reduce using rule 88 (operador_logico -> NOT .)


state 116

    (105) list -> LBRACKETS element_list . RBRACKETS

    RBRACKETS       shift and go to state 168


state 117

    (106) list -> LBRACKETS RBRACKETS .

    SEMICOLON       reduce using rule 106 (list -> LBRACKETS RBRACKETS .)


state 118

    (107) element_list -> elemento .
    (108) element_list -> elemento . COMA element_list

    RBRACKETS       reduce using rule 107 (element_list -> elemento .)
    RKEY            reduce using rule 107 (element_list -> elemento .)
    RPAREN          reduce using rule 107 (element_list -> elemento .)
    COMA            shift and go to state 169


state 119

    (73) elemento -> INT .

    COMA            reduce using rule 73 (elemento -> INT .)
    RBRACKETS       reduce using rule 73 (elemento -> INT .)
    RPAREN          reduce using rule 73 (elemento -> INT .)
    RKEY            reduce using rule 73 (elemento -> INT .)


state 120

    (74) elemento -> DOUBLE .

    COMA            reduce using rule 74 (elemento -> DOUBLE .)
    RBRACKETS       reduce using rule 74 (elemento -> DOUBLE .)
    RPAREN          reduce using rule 74 (elemento -> DOUBLE .)
    RKEY            reduce using rule 74 (elemento -> DOUBLE .)


state 121

    (75) elemento -> STRING .

    COMA            reduce using rule 75 (elemento -> STRING .)
    RBRACKETS       reduce using rule 75 (elemento -> STRING .)
    RPAREN          reduce using rule 75 (elemento -> STRING .)
    RKEY            reduce using rule 75 (elemento -> STRING .)


state 122

    (76) elemento -> BOOLEAN .

    COMA            reduce using rule 76 (elemento -> BOOLEAN .)
    RBRACKETS       reduce using rule 76 (elemento -> BOOLEAN .)
    RKEY            reduce using rule 76 (elemento -> BOOLEAN .)
    RPAREN          reduce using rule 76 (elemento -> BOOLEAN .)


state 123

    (77) elemento -> getVariable .

    COMA            reduce using rule 77 (elemento -> getVariable .)
    RBRACKETS       reduce using rule 77 (elemento -> getVariable .)
    RKEY            reduce using rule 77 (elemento -> getVariable .)
    RPAREN          reduce using rule 77 (elemento -> getVariable .)


state 124

    (155) diccionario -> LKEY key_element_list . RKEY

    RKEY            shift and go to state 170


state 125

    (156) diccionario -> LKEY RKEY .

    SEMICOLON       reduce using rule 156 (diccionario -> LKEY RKEY .)


state 126

    (158) set -> LKEY element_list . RKEY

    RKEY            shift and go to state 171


state 127

    (153) key_element_list -> key_element .
    (154) key_element_list -> key_element . COMA key_element_list

    RKEY            reduce using rule 153 (key_element_list -> key_element .)
    COMA            shift and go to state 172


state 128

    (152) key_element -> inmutables . DOS_PUNTOS elemento

    DOS_PUNTOS      shift and go to state 173


state 129

    (73) elemento -> INT .
    (150) inmutables -> INT .

    COMA            reduce using rule 73 (elemento -> INT .)
    RKEY            reduce using rule 73 (elemento -> INT .)
    DOS_PUNTOS      reduce using rule 150 (inmutables -> INT .)


state 130

    (74) elemento -> DOUBLE .
    (151) inmutables -> DOUBLE .

    COMA            reduce using rule 74 (elemento -> DOUBLE .)
    RKEY            reduce using rule 74 (elemento -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 151 (inmutables -> DOUBLE .)


state 131

    (75) elemento -> STRING .
    (149) inmutables -> STRING .

    COMA            reduce using rule 75 (elemento -> STRING .)
    RKEY            reduce using rule 75 (elemento -> STRING .)
    DOS_PUNTOS      reduce using rule 149 (inmutables -> STRING .)


state 132

    (157) diccionario -> DICT LPAREN . RPAREN

    RPAREN          shift and go to state 174


state 133

    (159) set -> CONJUNTO LPAREN . RPAREN

    RPAREN          shift and go to state 175


state 134

    (72) input -> STDIN DOT . READLINESYNC LPAREN RPAREN

    READLINESYNC    shift and go to state 176


state 135

    (82) comparacion -> comparables comparador . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparables                    shift and go to state 177
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 136

    (89) comparador -> EQUALITY .

    STRING          reduce using rule 89 (comparador -> EQUALITY .)
    BOOLEAN         reduce using rule 89 (comparador -> EQUALITY .)
    INT             reduce using rule 89 (comparador -> EQUALITY .)
    DOUBLE          reduce using rule 89 (comparador -> EQUALITY .)
    VARIABLE        reduce using rule 89 (comparador -> EQUALITY .)


state 137

    (90) comparador -> INEQUALITY .

    STRING          reduce using rule 90 (comparador -> INEQUALITY .)
    BOOLEAN         reduce using rule 90 (comparador -> INEQUALITY .)
    INT             reduce using rule 90 (comparador -> INEQUALITY .)
    DOUBLE          reduce using rule 90 (comparador -> INEQUALITY .)
    VARIABLE        reduce using rule 90 (comparador -> INEQUALITY .)


state 138

    (91) comparador -> GREATER_THAN .

    STRING          reduce using rule 91 (comparador -> GREATER_THAN .)
    BOOLEAN         reduce using rule 91 (comparador -> GREATER_THAN .)
    INT             reduce using rule 91 (comparador -> GREATER_THAN .)
    DOUBLE          reduce using rule 91 (comparador -> GREATER_THAN .)
    VARIABLE        reduce using rule 91 (comparador -> GREATER_THAN .)


state 139

    (92) comparador -> LESS_THAN .

    STRING          reduce using rule 92 (comparador -> LESS_THAN .)
    BOOLEAN         reduce using rule 92 (comparador -> LESS_THAN .)
    INT             reduce using rule 92 (comparador -> LESS_THAN .)
    DOUBLE          reduce using rule 92 (comparador -> LESS_THAN .)
    VARIABLE        reduce using rule 92 (comparador -> LESS_THAN .)


state 140

    (93) comparador -> GREATER_EQ_THAN .

    STRING          reduce using rule 93 (comparador -> GREATER_EQ_THAN .)
    BOOLEAN         reduce using rule 93 (comparador -> GREATER_EQ_THAN .)
    INT             reduce using rule 93 (comparador -> GREATER_EQ_THAN .)
    DOUBLE          reduce using rule 93 (comparador -> GREATER_EQ_THAN .)
    VARIABLE        reduce using rule 93 (comparador -> GREATER_EQ_THAN .)


state 141

    (94) comparador -> LESS_EQ_THAN .

    STRING          reduce using rule 94 (comparador -> LESS_EQ_THAN .)
    BOOLEAN         reduce using rule 94 (comparador -> LESS_EQ_THAN .)
    INT             reduce using rule 94 (comparador -> LESS_EQ_THAN .)
    DOUBLE          reduce using rule 94 (comparador -> LESS_EQ_THAN .)
    VARIABLE        reduce using rule 94 (comparador -> LESS_EQ_THAN .)


state 142

    (99) operacion -> operables operador . operables
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    operables                      shift and go to state 178
    getVariable                    shift and go to state 179
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 143

    (100) operador -> PLUS .

    INT             reduce using rule 100 (operador -> PLUS .)
    DOUBLE          reduce using rule 100 (operador -> PLUS .)
    VARIABLE        reduce using rule 100 (operador -> PLUS .)


state 144

    (101) operador -> MINUS .

    INT             reduce using rule 101 (operador -> MINUS .)
    DOUBLE          reduce using rule 101 (operador -> MINUS .)
    VARIABLE        reduce using rule 101 (operador -> MINUS .)


state 145

    (102) operador -> TIMES .

    INT             reduce using rule 102 (operador -> TIMES .)
    DOUBLE          reduce using rule 102 (operador -> TIMES .)
    VARIABLE        reduce using rule 102 (operador -> TIMES .)


state 146

    (103) operador -> DIVIDE .

    INT             reduce using rule 103 (operador -> DIVIDE .)
    DOUBLE          reduce using rule 103 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 103 (operador -> DIVIDE .)


state 147

    (104) operador -> MODULO .

    INT             reduce using rule 104 (operador -> MODULO .)
    DOUBLE          reduce using rule 104 (operador -> MODULO .)
    VARIABLE        reduce using rule 104 (operador -> MODULO .)


state 148

    (33) invocar -> getVariable LPAREN . element_list RPAREN
    (34) invocar -> getVariable LPAREN . RPAREN
    (107) element_list -> . elemento
    (108) element_list -> . elemento COMA element_list
    (73) elemento -> . INT
    (74) elemento -> . DOUBLE
    (75) elemento -> . STRING
    (76) elemento -> . BOOLEAN
    (77) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RPAREN          shift and go to state 181
    INT             shift and go to state 119
    DOUBLE          shift and go to state 120
    STRING          shift and go to state 121
    BOOLEAN         shift and go to state 122
    VARIABLE        shift and go to state 67

    getVariable                    shift and go to state 123
    element_list                   shift and go to state 180
    elemento                       shift and go to state 118
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 149

    (45) getVariable -> variables DOT . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 67

    variables                      shift and go to state 89
    getVariable                    shift and go to state 182
    variable_indexada              shift and go to state 90

state 150

    (70) parametros -> tipo_dato VARIABLE .
    (71) parametros -> tipo_dato VARIABLE . COMA parametros

    RPAREN          reduce using rule 70 (parametros -> tipo_dato VARIABLE .)
    COMA            shift and go to state 183


state 151

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 184


state 152

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 185
    cuerpo_funcion                 shift and go to state 187
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 153

    (48) asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion . SEMICOLON

    SEMICOLON       shift and go to state 206


state 154

    (35) constructor -> VARIABLE LPAREN . atributo_list RPAREN SEMICOLON
    (36) atributo_list -> . THIS DOT VARIABLE
    (37) atributo_list -> . THIS DOT VARIABLE COMA atributo_list

    THIS            shift and go to state 208

    atributo_list                  shift and go to state 207

state 155

    (30) class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .

    CLASS           reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    VOID            reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    VARIABLE        reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    VAR_TYPE        reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    INT_TYPE        reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    STRING_TYPE     reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    DOUBLE_TYPE     reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    BOOL_TYPE       reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    FINAL_TYPE      reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    CONST_TYPE      reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    LIST            reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    MAP             reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    SET             reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)
    $end            reduce using rule 30 (class -> CLASS VARIABLE LKEY cuerpo_clase RKEY .)


state 156

    (29) cuerpo_clase -> sentencias_clase cuerpo_clase .

    RKEY            reduce using rule 29 (cuerpo_clase -> sentencias_clase cuerpo_clase .)


state 157

    (50) cambiar_variable -> getVariable modificador . SEMICOLON

    SEMICOLON       shift and go to state 209


state 158

    (51) cambiar_variable -> getVariable asignador . expresion SEMICOLON
    (60) expresion -> . comparacion_logica
    (61) expresion -> . list
    (62) expresion -> . diccionario
    (63) expresion -> . set
    (64) expresion -> . input
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (105) list -> . LBRACKETS element_list RBRACKETS
    (106) list -> . LBRACKETS RBRACKETS
    (155) diccionario -> . LKEY key_element_list RKEY
    (156) diccionario -> . LKEY RKEY
    (157) diccionario -> . DICT LPAREN RPAREN
    (158) set -> . LKEY element_list RKEY
    (159) set -> . CONJUNTO LPAREN RPAREN
    (72) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    LBRACKETS       shift and go to state 75
    LKEY            shift and go to state 76
    DICT            shift and go to state 77
    CONJUNTO        shift and go to state 78
    STDIN           shift and go to state 79
    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    getVariable                    shift and go to state 86
    expresion                      shift and go to state 210
    comparacion_logica             shift and go to state 69
    list                           shift and go to state 70
    diccionario                    shift and go to state 71
    set                            shift and go to state 72
    input                          shift and go to state 73
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 159

    (52) modificador -> INCREMENT_VAR .

    SEMICOLON       reduce using rule 52 (modificador -> INCREMENT_VAR .)
    RPAREN          reduce using rule 52 (modificador -> INCREMENT_VAR .)


state 160

    (53) modificador -> DECREMENT_VAR .

    SEMICOLON       reduce using rule 53 (modificador -> DECREMENT_VAR .)
    RPAREN          reduce using rule 53 (modificador -> DECREMENT_VAR .)


state 161

    (40) funcion_static -> STATIC tipo_dato . VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC tipo_dato . VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 211


state 162

    (121) colecciones -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion . GREATER_THAN

    GREATER_THAN    shift and go to state 212


state 163

    (67) variable_indexada -> VARIABLE LBRACKETS inmutables . RBRACKETS

    RBRACKETS       shift and go to state 213


state 164

    (149) inmutables -> STRING .

    RBRACKETS       reduce using rule 149 (inmutables -> STRING .)
    DOS_PUNTOS      reduce using rule 149 (inmutables -> STRING .)


state 165

    (150) inmutables -> INT .

    RBRACKETS       reduce using rule 150 (inmutables -> INT .)
    DOS_PUNTOS      reduce using rule 150 (inmutables -> INT .)


state 166

    (151) inmutables -> DOUBLE .

    RBRACKETS       reduce using rule 151 (inmutables -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 151 (inmutables -> DOUBLE .)


state 167

    (85) comparacion_logica -> comparacion operador_logico comparacion_logica .

    SEMICOLON       reduce using rule 85 (comparacion_logica -> comparacion operador_logico comparacion_logica .)
    RPAREN          reduce using rule 85 (comparacion_logica -> comparacion operador_logico comparacion_logica .)


state 168

    (105) list -> LBRACKETS element_list RBRACKETS .

    SEMICOLON       reduce using rule 105 (list -> LBRACKETS element_list RBRACKETS .)


state 169

    (108) element_list -> elemento COMA . element_list
    (107) element_list -> . elemento
    (108) element_list -> . elemento COMA element_list
    (73) elemento -> . INT
    (74) elemento -> . DOUBLE
    (75) elemento -> . STRING
    (76) elemento -> . BOOLEAN
    (77) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 119
    DOUBLE          shift and go to state 120
    STRING          shift and go to state 121
    BOOLEAN         shift and go to state 122
    VARIABLE        shift and go to state 67

    elemento                       shift and go to state 118
    element_list                   shift and go to state 214
    getVariable                    shift and go to state 123
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 170

    (155) diccionario -> LKEY key_element_list RKEY .

    SEMICOLON       reduce using rule 155 (diccionario -> LKEY key_element_list RKEY .)


state 171

    (158) set -> LKEY element_list RKEY .

    SEMICOLON       reduce using rule 158 (set -> LKEY element_list RKEY .)


state 172

    (154) key_element_list -> key_element COMA . key_element_list
    (153) key_element_list -> . key_element
    (154) key_element_list -> . key_element COMA key_element_list
    (152) key_element -> . inmutables DOS_PUNTOS elemento
    (149) inmutables -> . STRING
    (150) inmutables -> . INT
    (151) inmutables -> . DOUBLE

    STRING          shift and go to state 164
    INT             shift and go to state 165
    DOUBLE          shift and go to state 166

    key_element                    shift and go to state 127
    key_element_list               shift and go to state 215
    inmutables                     shift and go to state 128

state 173

    (152) key_element -> inmutables DOS_PUNTOS . elemento
    (73) elemento -> . INT
    (74) elemento -> . DOUBLE
    (75) elemento -> . STRING
    (76) elemento -> . BOOLEAN
    (77) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    INT             shift and go to state 119
    DOUBLE          shift and go to state 120
    STRING          shift and go to state 121
    BOOLEAN         shift and go to state 122
    VARIABLE        shift and go to state 67

    elemento                       shift and go to state 216
    getVariable                    shift and go to state 123
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 174

    (157) diccionario -> DICT LPAREN RPAREN .

    SEMICOLON       reduce using rule 157 (diccionario -> DICT LPAREN RPAREN .)


state 175

    (159) set -> CONJUNTO LPAREN RPAREN .

    SEMICOLON       reduce using rule 159 (set -> CONJUNTO LPAREN RPAREN .)


state 176

    (72) input -> STDIN DOT READLINESYNC . LPAREN RPAREN

    LPAREN          shift and go to state 217


state 177

    (82) comparacion -> comparables comparador comparables .

    AND             reduce using rule 82 (comparacion -> comparables comparador comparables .)
    OR              reduce using rule 82 (comparacion -> comparables comparador comparables .)
    NOT             reduce using rule 82 (comparacion -> comparables comparador comparables .)
    SEMICOLON       reduce using rule 82 (comparacion -> comparables comparador comparables .)
    RPAREN          reduce using rule 82 (comparacion -> comparables comparador comparables .)


state 178

    (99) operacion -> operables operador operables .

    EQUALITY        reduce using rule 99 (operacion -> operables operador operables .)
    INEQUALITY      reduce using rule 99 (operacion -> operables operador operables .)
    GREATER_THAN    reduce using rule 99 (operacion -> operables operador operables .)
    LESS_THAN       reduce using rule 99 (operacion -> operables operador operables .)
    GREATER_EQ_THAN reduce using rule 99 (operacion -> operables operador operables .)
    LESS_EQ_THAN    reduce using rule 99 (operacion -> operables operador operables .)
    AND             reduce using rule 99 (operacion -> operables operador operables .)
    OR              reduce using rule 99 (operacion -> operables operador operables .)
    NOT             reduce using rule 99 (operacion -> operables operador operables .)
    SEMICOLON       reduce using rule 99 (operacion -> operables operador operables .)
    RPAREN          reduce using rule 99 (operacion -> operables operador operables .)


state 179

    (97) operables -> getVariable .

    EQUALITY        reduce using rule 97 (operables -> getVariable .)
    INEQUALITY      reduce using rule 97 (operables -> getVariable .)
    GREATER_THAN    reduce using rule 97 (operables -> getVariable .)
    LESS_THAN       reduce using rule 97 (operables -> getVariable .)
    GREATER_EQ_THAN reduce using rule 97 (operables -> getVariable .)
    LESS_EQ_THAN    reduce using rule 97 (operables -> getVariable .)
    AND             reduce using rule 97 (operables -> getVariable .)
    OR              reduce using rule 97 (operables -> getVariable .)
    NOT             reduce using rule 97 (operables -> getVariable .)
    SEMICOLON       reduce using rule 97 (operables -> getVariable .)
    RPAREN          reduce using rule 97 (operables -> getVariable .)


state 180

    (33) invocar -> getVariable LPAREN element_list . RPAREN

    RPAREN          shift and go to state 218


state 181

    (34) invocar -> getVariable LPAREN RPAREN .

    EQUALITY        reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    INEQUALITY      reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    LESS_THAN       reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    GREATER_EQ_THAN reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    LESS_EQ_THAN    reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    AND             reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    OR              reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    NOT             reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    SEMICOLON       reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)
    RPAREN          reduce using rule 34 (invocar -> getVariable LPAREN RPAREN .)


state 182

    (45) getVariable -> variables DOT getVariable .

    LPAREN          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    PLUS            reduce using rule 45 (getVariable -> variables DOT getVariable .)
    MINUS           reduce using rule 45 (getVariable -> variables DOT getVariable .)
    TIMES           reduce using rule 45 (getVariable -> variables DOT getVariable .)
    DIVIDE          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    MODULO          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    EQUALITY        reduce using rule 45 (getVariable -> variables DOT getVariable .)
    INEQUALITY      reduce using rule 45 (getVariable -> variables DOT getVariable .)
    GREATER_THAN    reduce using rule 45 (getVariable -> variables DOT getVariable .)
    LESS_THAN       reduce using rule 45 (getVariable -> variables DOT getVariable .)
    GREATER_EQ_THAN reduce using rule 45 (getVariable -> variables DOT getVariable .)
    LESS_EQ_THAN    reduce using rule 45 (getVariable -> variables DOT getVariable .)
    AND             reduce using rule 45 (getVariable -> variables DOT getVariable .)
    OR              reduce using rule 45 (getVariable -> variables DOT getVariable .)
    NOT             reduce using rule 45 (getVariable -> variables DOT getVariable .)
    SEMICOLON       reduce using rule 45 (getVariable -> variables DOT getVariable .)
    INCREMENT_VAR   reduce using rule 45 (getVariable -> variables DOT getVariable .)
    DECREMENT_VAR   reduce using rule 45 (getVariable -> variables DOT getVariable .)
    ASSIGN          reduce using rule 45 (getVariable -> variables DOT getVariable .)
    PLUS_ASSIGN     reduce using rule 45 (getVariable -> variables DOT getVariable .)
    MINUS_ASSIGN    reduce using rule 45 (getVariable -> variables DOT getVariable .)
    TIMES_ASSIGN    reduce using rule 45 (getVariable -> variables DOT getVariable .)
    DIVIDE_ASSIGN   reduce using rule 45 (getVariable -> variables DOT getVariable .)
    MODULO_ASSIGN   reduce using rule 45 (getVariable -> variables DOT getVariable .)
    COMA            reduce using rule 45 (getVariable -> variables DOT getVariable .)
    RBRACKETS       reduce using rule 45 (getVariable -> variables DOT getVariable .)
    RKEY            reduce using rule 45 (getVariable -> variables DOT getVariable .)
    RPAREN          reduce using rule 45 (getVariable -> variables DOT getVariable .)


state 183

    (71) parametros -> tipo_dato VARIABLE COMA . parametros
    (70) parametros -> . tipo_dato VARIABLE
    (71) parametros -> . tipo_dato VARIABLE COMA parametros
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 91
    parametros                     shift and go to state 219
    prefijo                        shift and go to state 94
    colecciones                    shift and go to state 20

state 184

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 185
    cuerpo_funcion                 shift and go to state 220
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 185

    (46) asignar_variable -> tipo_dato . VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 221


state 186

    (112) tipo_dato -> VARIABLE .
    (42) variables -> VARIABLE .
    (67) variable_indexada -> VARIABLE . LBRACKETS inmutables RBRACKETS

    VARIABLE        reduce using rule 112 (tipo_dato -> VARIABLE .)
    DOT             reduce using rule 42 (variables -> VARIABLE .)
    LPAREN          reduce using rule 42 (variables -> VARIABLE .)
    INCREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    DECREMENT_VAR   reduce using rule 42 (variables -> VARIABLE .)
    ASSIGN          reduce using rule 42 (variables -> VARIABLE .)
    PLUS_ASSIGN     reduce using rule 42 (variables -> VARIABLE .)
    MINUS_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 42 (variables -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    MODULO_ASSIGN   reduce using rule 42 (variables -> VARIABLE .)
    LBRACKETS       shift and go to state 110


state 187

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 222


state 188

    (21) cuerpo_funcion -> sentencias_funcion .
    (22) cuerpo_funcion -> sentencias_funcion . cuerpo_funcion
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            reduce using rule 21 (cuerpo_funcion -> sentencias_funcion .)
    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    sentencias_funcion             shift and go to state 188
    cuerpo_funcion                 shift and go to state 223
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 189

    (11) sentencias_funcion -> asignar_variable .

    PRINT           reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    IF              reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    RETURN          reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    WHILE           reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    DO              reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    FOR             reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    VOID            reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    VARIABLE        reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    VAR_TYPE        reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    INT_TYPE        reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    STRING_TYPE     reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    DOUBLE_TYPE     reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    BOOL_TYPE       reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    FINAL_TYPE      reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    CONST_TYPE      reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    LIST            reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    MAP             reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    SET             reduce using rule 11 (sentencias_funcion -> asignar_variable .)
    RKEY            reduce using rule 11 (sentencias_funcion -> asignar_variable .)


state 190

    (12) sentencias_funcion -> cambiar_variable .

    PRINT           reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    IF              reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    RETURN          reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    WHILE           reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    DO              reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    FOR             reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    VOID            reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    VARIABLE        reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    VAR_TYPE        reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    INT_TYPE        reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    STRING_TYPE     reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    DOUBLE_TYPE     reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    BOOL_TYPE       reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    FINAL_TYPE      reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    CONST_TYPE      reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    LIST            reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    MAP             reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    SET             reduce using rule 12 (sentencias_funcion -> cambiar_variable .)
    RKEY            reduce using rule 12 (sentencias_funcion -> cambiar_variable .)


state 191

    (13) sentencias_funcion -> impresion .

    PRINT           reduce using rule 13 (sentencias_funcion -> impresion .)
    IF              reduce using rule 13 (sentencias_funcion -> impresion .)
    RETURN          reduce using rule 13 (sentencias_funcion -> impresion .)
    WHILE           reduce using rule 13 (sentencias_funcion -> impresion .)
    DO              reduce using rule 13 (sentencias_funcion -> impresion .)
    FOR             reduce using rule 13 (sentencias_funcion -> impresion .)
    VOID            reduce using rule 13 (sentencias_funcion -> impresion .)
    VARIABLE        reduce using rule 13 (sentencias_funcion -> impresion .)
    VAR_TYPE        reduce using rule 13 (sentencias_funcion -> impresion .)
    INT_TYPE        reduce using rule 13 (sentencias_funcion -> impresion .)
    STRING_TYPE     reduce using rule 13 (sentencias_funcion -> impresion .)
    DOUBLE_TYPE     reduce using rule 13 (sentencias_funcion -> impresion .)
    BOOL_TYPE       reduce using rule 13 (sentencias_funcion -> impresion .)
    FINAL_TYPE      reduce using rule 13 (sentencias_funcion -> impresion .)
    CONST_TYPE      reduce using rule 13 (sentencias_funcion -> impresion .)
    LIST            reduce using rule 13 (sentencias_funcion -> impresion .)
    MAP             reduce using rule 13 (sentencias_funcion -> impresion .)
    SET             reduce using rule 13 (sentencias_funcion -> impresion .)
    RKEY            reduce using rule 13 (sentencias_funcion -> impresion .)


state 192

    (14) sentencias_funcion -> condicional .

    PRINT           reduce using rule 14 (sentencias_funcion -> condicional .)
    IF              reduce using rule 14 (sentencias_funcion -> condicional .)
    RETURN          reduce using rule 14 (sentencias_funcion -> condicional .)
    WHILE           reduce using rule 14 (sentencias_funcion -> condicional .)
    DO              reduce using rule 14 (sentencias_funcion -> condicional .)
    FOR             reduce using rule 14 (sentencias_funcion -> condicional .)
    VOID            reduce using rule 14 (sentencias_funcion -> condicional .)
    VARIABLE        reduce using rule 14 (sentencias_funcion -> condicional .)
    VAR_TYPE        reduce using rule 14 (sentencias_funcion -> condicional .)
    INT_TYPE        reduce using rule 14 (sentencias_funcion -> condicional .)
    STRING_TYPE     reduce using rule 14 (sentencias_funcion -> condicional .)
    DOUBLE_TYPE     reduce using rule 14 (sentencias_funcion -> condicional .)
    BOOL_TYPE       reduce using rule 14 (sentencias_funcion -> condicional .)
    FINAL_TYPE      reduce using rule 14 (sentencias_funcion -> condicional .)
    CONST_TYPE      reduce using rule 14 (sentencias_funcion -> condicional .)
    LIST            reduce using rule 14 (sentencias_funcion -> condicional .)
    MAP             reduce using rule 14 (sentencias_funcion -> condicional .)
    SET             reduce using rule 14 (sentencias_funcion -> condicional .)
    RKEY            reduce using rule 14 (sentencias_funcion -> condicional .)


state 193

    (15) sentencias_funcion -> retorno .

    PRINT           reduce using rule 15 (sentencias_funcion -> retorno .)
    IF              reduce using rule 15 (sentencias_funcion -> retorno .)
    RETURN          reduce using rule 15 (sentencias_funcion -> retorno .)
    WHILE           reduce using rule 15 (sentencias_funcion -> retorno .)
    DO              reduce using rule 15 (sentencias_funcion -> retorno .)
    FOR             reduce using rule 15 (sentencias_funcion -> retorno .)
    VOID            reduce using rule 15 (sentencias_funcion -> retorno .)
    VARIABLE        reduce using rule 15 (sentencias_funcion -> retorno .)
    VAR_TYPE        reduce using rule 15 (sentencias_funcion -> retorno .)
    INT_TYPE        reduce using rule 15 (sentencias_funcion -> retorno .)
    STRING_TYPE     reduce using rule 15 (sentencias_funcion -> retorno .)
    DOUBLE_TYPE     reduce using rule 15 (sentencias_funcion -> retorno .)
    BOOL_TYPE       reduce using rule 15 (sentencias_funcion -> retorno .)
    FINAL_TYPE      reduce using rule 15 (sentencias_funcion -> retorno .)
    CONST_TYPE      reduce using rule 15 (sentencias_funcion -> retorno .)
    LIST            reduce using rule 15 (sentencias_funcion -> retorno .)
    MAP             reduce using rule 15 (sentencias_funcion -> retorno .)
    SET             reduce using rule 15 (sentencias_funcion -> retorno .)
    RKEY            reduce using rule 15 (sentencias_funcion -> retorno .)


state 194

    (16) sentencias_funcion -> while .

    PRINT           reduce using rule 16 (sentencias_funcion -> while .)
    IF              reduce using rule 16 (sentencias_funcion -> while .)
    RETURN          reduce using rule 16 (sentencias_funcion -> while .)
    WHILE           reduce using rule 16 (sentencias_funcion -> while .)
    DO              reduce using rule 16 (sentencias_funcion -> while .)
    FOR             reduce using rule 16 (sentencias_funcion -> while .)
    VOID            reduce using rule 16 (sentencias_funcion -> while .)
    VARIABLE        reduce using rule 16 (sentencias_funcion -> while .)
    VAR_TYPE        reduce using rule 16 (sentencias_funcion -> while .)
    INT_TYPE        reduce using rule 16 (sentencias_funcion -> while .)
    STRING_TYPE     reduce using rule 16 (sentencias_funcion -> while .)
    DOUBLE_TYPE     reduce using rule 16 (sentencias_funcion -> while .)
    BOOL_TYPE       reduce using rule 16 (sentencias_funcion -> while .)
    FINAL_TYPE      reduce using rule 16 (sentencias_funcion -> while .)
    CONST_TYPE      reduce using rule 16 (sentencias_funcion -> while .)
    LIST            reduce using rule 16 (sentencias_funcion -> while .)
    MAP             reduce using rule 16 (sentencias_funcion -> while .)
    SET             reduce using rule 16 (sentencias_funcion -> while .)
    RKEY            reduce using rule 16 (sentencias_funcion -> while .)


state 195

    (17) sentencias_funcion -> do_while .

    PRINT           reduce using rule 17 (sentencias_funcion -> do_while .)
    IF              reduce using rule 17 (sentencias_funcion -> do_while .)
    RETURN          reduce using rule 17 (sentencias_funcion -> do_while .)
    WHILE           reduce using rule 17 (sentencias_funcion -> do_while .)
    DO              reduce using rule 17 (sentencias_funcion -> do_while .)
    FOR             reduce using rule 17 (sentencias_funcion -> do_while .)
    VOID            reduce using rule 17 (sentencias_funcion -> do_while .)
    VARIABLE        reduce using rule 17 (sentencias_funcion -> do_while .)
    VAR_TYPE        reduce using rule 17 (sentencias_funcion -> do_while .)
    INT_TYPE        reduce using rule 17 (sentencias_funcion -> do_while .)
    STRING_TYPE     reduce using rule 17 (sentencias_funcion -> do_while .)
    DOUBLE_TYPE     reduce using rule 17 (sentencias_funcion -> do_while .)
    BOOL_TYPE       reduce using rule 17 (sentencias_funcion -> do_while .)
    FINAL_TYPE      reduce using rule 17 (sentencias_funcion -> do_while .)
    CONST_TYPE      reduce using rule 17 (sentencias_funcion -> do_while .)
    LIST            reduce using rule 17 (sentencias_funcion -> do_while .)
    MAP             reduce using rule 17 (sentencias_funcion -> do_while .)
    SET             reduce using rule 17 (sentencias_funcion -> do_while .)
    RKEY            reduce using rule 17 (sentencias_funcion -> do_while .)


state 196

    (18) sentencias_funcion -> for .

    PRINT           reduce using rule 18 (sentencias_funcion -> for .)
    IF              reduce using rule 18 (sentencias_funcion -> for .)
    RETURN          reduce using rule 18 (sentencias_funcion -> for .)
    WHILE           reduce using rule 18 (sentencias_funcion -> for .)
    DO              reduce using rule 18 (sentencias_funcion -> for .)
    FOR             reduce using rule 18 (sentencias_funcion -> for .)
    VOID            reduce using rule 18 (sentencias_funcion -> for .)
    VARIABLE        reduce using rule 18 (sentencias_funcion -> for .)
    VAR_TYPE        reduce using rule 18 (sentencias_funcion -> for .)
    INT_TYPE        reduce using rule 18 (sentencias_funcion -> for .)
    STRING_TYPE     reduce using rule 18 (sentencias_funcion -> for .)
    DOUBLE_TYPE     reduce using rule 18 (sentencias_funcion -> for .)
    BOOL_TYPE       reduce using rule 18 (sentencias_funcion -> for .)
    FINAL_TYPE      reduce using rule 18 (sentencias_funcion -> for .)
    CONST_TYPE      reduce using rule 18 (sentencias_funcion -> for .)
    LIST            reduce using rule 18 (sentencias_funcion -> for .)
    MAP             reduce using rule 18 (sentencias_funcion -> for .)
    SET             reduce using rule 18 (sentencias_funcion -> for .)
    RKEY            reduce using rule 18 (sentencias_funcion -> for .)


state 197

    (19) sentencias_funcion -> for_each .

    PRINT           reduce using rule 19 (sentencias_funcion -> for_each .)
    IF              reduce using rule 19 (sentencias_funcion -> for_each .)
    RETURN          reduce using rule 19 (sentencias_funcion -> for_each .)
    WHILE           reduce using rule 19 (sentencias_funcion -> for_each .)
    DO              reduce using rule 19 (sentencias_funcion -> for_each .)
    FOR             reduce using rule 19 (sentencias_funcion -> for_each .)
    VOID            reduce using rule 19 (sentencias_funcion -> for_each .)
    VARIABLE        reduce using rule 19 (sentencias_funcion -> for_each .)
    VAR_TYPE        reduce using rule 19 (sentencias_funcion -> for_each .)
    INT_TYPE        reduce using rule 19 (sentencias_funcion -> for_each .)
    STRING_TYPE     reduce using rule 19 (sentencias_funcion -> for_each .)
    DOUBLE_TYPE     reduce using rule 19 (sentencias_funcion -> for_each .)
    BOOL_TYPE       reduce using rule 19 (sentencias_funcion -> for_each .)
    FINAL_TYPE      reduce using rule 19 (sentencias_funcion -> for_each .)
    CONST_TYPE      reduce using rule 19 (sentencias_funcion -> for_each .)
    LIST            reduce using rule 19 (sentencias_funcion -> for_each .)
    MAP             reduce using rule 19 (sentencias_funcion -> for_each .)
    SET             reduce using rule 19 (sentencias_funcion -> for_each .)
    RKEY            reduce using rule 19 (sentencias_funcion -> for_each .)


state 198

    (20) sentencias_funcion -> invocacion .

    PRINT           reduce using rule 20 (sentencias_funcion -> invocacion .)
    IF              reduce using rule 20 (sentencias_funcion -> invocacion .)
    RETURN          reduce using rule 20 (sentencias_funcion -> invocacion .)
    WHILE           reduce using rule 20 (sentencias_funcion -> invocacion .)
    DO              reduce using rule 20 (sentencias_funcion -> invocacion .)
    FOR             reduce using rule 20 (sentencias_funcion -> invocacion .)
    VOID            reduce using rule 20 (sentencias_funcion -> invocacion .)
    VARIABLE        reduce using rule 20 (sentencias_funcion -> invocacion .)
    VAR_TYPE        reduce using rule 20 (sentencias_funcion -> invocacion .)
    INT_TYPE        reduce using rule 20 (sentencias_funcion -> invocacion .)
    STRING_TYPE     reduce using rule 20 (sentencias_funcion -> invocacion .)
    DOUBLE_TYPE     reduce using rule 20 (sentencias_funcion -> invocacion .)
    BOOL_TYPE       reduce using rule 20 (sentencias_funcion -> invocacion .)
    FINAL_TYPE      reduce using rule 20 (sentencias_funcion -> invocacion .)
    CONST_TYPE      reduce using rule 20 (sentencias_funcion -> invocacion .)
    LIST            reduce using rule 20 (sentencias_funcion -> invocacion .)
    MAP             reduce using rule 20 (sentencias_funcion -> invocacion .)
    SET             reduce using rule 20 (sentencias_funcion -> invocacion .)
    RKEY            reduce using rule 20 (sentencias_funcion -> invocacion .)


state 199

    (50) cambiar_variable -> getVariable . modificador SEMICOLON
    (51) cambiar_variable -> getVariable . asignador expresion SEMICOLON
    (31) invocacion -> getVariable . LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> getVariable . LPAREN RPAREN SEMICOLON
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    LPAREN          shift and go to state 224
    INCREMENT_VAR   shift and go to state 159
    DECREMENT_VAR   shift and go to state 160
    ASSIGN          shift and go to state 48
    PLUS_ASSIGN     shift and go to state 49
    MINUS_ASSIGN    shift and go to state 50
    TIMES_ASSIGN    shift and go to state 51
    DIVIDE_ASSIGN   shift and go to state 52
    MODULO_ASSIGN   shift and go to state 53

    modificador                    shift and go to state 157
    asignador                      shift and go to state 158

state 200

    (68) impresion -> PRINT . LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> PRINT . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 225


state 201

    (160) condicional -> IF . LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> IF . LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> IF . LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> IF . LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else

    LPAREN          shift and go to state 226


state 202

    (65) retorno -> RETURN . SEMICOLON
    (66) retorno -> RETURN . expresion SEMICOLON
    (60) expresion -> . comparacion_logica
    (61) expresion -> . list
    (62) expresion -> . diccionario
    (63) expresion -> . set
    (64) expresion -> . input
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (105) list -> . LBRACKETS element_list RBRACKETS
    (106) list -> . LBRACKETS RBRACKETS
    (155) diccionario -> . LKEY key_element_list RKEY
    (156) diccionario -> . LKEY RKEY
    (157) diccionario -> . DICT LPAREN RPAREN
    (158) set -> . LKEY element_list RKEY
    (159) set -> . CONJUNTO LPAREN RPAREN
    (72) input -> . STDIN DOT READLINESYNC LPAREN RPAREN
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    SEMICOLON       shift and go to state 227
    LBRACKETS       shift and go to state 75
    LKEY            shift and go to state 76
    DICT            shift and go to state 77
    CONJUNTO        shift and go to state 78
    STDIN           shift and go to state 79
    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    expresion                      shift and go to state 228
    comparacion_logica             shift and go to state 69
    list                           shift and go to state 70
    diccionario                    shift and go to state 71
    set                            shift and go to state 72
    input                          shift and go to state 73
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 203

    (146) while -> WHILE . LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> WHILE . LPAREN comparacion_logica RPAREN LKEY RKEY

    LPAREN          shift and go to state 229


state 204

    (148) do_while -> DO . LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON

    LKEY            shift and go to state 230


state 205

    (139) for -> FOR . LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> FOR . LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> FOR . LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> FOR . LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> FOR . LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    LPAREN          shift and go to state 231


state 206

    (48) asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .

    CLASS           reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    VOID            reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    VARIABLE        reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    INT_TYPE        reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    FINAL_TYPE      reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    LIST            reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    MAP             reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    SET             reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    $end            reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    STATIC          reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    RKEY            reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    PRINT           reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    IF              reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    RETURN          reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    WHILE           reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    DO              reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    FOR             reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    STRING          reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    BOOLEAN         reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    INT             reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)
    DOUBLE          reduce using rule 48 (asignar_variable -> prefijo tipo_variable VARIABLE asignador expresion SEMICOLON .)


state 207

    (35) constructor -> VARIABLE LPAREN atributo_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 232


state 208

    (36) atributo_list -> THIS . DOT VARIABLE
    (37) atributo_list -> THIS . DOT VARIABLE COMA atributo_list

    DOT             shift and go to state 233


state 209

    (50) cambiar_variable -> getVariable modificador SEMICOLON .

    VARIABLE        reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    STATIC          reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    VOID            reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    VAR_TYPE        reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    INT_TYPE        reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    STRING_TYPE     reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    BOOL_TYPE       reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    FINAL_TYPE      reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    CONST_TYPE      reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    LIST            reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    MAP             reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    SET             reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    RKEY            reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    PRINT           reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    IF              reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    RETURN          reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    WHILE           reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    DO              reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)
    FOR             reduce using rule 50 (cambiar_variable -> getVariable modificador SEMICOLON .)


state 210

    (51) cambiar_variable -> getVariable asignador expresion . SEMICOLON

    SEMICOLON       shift and go to state 234


state 211

    (40) funcion_static -> STATIC tipo_dato VARIABLE . LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC tipo_dato VARIABLE . LPAREN RPAREN LKEY cuerpo_funcion RKEY

    LPAREN          shift and go to state 235


state 212

    (121) colecciones -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN .

    VARIABLE        reduce using rule 121 (colecciones -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN .)


state 213

    (67) variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .

    DOT             reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    LPAREN          reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    PLUS            reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MINUS           reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    TIMES           reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DIVIDE          reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MODULO          reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    EQUALITY        reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    INEQUALITY      reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    GREATER_THAN    reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    LESS_THAN       reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    GREATER_EQ_THAN reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    LESS_EQ_THAN    reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    AND             reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    OR              reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    NOT             reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    SEMICOLON       reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    INCREMENT_VAR   reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DECREMENT_VAR   reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    ASSIGN          reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    PLUS_ASSIGN     reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MINUS_ASSIGN    reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    TIMES_ASSIGN    reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    DIVIDE_ASSIGN   reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    MODULO_ASSIGN   reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    COMA            reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    RBRACKETS       reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    RKEY            reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)
    RPAREN          reduce using rule 67 (variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS .)


state 214

    (108) element_list -> elemento COMA element_list .

    RBRACKETS       reduce using rule 108 (element_list -> elemento COMA element_list .)
    RKEY            reduce using rule 108 (element_list -> elemento COMA element_list .)
    RPAREN          reduce using rule 108 (element_list -> elemento COMA element_list .)


state 215

    (154) key_element_list -> key_element COMA key_element_list .

    RKEY            reduce using rule 154 (key_element_list -> key_element COMA key_element_list .)


state 216

    (152) key_element -> inmutables DOS_PUNTOS elemento .

    COMA            reduce using rule 152 (key_element -> inmutables DOS_PUNTOS elemento .)
    RKEY            reduce using rule 152 (key_element -> inmutables DOS_PUNTOS elemento .)


state 217

    (72) input -> STDIN DOT READLINESYNC LPAREN . RPAREN

    RPAREN          shift and go to state 236


state 218

    (33) invocar -> getVariable LPAREN element_list RPAREN .

    EQUALITY        reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    INEQUALITY      reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    GREATER_THAN    reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    LESS_THAN       reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    GREATER_EQ_THAN reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    LESS_EQ_THAN    reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    AND             reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    OR              reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    NOT             reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    SEMICOLON       reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)
    RPAREN          reduce using rule 33 (invocar -> getVariable LPAREN element_list RPAREN .)


state 219

    (71) parametros -> tipo_dato VARIABLE COMA parametros .

    RPAREN          reduce using rule 71 (parametros -> tipo_dato VARIABLE COMA parametros .)


state 220

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 237


state 221

    (46) asignar_variable -> tipo_dato VARIABLE . asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato VARIABLE . SEMICOLON
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    SEMICOLON       shift and go to state 46
    ASSIGN          shift and go to state 48
    PLUS_ASSIGN     shift and go to state 49
    MINUS_ASSIGN    shift and go to state 50
    TIMES_ASSIGN    shift and go to state 51
    DIVIDE_ASSIGN   shift and go to state 52
    MODULO_ASSIGN   shift and go to state 53

    asignador                      shift and go to state 45

state 222

    (39) funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .

    CLASS           reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    $end            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 39 (funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)


state 223

    (22) cuerpo_funcion -> sentencias_funcion cuerpo_funcion .

    RKEY            reduce using rule 22 (cuerpo_funcion -> sentencias_funcion cuerpo_funcion .)


state 224

    (31) invocacion -> getVariable LPAREN . element_list RPAREN SEMICOLON
    (32) invocacion -> getVariable LPAREN . RPAREN SEMICOLON
    (107) element_list -> . elemento
    (108) element_list -> . elemento COMA element_list
    (73) elemento -> . INT
    (74) elemento -> . DOUBLE
    (75) elemento -> . STRING
    (76) elemento -> . BOOLEAN
    (77) elemento -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RPAREN          shift and go to state 239
    INT             shift and go to state 119
    DOUBLE          shift and go to state 120
    STRING          shift and go to state 121
    BOOLEAN         shift and go to state 122
    VARIABLE        shift and go to state 67

    getVariable                    shift and go to state 123
    element_list                   shift and go to state 238
    elemento                       shift and go to state 118
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 225

    (68) impresion -> PRINT LPAREN . comparacion_logica RPAREN SEMICOLON
    (69) impresion -> PRINT LPAREN . RPAREN SEMICOLON
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RPAREN          shift and go to state 241
    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 240
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 226

    (160) condicional -> IF LPAREN . comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> IF LPAREN . comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> IF LPAREN . comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> IF LPAREN . comparacion_logica RPAREN LKEY RKEY bloques_else
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 242
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 227

    (65) retorno -> RETURN SEMICOLON .

    PRINT           reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    IF              reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    RETURN          reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    WHILE           reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    DO              reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    FOR             reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    VOID            reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    VARIABLE        reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    VAR_TYPE        reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    INT_TYPE        reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    STRING_TYPE     reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    BOOL_TYPE       reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    FINAL_TYPE      reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    CONST_TYPE      reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    LIST            reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    MAP             reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    SET             reduce using rule 65 (retorno -> RETURN SEMICOLON .)
    RKEY            reduce using rule 65 (retorno -> RETURN SEMICOLON .)


state 228

    (66) retorno -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 243


state 229

    (146) while -> WHILE LPAREN . comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> WHILE LPAREN . comparacion_logica RPAREN LKEY RKEY
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 244
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 230

    (148) do_while -> DO LKEY . cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 245
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 231

    (139) for -> FOR LPAREN . asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> FOR LPAREN . SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> FOR LPAREN . SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> FOR LPAREN . tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> FOR LPAREN . tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    SEMICOLON       shift and go to state 247
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    asignar_variable               shift and go to state 246
    tipo_dato                      shift and go to state 248
    prefijo                        shift and go to state 12
    colecciones                    shift and go to state 20

state 232

    (35) constructor -> VARIABLE LPAREN atributo_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 233

    (36) atributo_list -> THIS DOT . VARIABLE
    (37) atributo_list -> THIS DOT . VARIABLE COMA atributo_list

    VARIABLE        shift and go to state 250


state 234

    (51) cambiar_variable -> getVariable asignador expresion SEMICOLON .

    VARIABLE        reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    STATIC          reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    VOID            reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    INT_TYPE        reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    FINAL_TYPE      reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    LIST            reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    MAP             reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    SET             reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    RKEY            reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    PRINT           reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    IF              reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    RETURN          reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    WHILE           reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    DO              reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)
    FOR             reduce using rule 51 (cambiar_variable -> getVariable asignador expresion SEMICOLON .)


state 235

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN . parametros RPAREN LKEY cuerpo_funcion RKEY
    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN . RPAREN LKEY cuerpo_funcion RKEY
    (70) parametros -> . tipo_dato VARIABLE
    (71) parametros -> . tipo_dato VARIABLE COMA parametros
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN

    RPAREN          shift and go to state 252
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 11
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 91
    parametros                     shift and go to state 251
    prefijo                        shift and go to state 94
    colecciones                    shift and go to state 20

state 236

    (72) input -> STDIN DOT READLINESYNC LPAREN RPAREN .

    SEMICOLON       reduce using rule 72 (input -> STDIN DOT READLINESYNC LPAREN RPAREN .)


state 237

    (38) funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .

    CLASS           reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    $end            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 38 (funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)


state 238

    (31) invocacion -> getVariable LPAREN element_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 253


state 239

    (32) invocacion -> getVariable LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 254


state 240

    (68) impresion -> PRINT LPAREN comparacion_logica . RPAREN SEMICOLON

    RPAREN          shift and go to state 255


state 241

    (69) impresion -> PRINT LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 256


state 242

    (160) condicional -> IF LPAREN comparacion_logica . RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> IF LPAREN comparacion_logica . RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> IF LPAREN comparacion_logica . RPAREN LKEY RKEY
    (163) condicional -> IF LPAREN comparacion_logica . RPAREN LKEY RKEY bloques_else

    RPAREN          shift and go to state 257


state 243

    (66) retorno -> RETURN expresion SEMICOLON .

    PRINT           reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    FOR             reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    VOID            reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    VARIABLE        reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    VAR_TYPE        reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    INT_TYPE        reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    STRING_TYPE     reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    BOOL_TYPE       reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    FINAL_TYPE      reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    CONST_TYPE      reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    LIST            reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    MAP             reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    SET             reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)
    RKEY            reduce using rule 66 (retorno -> RETURN expresion SEMICOLON .)


state 244

    (146) while -> WHILE LPAREN comparacion_logica . RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> WHILE LPAREN comparacion_logica . RPAREN LKEY RKEY

    RPAREN          shift and go to state 258


state 245

    (148) do_while -> DO LKEY cuerpo_funcion . RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON

    RKEY            shift and go to state 259


state 246

    (139) for -> FOR LPAREN asignar_variable . comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 260
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 247

    (140) for -> FOR LPAREN SEMICOLON . comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> FOR LPAREN SEMICOLON . SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    SEMICOLON       shift and go to state 261
    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 262
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 248

    (142) for_each -> FOR LPAREN tipo_dato . VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> FOR LPAREN tipo_dato . VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (46) asignar_variable -> tipo_dato . VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 263


state 249

    (35) constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .

    VARIABLE        reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    STATIC          reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    VOID            reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    FINAL_TYPE      reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    LIST            reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    MAP             reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    SET             reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)
    RKEY            reduce using rule 35 (constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON .)


state 250

    (36) atributo_list -> THIS DOT VARIABLE .
    (37) atributo_list -> THIS DOT VARIABLE . COMA atributo_list

    RPAREN          reduce using rule 36 (atributo_list -> THIS DOT VARIABLE .)
    COMA            shift and go to state 264


state 251

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 265


state 252

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 266


state 253

    (31) invocacion -> getVariable LPAREN element_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 267


state 254

    (32) invocacion -> getVariable LPAREN RPAREN SEMICOLON .

    PRINT           reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    FINAL_TYPE      reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)
    RKEY            reduce using rule 32 (invocacion -> getVariable LPAREN RPAREN SEMICOLON .)


state 255

    (68) impresion -> PRINT LPAREN comparacion_logica RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 256

    (69) impresion -> PRINT LPAREN RPAREN SEMICOLON .

    PRINT           reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    FINAL_TYPE      reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)
    RKEY            reduce using rule 69 (impresion -> PRINT LPAREN RPAREN SEMICOLON .)


state 257

    (160) condicional -> IF LPAREN comparacion_logica RPAREN . LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> IF LPAREN comparacion_logica RPAREN . LKEY cuerpo_funcion RKEY
    (162) condicional -> IF LPAREN comparacion_logica RPAREN . LKEY RKEY
    (163) condicional -> IF LPAREN comparacion_logica RPAREN . LKEY RKEY bloques_else

    LKEY            shift and go to state 269


state 258

    (146) while -> WHILE LPAREN comparacion_logica RPAREN . LKEY cuerpo_funcion RKEY
    (147) while -> WHILE LPAREN comparacion_logica RPAREN . LKEY RKEY

    LKEY            shift and go to state 270


state 259

    (148) do_while -> DO LKEY cuerpo_funcion RKEY . WHILE LPAREN comparacion_logica RPAREN SEMICOLON

    WHILE           shift and go to state 271


state 260

    (139) for -> FOR LPAREN asignar_variable comparacion_logica . SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    SEMICOLON       shift and go to state 272


state 261

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON . VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 273


state 262

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica . SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    SEMICOLON       shift and go to state 274


state 263

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE . IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> FOR LPAREN tipo_dato VARIABLE . LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (46) asignar_variable -> tipo_dato VARIABLE . asignador expresion SEMICOLON
    (47) asignar_variable -> tipo_dato VARIABLE . SEMICOLON
    (54) asignador -> . ASSIGN
    (55) asignador -> . PLUS_ASSIGN
    (56) asignador -> . MINUS_ASSIGN
    (57) asignador -> . TIMES_ASSIGN
    (58) asignador -> . DIVIDE_ASSIGN
    (59) asignador -> . MODULO_ASSIGN

    IN              shift and go to state 276
    LPAREN          shift and go to state 275
    SEMICOLON       shift and go to state 46
    ASSIGN          shift and go to state 48
    PLUS_ASSIGN     shift and go to state 49
    MINUS_ASSIGN    shift and go to state 50
    TIMES_ASSIGN    shift and go to state 51
    DIVIDE_ASSIGN   shift and go to state 52
    MODULO_ASSIGN   shift and go to state 53

    asignador                      shift and go to state 45

state 264

    (37) atributo_list -> THIS DOT VARIABLE COMA . atributo_list
    (36) atributo_list -> . THIS DOT VARIABLE
    (37) atributo_list -> . THIS DOT VARIABLE COMA atributo_list

    THIS            shift and go to state 208

    atributo_list                  shift and go to state 277

state 265

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 278


state 266

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 185
    cuerpo_funcion                 shift and go to state 279
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 267

    (31) invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .

    PRINT           reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    IF              reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    DO              reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    FOR             reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    VOID            reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    FINAL_TYPE      reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    LIST            reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    MAP             reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    SET             reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)
    RKEY            reduce using rule 31 (invocacion -> getVariable LPAREN element_list RPAREN SEMICOLON .)


state 268

    (68) impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .

    PRINT           reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    IF              reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    DO              reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    FOR             reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    VOID            reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    FINAL_TYPE      reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    LIST            reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    MAP             reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    SET             reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)
    RKEY            reduce using rule 68 (impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON .)


state 269

    (160) condicional -> IF LPAREN comparacion_logica RPAREN LKEY . cuerpo_funcion RKEY bloques_else
    (161) condicional -> IF LPAREN comparacion_logica RPAREN LKEY . cuerpo_funcion RKEY
    (162) condicional -> IF LPAREN comparacion_logica RPAREN LKEY . RKEY
    (163) condicional -> IF LPAREN comparacion_logica RPAREN LKEY . RKEY bloques_else
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            shift and go to state 281
    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 280
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 270

    (146) while -> WHILE LPAREN comparacion_logica RPAREN LKEY . cuerpo_funcion RKEY
    (147) while -> WHILE LPAREN comparacion_logica RPAREN LKEY . RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    RKEY            shift and go to state 283
    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 282
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 271

    (148) do_while -> DO LKEY cuerpo_funcion RKEY WHILE . LPAREN comparacion_logica RPAREN SEMICOLON

    LPAREN          shift and go to state 284


state 272

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON . VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 285


state 273

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE . modificador RPAREN LKEY cuerpo_funcion RKEY
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR

    INCREMENT_VAR   shift and go to state 159
    DECREMENT_VAR   shift and go to state 160

    modificador                    shift and go to state 286

state 274

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON . VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 287


state 275

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN . specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (144) specific_instance -> . DOS_PUNTOS VARIABLE
    (145) specific_instance -> . DOS_PUNTOS VARIABLE COMA specific_instance

    DOS_PUNTOS      shift and go to state 289

    specific_instance              shift and go to state 288

state 276

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE IN . getVariable RPAREN LKEY cuerpo_funcion RKEY
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    VARIABLE        shift and go to state 67

    getVariable                    shift and go to state 290
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 277

    (37) atributo_list -> THIS DOT VARIABLE COMA atributo_list .

    RPAREN          reduce using rule 37 (atributo_list -> THIS DOT VARIABLE COMA atributo_list .)


state 278

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 185
    cuerpo_funcion                 shift and go to state 291
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 279

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 292


state 280

    (160) condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion . RKEY bloques_else
    (161) condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 293


state 281

    (162) condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .
    (163) condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY . bloques_else
    (164) bloques_else -> . ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (165) bloques_else -> . ELSE LKEY cuerpo_funcion RKEY

    PRINT           reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    IF              reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    RETURN          reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    WHILE           reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    DO              reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    FOR             reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    VOID            reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    VARIABLE        reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    VAR_TYPE        reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    INT_TYPE        reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    STRING_TYPE     reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    DOUBLE_TYPE     reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    BOOL_TYPE       reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    FINAL_TYPE      reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    CONST_TYPE      reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    LIST            reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    MAP             reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    SET             reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    RKEY            reduce using rule 162 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY .)
    ELSE            shift and go to state 295

    bloques_else                   shift and go to state 294

state 282

    (146) while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 296


state 283

    (147) while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .

    PRINT           reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    IF              reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    RETURN          reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    WHILE           reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    DO              reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    FOR             reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    VOID            reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    VARIABLE        reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    VAR_TYPE        reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    INT_TYPE        reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    STRING_TYPE     reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    DOUBLE_TYPE     reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    BOOL_TYPE       reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    FINAL_TYPE      reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    CONST_TYPE      reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    LIST            reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    MAP             reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    SET             reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)
    RKEY            reduce using rule 147 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY RKEY .)


state 284

    (148) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN . comparacion_logica RPAREN SEMICOLON
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 297
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 285

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE . modificador RPAREN LKEY cuerpo_funcion RKEY
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR

    INCREMENT_VAR   shift and go to state 159
    DECREMENT_VAR   shift and go to state 160

    modificador                    shift and go to state 298

state 286

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 299


state 287

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE . modificador RPAREN LKEY cuerpo_funcion RKEY
    (52) modificador -> . INCREMENT_VAR
    (53) modificador -> . DECREMENT_VAR

    INCREMENT_VAR   shift and go to state 159
    DECREMENT_VAR   shift and go to state 160

    modificador                    shift and go to state 300

state 288

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance . RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 301


state 289

    (144) specific_instance -> DOS_PUNTOS . VARIABLE
    (145) specific_instance -> DOS_PUNTOS . VARIABLE COMA specific_instance

    VARIABLE        shift and go to state 302


state 290

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 303


state 291

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 304


state 292

    (41) funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .

    VARIABLE        reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 41 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY .)


state 293

    (160) condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY . bloques_else
    (161) condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .
    (164) bloques_else -> . ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (165) bloques_else -> . ELSE LKEY cuerpo_funcion RKEY

    PRINT           reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 161 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    ELSE            shift and go to state 295

    bloques_else                   shift and go to state 305

state 294

    (163) condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .

    PRINT           reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    IF              reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    RETURN          reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    WHILE           reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    DO              reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    FOR             reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    VOID            reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    VARIABLE        reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    VAR_TYPE        reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    INT_TYPE        reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    STRING_TYPE     reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    DOUBLE_TYPE     reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    BOOL_TYPE       reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    FINAL_TYPE      reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    CONST_TYPE      reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    LIST            reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    MAP             reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    SET             reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)
    RKEY            reduce using rule 163 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else .)


state 295

    (164) bloques_else -> ELSE . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (165) bloques_else -> ELSE . LKEY cuerpo_funcion RKEY

    IF              shift and go to state 306
    LKEY            shift and go to state 307


state 296

    (146) while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 146 (while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY .)


state 297

    (148) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica . RPAREN SEMICOLON

    RPAREN          shift and go to state 308


state 298

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 309


state 299

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 310


state 300

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 311


state 301

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN . IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    IN              shift and go to state 312


state 302

    (144) specific_instance -> DOS_PUNTOS VARIABLE .
    (145) specific_instance -> DOS_PUNTOS VARIABLE . COMA specific_instance

    RPAREN          reduce using rule 144 (specific_instance -> DOS_PUNTOS VARIABLE .)
    COMA            shift and go to state 313


state 303

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 314


state 304

    (40) funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .

    VARIABLE        reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STATIC          reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 40 (funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY .)


state 305

    (160) condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .

    PRINT           reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    IF              reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RETURN          reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    WHILE           reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DO              reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    FOR             reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VOID            reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VARIABLE        reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VAR_TYPE        reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    INT_TYPE        reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    STRING_TYPE     reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DOUBLE_TYPE     reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    BOOL_TYPE       reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    FINAL_TYPE      reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    CONST_TYPE      reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    LIST            reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    MAP             reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    SET             reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RKEY            reduce using rule 160 (condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)


state 306

    (164) bloques_else -> ELSE IF . LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else

    LPAREN          shift and go to state 315


state 307

    (165) bloques_else -> ELSE LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 316
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 308

    (148) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 317


state 309

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 318


state 310

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 319
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 311

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 320


state 312

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN . VARIABLE RPAREN LKEY cuerpo_funcion RKEY

    VARIABLE        shift and go to state 321


state 313

    (145) specific_instance -> DOS_PUNTOS VARIABLE COMA . specific_instance
    (144) specific_instance -> . DOS_PUNTOS VARIABLE
    (145) specific_instance -> . DOS_PUNTOS VARIABLE COMA specific_instance

    DOS_PUNTOS      shift and go to state 289

    specific_instance              shift and go to state 322

state 314

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 185
    getVariable                    shift and go to state 199
    cuerpo_funcion                 shift and go to state 323
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    prefijo                        shift and go to state 12
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 315

    (164) bloques_else -> ELSE IF LPAREN . comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (84) comparacion_logica -> . comparacion
    (85) comparacion_logica -> . comparacion operador_logico comparacion_logica
    (82) comparacion -> . comparables comparador comparables
    (83) comparacion -> . comparables
    (78) comparables -> . operacion
    (79) comparables -> . STRING
    (80) comparables -> . BOOLEAN
    (81) comparables -> . invocar
    (98) operacion -> . operables
    (99) operacion -> . operables operador operables
    (33) invocar -> . getVariable LPAREN element_list RPAREN
    (34) invocar -> . getVariable LPAREN RPAREN
    (95) operables -> . INT
    (96) operables -> . DOUBLE
    (97) operables -> . getVariable
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    STRING          shift and go to state 82
    BOOLEAN         shift and go to state 83
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    VARIABLE        shift and go to state 67

    comparacion_logica             shift and go to state 324
    comparacion                    shift and go to state 74
    comparables                    shift and go to state 80
    operacion                      shift and go to state 81
    invocar                        shift and go to state 84
    operables                      shift and go to state 85
    getVariable                    shift and go to state 86
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 316

    (165) bloques_else -> ELSE LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 325


state 317

    (148) do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .

    PRINT           reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    IF              reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    RETURN          reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    WHILE           reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    DO              reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    FOR             reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    VOID            reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    VAR_TYPE        reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    INT_TYPE        reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    BOOL_TYPE       reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    FINAL_TYPE      reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    CONST_TYPE      reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    LIST            reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    MAP             reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    SET             reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)
    RKEY            reduce using rule 148 (do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON .)


state 318

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    asignar_variable               shift and go to state 189
    cuerpo_funcion                 shift and go to state 326
    sentencias_funcion             shift and go to state 188
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 319

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 327


state 320

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 328
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 321

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE . RPAREN LKEY cuerpo_funcion RKEY

    RPAREN          shift and go to state 329


state 322

    (145) specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance .

    RPAREN          reduce using rule 145 (specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance .)


state 323

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 330


state 324

    (164) bloques_else -> ELSE IF LPAREN comparacion_logica . RPAREN LKEY cuerpo_funcion RKEY bloques_else

    RPAREN          shift and go to state 331


state 325

    (165) bloques_else -> ELSE LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 165 (bloques_else -> ELSE LKEY cuerpo_funcion RKEY .)


state 326

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 332


state 327

    (141) for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 141 (for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)


state 328

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 333


state 329

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN . LKEY cuerpo_funcion RKEY

    LKEY            shift and go to state 334


state 330

    (142) for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 142 (for_each -> FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY .)


state 331

    (164) bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN . LKEY cuerpo_funcion RKEY bloques_else

    LKEY            shift and go to state 335


state 332

    (139) for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 139 (for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)


state 333

    (140) for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 140 (for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY .)


state 334

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY . cuerpo_funcion RKEY
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    tipo_dato                      shift and go to state 185
    cuerpo_funcion                 shift and go to state 336
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 335

    (164) bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY . cuerpo_funcion RKEY bloques_else
    (21) cuerpo_funcion -> . sentencias_funcion
    (22) cuerpo_funcion -> . sentencias_funcion cuerpo_funcion
    (11) sentencias_funcion -> . asignar_variable
    (12) sentencias_funcion -> . cambiar_variable
    (13) sentencias_funcion -> . impresion
    (14) sentencias_funcion -> . condicional
    (15) sentencias_funcion -> . retorno
    (16) sentencias_funcion -> . while
    (17) sentencias_funcion -> . do_while
    (18) sentencias_funcion -> . for
    (19) sentencias_funcion -> . for_each
    (20) sentencias_funcion -> . invocacion
    (46) asignar_variable -> . tipo_dato VARIABLE asignador expresion SEMICOLON
    (47) asignar_variable -> . tipo_dato VARIABLE SEMICOLON
    (48) asignar_variable -> . prefijo tipo_variable VARIABLE asignador expresion SEMICOLON
    (49) asignar_variable -> . prefijo tipo_variable VARIABLE SEMICOLON
    (50) cambiar_variable -> . getVariable modificador SEMICOLON
    (51) cambiar_variable -> . getVariable asignador expresion SEMICOLON
    (68) impresion -> . PRINT LPAREN comparacion_logica RPAREN SEMICOLON
    (69) impresion -> . PRINT LPAREN RPAREN SEMICOLON
    (160) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (161) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (162) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY
    (163) condicional -> . IF LPAREN comparacion_logica RPAREN LKEY RKEY bloques_else
    (65) retorno -> . RETURN SEMICOLON
    (66) retorno -> . RETURN expresion SEMICOLON
    (146) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY
    (147) while -> . WHILE LPAREN comparacion_logica RPAREN LKEY RKEY
    (148) do_while -> . DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON
    (139) for -> . FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (140) for -> . FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (141) for -> . FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY
    (142) for_each -> . FOR LPAREN tipo_dato VARIABLE IN getVariable RPAREN LKEY cuerpo_funcion RKEY
    (143) for_each -> . FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY
    (31) invocacion -> . getVariable LPAREN element_list RPAREN SEMICOLON
    (32) invocacion -> . getVariable LPAREN RPAREN SEMICOLON
    (111) tipo_dato -> . VOID
    (112) tipo_dato -> . VARIABLE
    (113) tipo_dato -> . prefijo
    (114) tipo_dato -> . VAR_TYPE
    (115) tipo_dato -> . INT_TYPE
    (116) tipo_dato -> . STRING_TYPE
    (117) tipo_dato -> . DOUBLE_TYPE
    (118) tipo_dato -> . BOOL_TYPE
    (119) tipo_dato -> . colecciones
    (109) prefijo -> . FINAL_TYPE
    (110) prefijo -> . CONST_TYPE
    (44) getVariable -> . variables
    (45) getVariable -> . variables DOT getVariable
    (120) colecciones -> . LIST LESS_THAN tipo_coleccion GREATER_THAN
    (121) colecciones -> . MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN
    (122) colecciones -> . SET LESS_THAN tipo_coleccion GREATER_THAN
    (42) variables -> . VARIABLE
    (43) variables -> . variable_indexada
    (67) variable_indexada -> . VARIABLE LBRACKETS inmutables RBRACKETS

    PRINT           shift and go to state 200
    IF              shift and go to state 201
    RETURN          shift and go to state 202
    WHILE           shift and go to state 203
    DO              shift and go to state 204
    FOR             shift and go to state 205
    VOID            shift and go to state 14
    VARIABLE        shift and go to state 186
    VAR_TYPE        shift and go to state 15
    INT_TYPE        shift and go to state 16
    STRING_TYPE     shift and go to state 17
    DOUBLE_TYPE     shift and go to state 18
    BOOL_TYPE       shift and go to state 19
    FINAL_TYPE      shift and go to state 21
    CONST_TYPE      shift and go to state 22
    LIST            shift and go to state 23
    MAP             shift and go to state 24
    SET             shift and go to state 25

    cuerpo_funcion                 shift and go to state 337
    sentencias_funcion             shift and go to state 188
    asignar_variable               shift and go to state 189
    cambiar_variable               shift and go to state 190
    impresion                      shift and go to state 191
    condicional                    shift and go to state 192
    retorno                        shift and go to state 193
    while                          shift and go to state 194
    do_while                       shift and go to state 195
    for                            shift and go to state 196
    for_each                       shift and go to state 197
    invocacion                     shift and go to state 198
    tipo_dato                      shift and go to state 185
    prefijo                        shift and go to state 12
    getVariable                    shift and go to state 199
    colecciones                    shift and go to state 20
    variables                      shift and go to state 89
    variable_indexada              shift and go to state 90

state 336

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion . RKEY

    RKEY            shift and go to state 338


state 337

    (164) bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion . RKEY bloques_else

    RKEY            shift and go to state 339


state 338

    (143) for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .

    PRINT           reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    IF              reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    RETURN          reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    WHILE           reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    DO              reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    FOR             reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    VOID            reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    VARIABLE        reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    VAR_TYPE        reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    INT_TYPE        reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    STRING_TYPE     reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    DOUBLE_TYPE     reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    BOOL_TYPE       reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    FINAL_TYPE      reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    CONST_TYPE      reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    LIST            reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    MAP             reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    SET             reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)
    RKEY            reduce using rule 143 (for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY .)


state 339

    (164) bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY . bloques_else
    (164) bloques_else -> . ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else
    (165) bloques_else -> . ELSE LKEY cuerpo_funcion RKEY

    ELSE            shift and go to state 295

    bloques_else                   shift and go to state 340

state 340

    (164) bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .

    PRINT           reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    IF              reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RETURN          reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    WHILE           reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DO              reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    FOR             reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VOID            reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VARIABLE        reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    VAR_TYPE        reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    INT_TYPE        reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    STRING_TYPE     reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    DOUBLE_TYPE     reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    BOOL_TYPE       reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    FINAL_TYPE      reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    CONST_TYPE      reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    LIST            reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    MAP             reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    SET             reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)
    RKEY            reduce using rule 164 (bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 12 resolved as shift
