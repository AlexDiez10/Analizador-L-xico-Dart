
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOLEAN BOOL_TYPE CLASS COMA COMMENT CONJUNTO CONST_TYPE DECREMENT_VAR DICT DIVIDE DIVIDE_ASSIGN DO DOC_COMMENT DOS_PUNTOS DOT DOUBLE DOUBLE_TYPE ELSE EQUALITY FINAL_TYPE FOR GREATER_EQ_THAN GREATER_THAN IF IMPORT IN INCREMENT_VAR INEQUALITY INT INT_TYPE LBRACKETS LESS_EQ_THAN LESS_THAN LIST LKEY LPAREN MAP MINUS MINUS_ASSIGN MODULO MODULO_ASSIGN NOT OR PLUS PLUS_ASSIGN PRINT RBRACKETS READLINESYNC RETURN RKEY RPAREN SEMICOLON SET STATIC STDIN STRING STRING_TYPE THIS TIMES TIMES_ASSIGN VARIABLE VAR_TYPE VOID WHILEprograma : sentencias\n                | sentencias programasentencias : asignar_variable\n                  | funcion\n                  | class\n                  | importsentencias_funcion : asignar_variable\n                        | cambiar_variable\n                        | impresion\n                        | condicional\n                        | retorno\n                        | while\n                        | do_while\n                        | for\n                        | for_each\n                        | invocacioncuerpo_funcion : sentencias_funcion\n                        | sentencias_funcion cuerpo_funcionsentencias_clase : asignar_variable\n                        | cambiar_variable\n                        | funcion\n                        | constructor\n                        | funcion_staticcuerpo_clase : sentencias_clase\n                    | sentencias_clase cuerpo_claseinvocacion : VARIABLE LPAREN element_list RPAREN SEMICOLON\n                | VARIABLE LPAREN RPAREN SEMICOLON\n                | VARIABLE DOT VARIABLE LPAREN element_list RPAREN SEMICOLON\n                | VARIABLE DOT VARIABLE LPAREN RPAREN SEMICOLONinvocar : VARIABLE LPAREN element_list RPAREN\n                | VARIABLE LPAREN RPARENconstructor : VARIABLE LPAREN atributo_list RPAREN SEMICOLONatributo_list : THIS DOT VARIABLE\n                    | THIS DOT VARIABLE COMA atributo_listfuncion : tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY\n                | tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEYfuncion_static : STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY\n                | STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEYvariables : VARIABLE\n                 | variable_indexadaasignar_variable : tipo_dato variables asignador expresion SEMICOLON\n                        | tipo_dato variables SEMICOLON\n                        | FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON\n                        | FINAL_TYPE tipo_dato variables SEMICOLON cambiar_variable : variables modificador SEMICOLON\n                        | variables asignador expresion SEMICOLONmodificador : INCREMENT_VAR\n                    | DECREMENT_VARasignador : ASSIGN\n                | PLUS_ASSIGN\n                | MINUS_ASSIGN\n                | TIMES_ASSIGN\n                | DIVIDE_ASSIGN\n                | MODULO_ASSIGNexpresion : operacion\n                    | comparacion\n                    | list\n                    | diccionario\n                    | set\n                    | input\n                    | invocar\n                    | variable_indexadaretorno : RETURN SEMICOLON\n                | RETURN expresion SEMICOLONvariable_indexada : VARIABLE LBRACKETS inmutables RBRACKETSimport : IMPORT STRING SEMICOLONimpresion : PRINT LPAREN operacion RPAREN SEMICOLON\n                 | PRINT LPAREN comparacion_logica RPAREN SEMICOLON\n                 | PRINT LPAREN RPAREN SEMICOLONinput : STDIN DOT READLINESYNC LPAREN RPARENelemento : INT\n            | DOUBLE\n            | STRING\n            | BOOLEAN\n            | get_variableget_variable : VARIABLE\n                    | VARIABLE DOT get_variablecomparacion : operacion comparador operacioncomparacion_logica : comparacion\n                          | comparacion operador_logico comparacion_logicaoperador_logico : AND\n                        | OR\n                        | NOTcomparador : EQUALITY\n                    | INEQUALITY\n                    | GREATER_THAN\n                    | LESS_THAN\n                    | GREATER_EQ_THAN\n                    | LESS_EQ_THANoperacion : elemento\n                | elemento operador operacionoperador : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MODULOlist : LBRACKETS element_list RBRACKETS\n            | LBRACKETS RBRACKETSelement_list : elemento\n                    | elemento COMA element_listtipo_dato : VOID\n             | VARIABLE \n             | FINAL_TYPE\n             | CONST_TYPE\n             | VAR_TYPE\n             | INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | BOOL_TYPE\n             | LIST LESS_THAN tipo_coleccion GREATER_THAN\n             | MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN\n             | SET LESS_THAN tipo_coleccion GREATER_THANtipo_coleccion : INT_TYPE\n             | STRING_TYPE\n             | DOUBLE_TYPE\n             | FINAL_TYPE\n             | CONST_TYPE\n             | VAR_TYPE\n             | BOOL_TYPEfor  : FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY\n            | FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY\n            | FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEYfor_each : FOR LPAREN tipo_dato VARIABLE IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY\n                | FOR LPAREN tipo_dato VARIABLE IN VARIABLE DOT VARIABLE RPAREN LKEY cuerpo_funcion RKEY\n                | FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEYspecific_instance    : DOS_PUNTOS VARIABLE\n                            | DOS_PUNTOS VARIABLE COMA specific_instancewhile : WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY\n              | WHILE LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY\n              | WHILE LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEYdo_while : DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON\n                | DO LKEY cuerpo_funcion RKEY WHILE LPAREN get_variable RPAREN SEMICOLON\n                | DO LKEY cuerpo_funcion RKEY WHILE LPAREN BOOLEAN RPAREN SEMICOLONinmutables : STRING\n             | INT\n             | DOUBLEkey_element : inmutables DOS_PUNTOS elementokey_element_list : key_element\n                        | key_element COMA key_element_listdiccionario : LKEY key_element_list RKEY\n                    | LKEY RKEY\n                    | DICT LPAREN RPARENset : LKEY element_list RKEY\n            | CONJUNTO LPAREN RPARENcondicional : IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY\n                    | IF LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | IF LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY\n                    | IF LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | IF LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEYbloques_else : ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | ELSE IF LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | ELSE IF LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEY bloques_else\n                    | ELSE LKEY cuerpo_funcion RKEYparametros : tipo_dato VARIABLE\n                  | tipo_dato VARIABLE COMA parametrosclass : CLASS VARIABLE LKEY cuerpo_clase RKEY'
    
_lr_action_items = {'FINAL_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[8,8,-3,-4,-5,-6,26,51,51,51,-42,26,8,-66,-44,8,-19,-20,-21,-22,-23,26,51,-41,8,-157,26,8,8,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,8,8,-46,26,-35,-64,-32,-27,-69,8,-26,-67,-68,8,8,8,8,8,8,8,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,8,8,8,-131,-132,-133,8,8,-122,-123,8,-154,-120,-121,8,-124,8,8,8,-125,-151,-152,-153,]),'CLASS':([0,2,3,4,5,6,34,46,86,100,137,181,197,211,],[10,10,-3,-4,-5,-6,-42,-66,-44,-41,-157,-43,-36,-35,]),'IMPORT':([0,2,3,4,5,6,34,46,86,100,137,181,197,211,],[11,11,-3,-4,-5,-6,-42,-66,-44,-41,-157,-43,-36,-35,]),'VOID':([0,2,3,4,5,6,8,34,41,45,46,86,89,90,91,92,93,94,96,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[12,12,-3,-4,-5,-6,12,-42,12,12,-66,-44,12,-19,-20,-21,-22,-23,12,-41,12,-157,12,12,12,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,12,12,-46,12,-35,-64,-32,-27,-69,12,-26,-67,-68,12,12,12,12,12,12,12,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,12,12,12,-131,-132,-133,12,12,-122,-123,12,-154,-120,-121,12,-124,12,12,12,-125,-151,-152,-153,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,26,27,33,34,35,36,37,38,39,40,41,45,46,67,68,78,85,86,87,89,90,91,92,93,94,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,129,130,133,137,140,143,148,152,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,177,181,184,187,195,196,197,199,200,201,203,204,205,207,208,209,211,223,228,229,230,231,236,237,239,241,242,243,244,253,258,259,262,263,265,266,267,268,269,270,272,274,276,278,281,288,293,296,297,298,299,300,301,302,303,313,314,315,317,318,323,325,327,330,331,332,333,334,336,341,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[9,9,-3,-4,-5,-6,24,9,-102,28,-101,-104,-105,-106,-107,-108,-109,-103,44,72,-42,-49,-50,-51,-52,-53,-54,9,87,-66,117,117,131,72,-44,-102,87,-19,-20,-21,-22,-23,9,-110,-112,-41,117,-84,-85,-86,-87,-88,-89,117,-92,-93,-94,-95,-96,117,117,162,-157,72,186,117,117,9,162,44,-102,162,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,72,-43,-45,-111,117,214,-36,117,117,-63,117,162,9,232,-46,9,-35,-64,117,117,255,-32,-27,117,-69,117,-81,-82,-83,273,162,-26,-67,-68,162,162,162,162,162,162,289,291,294,162,-29,117,311,-38,-28,-146,-148,-150,-128,-129,-130,328,-37,-145,-147,-149,162,337,162,162,-131,-132,-133,162,162,117,-122,-123,162,-154,-120,-121,162,-124,162,162,162,-125,-151,-152,-153,]),'CONST_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[13,13,-3,-4,-5,-6,13,52,52,52,-42,13,13,-66,-44,13,-19,-20,-21,-22,-23,13,52,-41,13,-157,13,13,13,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,13,13,-46,13,-35,-64,-32,-27,-69,13,-26,-67,-68,13,13,13,13,13,13,13,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,13,13,13,-131,-132,-133,13,13,-122,-123,13,-154,-120,-121,13,-124,13,13,13,-125,-151,-152,-153,]),'VAR_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[14,14,-3,-4,-5,-6,14,53,53,53,-42,14,14,-66,-44,14,-19,-20,-21,-22,-23,14,53,-41,14,-157,14,14,14,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,14,14,-46,14,-35,-64,-32,-27,-69,14,-26,-67,-68,14,14,14,14,14,14,14,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,14,14,14,-131,-132,-133,14,14,-122,-123,14,-154,-120,-121,14,-124,14,14,14,-125,-151,-152,-153,]),'INT_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[15,15,-3,-4,-5,-6,15,48,48,48,-42,15,15,-66,-44,15,-19,-20,-21,-22,-23,15,48,-41,15,-157,15,15,15,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,15,15,-46,15,-35,-64,-32,-27,-69,15,-26,-67,-68,15,15,15,15,15,15,15,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,15,15,15,-131,-132,-133,15,15,-122,-123,15,-154,-120,-121,15,-124,15,15,15,-125,-151,-152,-153,]),'STRING_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[16,16,-3,-4,-5,-6,16,49,49,49,-42,16,16,-66,-44,16,-19,-20,-21,-22,-23,16,49,-41,16,-157,16,16,16,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,16,16,-46,16,-35,-64,-32,-27,-69,16,-26,-67,-68,16,16,16,16,16,16,16,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,16,16,16,-131,-132,-133,16,16,-122,-123,16,-154,-120,-121,16,-124,16,16,16,-125,-151,-152,-153,]),'DOUBLE_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[17,17,-3,-4,-5,-6,17,50,50,50,-42,17,17,-66,-44,17,-19,-20,-21,-22,-23,17,50,-41,17,-157,17,17,17,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,17,17,-46,17,-35,-64,-32,-27,-69,17,-26,-67,-68,17,17,17,17,17,17,17,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,17,17,17,-131,-132,-133,17,17,-122,-123,17,-154,-120,-121,17,-124,17,17,17,-125,-151,-152,-153,]),'BOOL_TYPE':([0,2,3,4,5,6,8,30,31,32,34,41,45,46,86,89,90,91,92,93,94,96,98,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[18,18,-3,-4,-5,-6,18,54,54,54,-42,18,18,-66,-44,18,-19,-20,-21,-22,-23,18,54,-41,18,-157,18,18,18,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,18,18,-46,18,-35,-64,-32,-27,-69,18,-26,-67,-68,18,18,18,18,18,18,18,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,18,18,18,-131,-132,-133,18,18,-122,-123,18,-154,-120,-121,18,-124,18,18,18,-125,-151,-152,-153,]),'LIST':([0,2,3,4,5,6,8,34,41,45,46,86,89,90,91,92,93,94,96,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[19,19,-3,-4,-5,-6,19,-42,19,19,-66,-44,19,-19,-20,-21,-22,-23,19,-41,19,-157,19,19,19,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,19,19,-46,19,-35,-64,-32,-27,-69,19,-26,-67,-68,19,19,19,19,19,19,19,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,19,19,19,-131,-132,-133,19,19,-122,-123,19,-154,-120,-121,19,-124,19,19,19,-125,-151,-152,-153,]),'MAP':([0,2,3,4,5,6,8,34,41,45,46,86,89,90,91,92,93,94,96,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[20,20,-3,-4,-5,-6,20,-42,20,20,-66,-44,20,-19,-20,-21,-22,-23,20,-41,20,-157,20,20,20,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,20,20,-46,20,-35,-64,-32,-27,-69,20,-26,-67,-68,20,20,20,20,20,20,20,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,20,20,20,-131,-132,-133,20,20,-122,-123,20,-154,-120,-121,20,-124,20,20,20,-125,-151,-152,-153,]),'SET':([0,2,3,4,5,6,8,34,41,45,46,86,89,90,91,92,93,94,96,100,133,137,159,160,164,165,166,167,168,169,170,171,172,173,174,181,184,197,201,204,205,208,209,211,223,231,236,239,258,259,262,263,265,266,267,268,269,270,278,281,296,297,298,299,300,301,302,303,314,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[21,21,-3,-4,-5,-6,21,-42,21,21,-66,-44,21,-19,-20,-21,-22,-23,21,-41,21,-157,21,21,21,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-36,-63,21,21,-46,21,-35,-64,-32,-27,-69,21,-26,-67,-68,21,21,21,21,21,21,21,-29,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,21,21,21,-131,-132,-133,21,21,-122,-123,21,-154,-120,-121,21,-124,21,21,21,-125,-151,-152,-153,]),'$end':([1,2,3,4,5,6,22,34,46,86,100,137,181,197,211,],[0,-1,-3,-4,-5,-6,-2,-42,-66,-44,-41,-157,-43,-36,-35,]),'STRING':([11,33,34,35,36,37,38,39,40,42,67,68,85,86,100,101,102,103,104,105,106,107,108,109,110,111,112,113,129,140,148,151,152,177,181,195,199,200,203,228,229,237,241,242,243,244,288,341,],[29,75,-42,-49,-50,-51,-52,-53,-54,82,75,125,75,-44,-41,75,-84,-85,-86,-87,-88,-89,75,-92,-93,-94,-95,-96,75,75,75,82,75,75,-43,75,75,75,75,75,75,75,75,-81,-82,-83,75,75,]),'LESS_THAN':([19,20,21,58,66,72,73,74,75,76,77,117,146,158,215,220,221,222,225,226,305,306,350,351,],[30,31,32,105,-90,-76,-71,-72,-73,-74,-75,-76,-91,-77,105,-75,-74,105,-75,-74,-75,-74,-75,-74,]),'SEMICOLON':([23,24,25,29,43,44,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,115,117,119,134,135,139,141,142,145,146,147,149,150,153,154,157,158,177,185,192,202,205,206,210,213,216,218,229,235,238,240,252,254,255,261,264,280,319,320,321,],[34,-39,-40,46,86,-39,100,-55,-56,-57,-58,-59,-60,-61,-62,-90,-76,-71,-72,-73,-74,-75,-98,-76,-141,-65,181,184,-47,-48,-78,-91,-97,-140,-143,-142,-144,-31,-77,201,208,-30,223,229,231,-70,236,239,-79,253,259,262,263,272,274,-39,281,-80,297,331,332,333,]),'ASSIGN':([23,24,25,43,44,87,95,134,162,255,],[35,-39,-40,35,-39,-39,35,-65,-39,-39,]),'PLUS_ASSIGN':([23,24,25,43,44,87,95,134,162,255,],[36,-39,-40,36,-39,-39,36,-65,-39,-39,]),'MINUS_ASSIGN':([23,24,25,43,44,87,95,134,162,255,],[37,-39,-40,37,-39,-39,37,-65,-39,-39,]),'TIMES_ASSIGN':([23,24,25,43,44,87,95,134,162,255,],[38,-39,-40,38,-39,-39,38,-65,-39,-39,]),'DIVIDE_ASSIGN':([23,24,25,43,44,87,95,134,162,255,],[39,-39,-40,39,-39,-39,39,-65,-39,-39,]),'MODULO_ASSIGN':([23,24,25,43,44,87,95,134,162,255,],[40,-39,-40,40,-39,-39,40,-65,-39,-39,]),'LPAREN':([24,69,70,72,87,155,162,175,176,178,180,186,214,255,271,329,],[41,126,127,129,136,191,195,199,200,203,205,209,237,275,288,341,]),'LBRACKETS':([24,33,35,36,37,38,39,40,44,72,85,87,140,162,177,255,],[42,67,-49,-50,-51,-52,-53,-54,42,42,67,42,67,42,67,42,]),'INCREMENT_VAR':([25,87,95,134,162,273,289,291,],[-40,-39,141,-65,-39,141,141,141,]),'DECREMENT_VAR':([25,87,95,134,162,273,289,291,],[-40,-39,142,-65,-39,142,142,142,]),'LKEY':([28,33,35,36,37,38,39,40,80,85,132,140,177,179,234,245,246,247,248,249,250,257,308,312,316,322,324,340,346,357,358,359,],[45,68,-49,-50,-51,-52,-53,-54,133,68,160,68,68,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,]),'DICT':([33,35,36,37,38,39,40,85,140,177,],[69,-49,-50,-51,-52,-53,-54,69,69,69,]),'CONJUNTO':([33,35,36,37,38,39,40,85,140,177,],[70,-49,-50,-51,-52,-53,-54,70,70,70,]),'STDIN':([33,35,36,37,38,39,40,85,140,177,],[71,-49,-50,-51,-52,-53,-54,71,71,71,]),'INT':([33,34,35,36,37,38,39,40,42,67,68,85,86,100,101,102,103,104,105,106,107,108,109,110,111,112,113,129,140,148,151,152,177,181,195,199,200,203,228,229,237,241,242,243,244,288,341,],[73,-42,-49,-50,-51,-52,-53,-54,83,73,123,73,-44,-41,73,-84,-85,-86,-87,-88,-89,73,-92,-93,-94,-95,-96,73,73,73,83,73,73,-43,73,73,73,73,73,73,73,73,-81,-82,-83,73,73,]),'DOUBLE':([33,34,35,36,37,38,39,40,42,67,68,85,86,100,101,102,103,104,105,106,107,108,109,110,111,112,113,129,140,148,151,152,177,181,195,199,200,203,228,229,237,241,242,243,244,288,341,],[74,-42,-49,-50,-51,-52,-53,-54,84,74,124,74,-44,-41,74,-84,-85,-86,-87,-88,-89,74,-92,-93,-94,-95,-96,74,74,74,84,74,74,-43,74,74,74,74,74,74,74,74,-81,-82,-83,74,74,]),'BOOLEAN':([33,34,35,36,37,38,39,40,67,68,85,86,100,101,102,103,104,105,106,107,108,109,110,111,112,113,129,140,148,152,177,181,195,199,200,203,228,229,237,241,242,243,244,288,341,],[76,-42,-49,-50,-51,-52,-53,-54,76,76,76,-44,-41,76,-84,-85,-86,-87,-88,-89,76,-92,-93,-94,-95,-96,76,76,76,76,76,-43,76,76,221,226,76,76,76,76,-81,-82,-83,306,351,]),'STATIC':([34,45,86,89,90,91,92,93,94,100,181,184,197,208,211,231,296,314,],[-42,96,-44,96,-19,-20,-21,-22,-23,-41,-43,-45,-36,-46,-35,-32,-38,-37,]),'RKEY':([34,68,73,74,75,76,77,86,88,89,90,91,92,93,94,100,116,117,118,120,121,123,124,125,138,158,163,164,165,166,167,168,169,170,171,172,173,174,181,184,188,189,190,194,197,198,201,208,211,223,227,231,236,239,259,262,263,279,281,282,283,284,285,286,287,295,296,297,298,299,300,301,302,303,314,315,317,318,331,332,333,335,339,342,343,344,345,347,352,353,354,356,360,361,365,366,367,368,372,373,374,],[-42,119,-71,-72,-73,-74,-75,-44,137,-24,-19,-20,-21,-22,-23,-41,-99,-76,149,150,-138,-71,-72,-73,-25,-77,197,-17,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-100,-139,-137,211,-36,-18,-63,-46,-35,-64,251,-32,-27,-69,-26,-67,-68,296,-29,298,299,300,301,302,303,314,-38,-28,-146,-148,-150,-128,-129,-130,-37,-145,-147,-149,-131,-132,-133,344,347,352,353,-122,354,-123,-154,-120,-121,361,365,-124,-125,369,370,371,-151,-152,-153,]),'PRINT':([34,86,100,133,160,164,165,166,167,168,169,170,171,172,173,174,181,184,201,204,208,223,236,239,258,259,262,263,265,266,267,268,269,270,278,281,297,298,299,300,301,302,303,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[-42,-44,-41,175,175,175,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-63,175,-46,-64,-27,-69,175,-26,-67,-68,175,175,175,175,175,175,175,-29,-28,-146,-148,-150,-128,-129,-130,-145,-147,-149,175,175,175,-131,-132,-133,175,175,-122,-123,175,-154,-120,-121,175,-124,175,175,175,-125,-151,-152,-153,]),'IF':([34,86,100,133,160,164,165,166,167,168,169,170,171,172,173,174,181,184,201,204,208,223,236,239,258,259,262,263,265,266,267,268,269,270,278,281,297,298,299,300,301,302,303,315,316,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[-42,-44,-41,176,176,176,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-63,176,-46,-64,-27,-69,176,-26,-67,-68,176,176,176,176,176,176,176,-29,-28,-146,-148,-150,-128,-129,-130,-145,329,-147,-149,176,176,176,-131,-132,-133,176,176,-122,-123,176,-154,-120,-121,176,-124,176,176,176,-125,-151,-152,-153,]),'RETURN':([34,86,100,133,160,164,165,166,167,168,169,170,171,172,173,174,181,184,201,204,208,223,236,239,258,259,262,263,265,266,267,268,269,270,278,281,297,298,299,300,301,302,303,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[-42,-44,-41,177,177,177,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-63,177,-46,-64,-27,-69,177,-26,-67,-68,177,177,177,177,177,177,177,-29,-28,-146,-148,-150,-128,-129,-130,-145,-147,-149,177,177,177,-131,-132,-133,177,177,-122,-123,177,-154,-120,-121,177,-124,177,177,177,-125,-151,-152,-153,]),'WHILE':([34,86,100,133,160,164,165,166,167,168,169,170,171,172,173,174,181,184,201,204,208,223,236,239,251,258,259,262,263,265,266,267,268,269,270,278,281,297,298,299,300,301,302,303,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[-42,-44,-41,178,178,178,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-63,178,-46,-64,-27,-69,271,178,-26,-67,-68,178,178,178,178,178,178,178,-29,-28,-146,-148,-150,-128,-129,-130,-145,-147,-149,178,178,178,-131,-132,-133,178,178,-122,-123,178,-154,-120,-121,178,-124,178,178,178,-125,-151,-152,-153,]),'DO':([34,86,100,133,160,164,165,166,167,168,169,170,171,172,173,174,181,184,201,204,208,223,236,239,258,259,262,263,265,266,267,268,269,270,278,281,297,298,299,300,301,302,303,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[-42,-44,-41,179,179,179,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-63,179,-46,-64,-27,-69,179,-26,-67,-68,179,179,179,179,179,179,179,-29,-28,-146,-148,-150,-128,-129,-130,-145,-147,-149,179,179,179,-131,-132,-133,179,179,-122,-123,179,-154,-120,-121,179,-124,179,179,179,-125,-151,-152,-153,]),'FOR':([34,86,100,133,160,164,165,166,167,168,169,170,171,172,173,174,181,184,201,204,208,223,236,239,258,259,262,263,265,266,267,268,269,270,278,281,297,298,299,300,301,302,303,315,317,318,323,327,330,331,332,333,334,336,344,347,348,352,353,354,355,361,362,363,364,365,372,373,374,],[-42,-44,-41,180,180,180,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-43,-45,-63,180,-46,-64,-27,-69,180,-26,-67,-68,180,180,180,180,180,180,180,-29,-28,-146,-148,-150,-128,-129,-130,-145,-147,-149,180,180,180,-131,-132,-133,180,180,-122,-123,180,-154,-120,-121,180,-124,180,180,180,-125,-151,-152,-153,]),'RPAREN':([41,66,73,74,75,76,77,79,116,117,126,127,129,131,141,142,145,146,156,158,182,188,191,193,195,199,209,212,215,217,218,219,220,221,224,225,226,232,233,237,260,264,277,290,292,294,304,305,306,307,309,311,328,337,338,349,350,351,],[80,-90,-71,-72,-73,-74,-75,132,-99,-76,153,154,157,-155,-47,-48,-78,-91,192,-77,206,-100,210,-156,213,216,234,235,238,240,-79,245,246,247,248,249,250,-33,257,261,280,-80,-34,308,310,312,319,320,321,322,324,-126,340,346,-127,357,358,359,]),'GREATER_THAN':([47,48,49,50,51,52,53,54,56,58,66,72,73,74,75,76,77,117,144,146,158,215,220,221,222,225,226,305,306,350,351,],[97,-113,-114,-115,-116,-117,-118,-119,99,104,-90,-76,-71,-72,-73,-74,-75,-76,187,-91,-77,104,-75,-74,104,-75,-74,-75,-74,-75,-74,]),'COMA':([48,49,50,51,52,53,54,55,73,74,75,76,77,116,117,121,123,124,125,131,158,190,232,311,],[-113,-114,-115,-116,-117,-118,-119,98,-71,-72,-73,-74,-75,148,-76,151,-71,-72,-73,159,-77,-137,256,326,]),'EQUALITY':([58,66,72,73,74,75,76,77,117,146,158,215,220,221,222,225,226,305,306,350,351,],[102,-90,-76,-71,-72,-73,-74,-75,-76,-91,-77,102,-75,-74,102,-75,-74,-75,-74,-75,-74,]),'INEQUALITY':([58,66,72,73,74,75,76,77,117,146,158,215,220,221,222,225,226,305,306,350,351,],[103,-90,-76,-71,-72,-73,-74,-75,-76,-91,-77,103,-75,-74,103,-75,-74,-75,-74,-75,-74,]),'GREATER_EQ_THAN':([58,66,72,73,74,75,76,77,117,146,158,215,220,221,222,225,226,305,306,350,351,],[106,-90,-76,-71,-72,-73,-74,-75,-76,-91,-77,106,-75,-74,106,-75,-74,-75,-74,-75,-74,]),'LESS_EQ_THAN':([58,66,72,73,74,75,76,77,117,146,158,215,220,221,222,225,226,305,306,350,351,],[107,-90,-76,-71,-72,-73,-74,-75,-76,-91,-77,107,-75,-74,107,-75,-74,-75,-74,-75,-74,]),'AND':([66,73,74,75,76,77,117,145,146,158,218,],[-90,-71,-72,-73,-74,-75,-76,-78,-91,-77,242,]),'OR':([66,73,74,75,76,77,117,145,146,158,218,],[-90,-71,-72,-73,-74,-75,-76,-78,-91,-77,243,]),'NOT':([66,73,74,75,76,77,117,145,146,158,218,],[-90,-71,-72,-73,-74,-75,-76,-78,-91,-77,244,]),'PLUS':([66,72,73,74,75,76,77,117,158,220,221,225,226,305,306,350,351,],[109,-76,-71,-72,-73,-74,-75,-76,-77,-75,-74,-75,-74,-75,-74,-75,-74,]),'MINUS':([66,72,73,74,75,76,77,117,158,220,221,225,226,305,306,350,351,],[110,-76,-71,-72,-73,-74,-75,-76,-77,-75,-74,-75,-74,-75,-74,-75,-74,]),'TIMES':([66,72,73,74,75,76,77,117,158,220,221,225,226,305,306,350,351,],[111,-76,-71,-72,-73,-74,-75,-76,-77,-75,-74,-75,-74,-75,-74,-75,-74,]),'DIVIDE':([66,72,73,74,75,76,77,117,158,220,221,225,226,305,306,350,351,],[112,-76,-71,-72,-73,-74,-75,-76,-77,-75,-74,-75,-74,-75,-74,-75,-74,]),'MODULO':([66,72,73,74,75,76,77,117,158,220,221,225,226,305,306,350,351,],[113,-76,-71,-72,-73,-74,-75,-76,-77,-75,-74,-75,-74,-75,-74,-75,-74,]),'RBRACKETS':([67,73,74,75,76,77,81,82,83,84,114,116,117,158,188,],[115,-71,-72,-73,-74,-75,134,-134,-135,-136,147,-99,-76,-77,-100,]),'DOT':([71,72,117,162,183,294,],[128,130,130,196,207,313,]),'DOS_PUNTOS':([82,83,84,122,123,124,125,275,326,],[-134,-135,-136,152,-135,-136,-134,293,293,]),'READLINESYNC':([128,],[155,]),'THIS':([136,256,],[183,183,]),'IN':([255,310,],[276,325,]),'ELSE':([298,299,300,369,370,371,],[316,316,316,316,316,316,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,22,]),'sentencias':([0,2,],[2,2,]),'asignar_variable':([0,2,45,89,133,160,164,204,205,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[3,3,90,90,165,165,165,165,228,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'funcion':([0,2,45,89,],[4,4,92,92,]),'class':([0,2,],[5,5,]),'import':([0,2,],[6,6,]),'tipo_dato':([0,2,8,41,45,89,96,133,159,160,164,204,205,209,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[7,7,27,78,7,7,143,161,78,161,161,161,230,78,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'variables':([7,27,45,89,133,160,161,164,204,230,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[23,43,95,95,95,95,23,95,95,23,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'variable_indexada':([7,27,33,45,85,89,133,140,160,161,164,177,204,230,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[25,25,65,25,65,25,25,65,25,25,25,65,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignador':([23,43,95,],[33,85,140,]),'tipo_coleccion':([30,31,32,98,],[47,55,56,144,]),'expresion':([33,85,140,177,],[57,135,185,202,]),'operacion':([33,85,101,108,140,177,199,200,203,228,229,241,288,341,],[58,58,145,146,58,58,215,222,222,222,222,222,222,222,]),'comparacion':([33,85,140,177,199,200,203,228,229,241,288,341,],[59,59,59,59,218,218,218,218,218,218,218,218,]),'list':([33,85,140,177,],[60,60,60,60,]),'diccionario':([33,85,140,177,],[61,61,61,61,]),'set':([33,85,140,177,],[62,62,62,62,]),'input':([33,85,140,177,],[63,63,63,63,]),'invocar':([33,85,140,177,],[64,64,64,64,]),'elemento':([33,67,68,85,101,108,129,140,148,152,177,195,199,200,203,228,229,237,241,288,341,],[66,116,116,66,66,66,116,66,116,190,66,116,66,66,66,66,66,116,66,66,66,]),'get_variable':([33,67,68,85,101,108,129,130,140,148,152,177,195,199,200,203,228,229,237,241,288,341,],[77,77,77,77,77,77,77,158,77,77,77,77,77,77,220,225,77,77,77,77,305,350,]),'parametros':([41,159,209,],[79,193,233,]),'inmutables':([42,68,151,],[81,122,122,]),'cuerpo_clase':([45,89,],[88,138,]),'sentencias_clase':([45,89,],[89,89,]),'cambiar_variable':([45,89,133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[91,91,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'constructor':([45,89,],[93,93,]),'funcion_static':([45,89,],[94,94,]),'comparador':([58,215,222,],[101,101,101,]),'operador':([66,],[108,]),'element_list':([67,68,129,148,195,237,],[114,120,156,188,212,260,]),'key_element_list':([68,151,],[118,189,]),'key_element':([68,151,],[121,121,]),'modificador':([95,273,289,291,],[139,290,307,309,]),'cuerpo_funcion':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[163,194,198,227,279,282,283,284,285,286,287,295,335,339,342,343,345,356,360,366,367,368,]),'sentencias_funcion':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'impresion':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'condicional':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'retorno':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'while':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'do_while':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'for':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'for_each':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'invocacion':([133,160,164,204,258,265,266,267,268,269,270,278,323,327,330,334,336,348,355,362,363,364,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'atributo_list':([136,256,],[182,277,]),'comparacion_logica':([199,200,203,228,229,241,288,341,],[217,219,224,252,254,264,304,349,]),'operador_logico':([218,],[241,]),'specific_instance':([275,326,],[292,338,]),'bloques_else':([298,299,300,369,370,371,],[315,317,318,372,373,374,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','analizador_sintactico.py',5),
  ('programa -> sentencias programa','programa',2,'p_programa','analizador_sintactico.py',6),
  ('sentencias -> asignar_variable','sentencias',1,'p_sentencias','analizador_sintactico.py',10),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','analizador_sintactico.py',11),
  ('sentencias -> class','sentencias',1,'p_sentencias','analizador_sintactico.py',12),
  ('sentencias -> import','sentencias',1,'p_sentencias','analizador_sintactico.py',13),
  ('sentencias_funcion -> asignar_variable','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',17),
  ('sentencias_funcion -> cambiar_variable','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',18),
  ('sentencias_funcion -> impresion','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',19),
  ('sentencias_funcion -> condicional','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',20),
  ('sentencias_funcion -> retorno','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',21),
  ('sentencias_funcion -> while','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',22),
  ('sentencias_funcion -> do_while','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',23),
  ('sentencias_funcion -> for','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',24),
  ('sentencias_funcion -> for_each','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',25),
  ('sentencias_funcion -> invocacion','sentencias_funcion',1,'p_sentencias_funcion','analizador_sintactico.py',26),
  ('cuerpo_funcion -> sentencias_funcion','cuerpo_funcion',1,'p_cuerpo_funcion','analizador_sintactico.py',29),
  ('cuerpo_funcion -> sentencias_funcion cuerpo_funcion','cuerpo_funcion',2,'p_cuerpo_funcion','analizador_sintactico.py',30),
  ('sentencias_clase -> asignar_variable','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',33),
  ('sentencias_clase -> cambiar_variable','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',34),
  ('sentencias_clase -> funcion','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',35),
  ('sentencias_clase -> constructor','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',36),
  ('sentencias_clase -> funcion_static','sentencias_clase',1,'p_sentencias_clase','analizador_sintactico.py',37),
  ('cuerpo_clase -> sentencias_clase','cuerpo_clase',1,'p_cuerpo_clase','analizador_sintactico.py',40),
  ('cuerpo_clase -> sentencias_clase cuerpo_clase','cuerpo_clase',2,'p_cuerpo_clase','analizador_sintactico.py',41),
  ('invocacion -> VARIABLE LPAREN element_list RPAREN SEMICOLON','invocacion',5,'p_invocacion','analizador_sintactico.py',44),
  ('invocacion -> VARIABLE LPAREN RPAREN SEMICOLON','invocacion',4,'p_invocacion','analizador_sintactico.py',45),
  ('invocacion -> VARIABLE DOT VARIABLE LPAREN element_list RPAREN SEMICOLON','invocacion',7,'p_invocacion','analizador_sintactico.py',46),
  ('invocacion -> VARIABLE DOT VARIABLE LPAREN RPAREN SEMICOLON','invocacion',6,'p_invocacion','analizador_sintactico.py',47),
  ('invocar -> VARIABLE LPAREN element_list RPAREN','invocar',4,'p_invocar','analizador_sintactico.py',51),
  ('invocar -> VARIABLE LPAREN RPAREN','invocar',3,'p_invocar','analizador_sintactico.py',52),
  ('constructor -> VARIABLE LPAREN atributo_list RPAREN SEMICOLON','constructor',5,'p_constructor','analizador_sintactico.py',55),
  ('atributo_list -> THIS DOT VARIABLE','atributo_list',3,'p_atributo_list','analizador_sintactico.py',58),
  ('atributo_list -> THIS DOT VARIABLE COMA atributo_list','atributo_list',5,'p_atributo_list','analizador_sintactico.py',59),
  ('funcion -> tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY','funcion',8,'p_funcion','analizador_sintactico.py',62),
  ('funcion -> tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY','funcion',7,'p_funcion','analizador_sintactico.py',63),
  ('funcion_static -> STATIC tipo_dato VARIABLE LPAREN parametros RPAREN LKEY cuerpo_funcion RKEY','funcion_static',9,'p_funcion_static','analizador_sintactico.py',67),
  ('funcion_static -> STATIC tipo_dato VARIABLE LPAREN RPAREN LKEY cuerpo_funcion RKEY','funcion_static',8,'p_funcion_static','analizador_sintactico.py',68),
  ('variables -> VARIABLE','variables',1,'p_variables','analizador_sintactico.py',72),
  ('variables -> variable_indexada','variables',1,'p_variables','analizador_sintactico.py',73),
  ('asignar_variable -> tipo_dato variables asignador expresion SEMICOLON','asignar_variable',5,'p_asignar_variable','analizador_sintactico.py',76),
  ('asignar_variable -> tipo_dato variables SEMICOLON','asignar_variable',3,'p_asignar_variable','analizador_sintactico.py',77),
  ('asignar_variable -> FINAL_TYPE tipo_dato variables asignador expresion SEMICOLON','asignar_variable',6,'p_asignar_variable','analizador_sintactico.py',78),
  ('asignar_variable -> FINAL_TYPE tipo_dato variables SEMICOLON','asignar_variable',4,'p_asignar_variable','analizador_sintactico.py',79),
  ('cambiar_variable -> variables modificador SEMICOLON','cambiar_variable',3,'p_cambiar_variable','analizador_sintactico.py',83),
  ('cambiar_variable -> variables asignador expresion SEMICOLON','cambiar_variable',4,'p_cambiar_variable','analizador_sintactico.py',84),
  ('modificador -> INCREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',88),
  ('modificador -> DECREMENT_VAR','modificador',1,'p_modificador','analizador_sintactico.py',89),
  ('asignador -> ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',92),
  ('asignador -> PLUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',93),
  ('asignador -> MINUS_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',94),
  ('asignador -> TIMES_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',95),
  ('asignador -> DIVIDE_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',96),
  ('asignador -> MODULO_ASSIGN','asignador',1,'p_asignador','analizador_sintactico.py',97),
  ('expresion -> operacion','expresion',1,'p_expresion','analizador_sintactico.py',100),
  ('expresion -> comparacion','expresion',1,'p_expresion','analizador_sintactico.py',101),
  ('expresion -> list','expresion',1,'p_expresion','analizador_sintactico.py',102),
  ('expresion -> diccionario','expresion',1,'p_expresion','analizador_sintactico.py',103),
  ('expresion -> set','expresion',1,'p_expresion','analizador_sintactico.py',104),
  ('expresion -> input','expresion',1,'p_expresion','analizador_sintactico.py',105),
  ('expresion -> invocar','expresion',1,'p_expresion','analizador_sintactico.py',106),
  ('expresion -> variable_indexada','expresion',1,'p_expresion','analizador_sintactico.py',107),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','analizador_sintactico.py',110),
  ('retorno -> RETURN expresion SEMICOLON','retorno',3,'p_retorno','analizador_sintactico.py',111),
  ('variable_indexada -> VARIABLE LBRACKETS inmutables RBRACKETS','variable_indexada',4,'p_variable_indexada','analizador_sintactico.py',115),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizador_sintactico.py',119),
  ('impresion -> PRINT LPAREN operacion RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',123),
  ('impresion -> PRINT LPAREN comparacion_logica RPAREN SEMICOLON','impresion',5,'p_impresion','analizador_sintactico.py',124),
  ('impresion -> PRINT LPAREN RPAREN SEMICOLON','impresion',4,'p_impresion','analizador_sintactico.py',125),
  ('input -> STDIN DOT READLINESYNC LPAREN RPAREN','input',5,'p_input','analizador_sintactico.py',129),
  ('elemento -> INT','elemento',1,'p_elemento','analizador_sintactico.py',133),
  ('elemento -> DOUBLE','elemento',1,'p_elemento','analizador_sintactico.py',134),
  ('elemento -> STRING','elemento',1,'p_elemento','analizador_sintactico.py',135),
  ('elemento -> BOOLEAN','elemento',1,'p_elemento','analizador_sintactico.py',136),
  ('elemento -> get_variable','elemento',1,'p_elemento','analizador_sintactico.py',137),
  ('get_variable -> VARIABLE','get_variable',1,'p_get_variable','analizador_sintactico.py',140),
  ('get_variable -> VARIABLE DOT get_variable','get_variable',3,'p_get_variable','analizador_sintactico.py',141),
  ('comparacion -> operacion comparador operacion','comparacion',3,'p_comparacion','analizador_sintactico.py',144),
  ('comparacion_logica -> comparacion','comparacion_logica',1,'p_comparacion_logica','analizador_sintactico.py',147),
  ('comparacion_logica -> comparacion operador_logico comparacion_logica','comparacion_logica',3,'p_comparacion_logica','analizador_sintactico.py',148),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','analizador_sintactico.py',151),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','analizador_sintactico.py',152),
  ('operador_logico -> NOT','operador_logico',1,'p_operador_logico','analizador_sintactico.py',153),
  ('comparador -> EQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',156),
  ('comparador -> INEQUALITY','comparador',1,'p_comparador','analizador_sintactico.py',157),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','analizador_sintactico.py',158),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','analizador_sintactico.py',159),
  ('comparador -> GREATER_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',160),
  ('comparador -> LESS_EQ_THAN','comparador',1,'p_comparador','analizador_sintactico.py',161),
  ('operacion -> elemento','operacion',1,'p_operacion','analizador_sintactico.py',164),
  ('operacion -> elemento operador operacion','operacion',3,'p_operacion','analizador_sintactico.py',165),
  ('operador -> PLUS','operador',1,'p_operador','analizador_sintactico.py',168),
  ('operador -> MINUS','operador',1,'p_operador','analizador_sintactico.py',169),
  ('operador -> TIMES','operador',1,'p_operador','analizador_sintactico.py',170),
  ('operador -> DIVIDE','operador',1,'p_operador','analizador_sintactico.py',171),
  ('operador -> MODULO','operador',1,'p_operador','analizador_sintactico.py',172),
  ('list -> LBRACKETS element_list RBRACKETS','list',3,'p_list','analizador_sintactico.py',175),
  ('list -> LBRACKETS RBRACKETS','list',2,'p_list','analizador_sintactico.py',176),
  ('element_list -> elemento','element_list',1,'p_element_list','analizador_sintactico.py',180),
  ('element_list -> elemento COMA element_list','element_list',3,'p_element_list','analizador_sintactico.py',181),
  ('tipo_dato -> VOID','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',184),
  ('tipo_dato -> VARIABLE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',185),
  ('tipo_dato -> FINAL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',186),
  ('tipo_dato -> CONST_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',187),
  ('tipo_dato -> VAR_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',188),
  ('tipo_dato -> INT_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',189),
  ('tipo_dato -> STRING_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',190),
  ('tipo_dato -> DOUBLE_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',191),
  ('tipo_dato -> BOOL_TYPE','tipo_dato',1,'p_tipo_dato','analizador_sintactico.py',192),
  ('tipo_dato -> LIST LESS_THAN tipo_coleccion GREATER_THAN','tipo_dato',4,'p_tipo_dato','analizador_sintactico.py',193),
  ('tipo_dato -> MAP LESS_THAN tipo_coleccion COMA tipo_coleccion GREATER_THAN','tipo_dato',6,'p_tipo_dato','analizador_sintactico.py',194),
  ('tipo_dato -> SET LESS_THAN tipo_coleccion GREATER_THAN','tipo_dato',4,'p_tipo_dato','analizador_sintactico.py',195),
  ('tipo_coleccion -> INT_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',198),
  ('tipo_coleccion -> STRING_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',199),
  ('tipo_coleccion -> DOUBLE_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',200),
  ('tipo_coleccion -> FINAL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',201),
  ('tipo_coleccion -> CONST_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',202),
  ('tipo_coleccion -> VAR_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',203),
  ('tipo_coleccion -> BOOL_TYPE','tipo_coleccion',1,'p_tipo_coleccion','analizador_sintactico.py',204),
  ('for -> FOR LPAREN asignar_variable comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',11,'p_for','analizador_sintactico.py',207),
  ('for -> FOR LPAREN SEMICOLON comparacion_logica SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',11,'p_for','analizador_sintactico.py',208),
  ('for -> FOR LPAREN SEMICOLON SEMICOLON VARIABLE modificador RPAREN LKEY cuerpo_funcion RKEY','for',10,'p_for','analizador_sintactico.py',209),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY','for_each',10,'p_for_each','analizador_sintactico.py',213),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE IN VARIABLE DOT VARIABLE RPAREN LKEY cuerpo_funcion RKEY','for_each',12,'p_for_each','analizador_sintactico.py',214),
  ('for_each -> FOR LPAREN tipo_dato VARIABLE LPAREN specific_instance RPAREN IN VARIABLE RPAREN LKEY cuerpo_funcion RKEY','for_each',13,'p_for_each','analizador_sintactico.py',215),
  ('specific_instance -> DOS_PUNTOS VARIABLE','specific_instance',2,'p_specific_instance','analizador_sintactico.py',219),
  ('specific_instance -> DOS_PUNTOS VARIABLE COMA specific_instance','specific_instance',4,'p_specific_instance','analizador_sintactico.py',220),
  ('while -> WHILE LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY','while',7,'p_while','analizador_sintactico.py',223),
  ('while -> WHILE LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY','while',7,'p_while','analizador_sintactico.py',224),
  ('while -> WHILE LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEY','while',7,'p_while','analizador_sintactico.py',225),
  ('do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN comparacion_logica RPAREN SEMICOLON','do_while',9,'p_do_while','analizador_sintactico.py',229),
  ('do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN get_variable RPAREN SEMICOLON','do_while',9,'p_do_while','analizador_sintactico.py',230),
  ('do_while -> DO LKEY cuerpo_funcion RKEY WHILE LPAREN BOOLEAN RPAREN SEMICOLON','do_while',9,'p_do_while','analizador_sintactico.py',231),
  ('inmutables -> STRING','inmutables',1,'p_inmutables','analizador_sintactico.py',235),
  ('inmutables -> INT','inmutables',1,'p_inmutables','analizador_sintactico.py',236),
  ('inmutables -> DOUBLE','inmutables',1,'p_inmutables','analizador_sintactico.py',237),
  ('key_element -> inmutables DOS_PUNTOS elemento','key_element',3,'p_key_element','analizador_sintactico.py',240),
  ('key_element_list -> key_element','key_element_list',1,'p_key_element_list','analizador_sintactico.py',243),
  ('key_element_list -> key_element COMA key_element_list','key_element_list',3,'p_key_element_list','analizador_sintactico.py',244),
  ('diccionario -> LKEY key_element_list RKEY','diccionario',3,'p_diccionario','analizador_sintactico.py',247),
  ('diccionario -> LKEY RKEY','diccionario',2,'p_diccionario','analizador_sintactico.py',248),
  ('diccionario -> DICT LPAREN RPAREN','diccionario',3,'p_diccionario','analizador_sintactico.py',249),
  ('set -> LKEY element_list RKEY','set',3,'p_set','analizador_sintactico.py',253),
  ('set -> CONJUNTO LPAREN RPAREN','set',3,'p_set','analizador_sintactico.py',254),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else','condicional',8,'p_condicional','analizador_sintactico.py',258),
  ('condicional -> IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY','condicional',7,'p_condicional','analizador_sintactico.py',259),
  ('condicional -> IF LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY bloques_else','condicional',8,'p_condicional','analizador_sintactico.py',260),
  ('condicional -> IF LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY','condicional',7,'p_condicional','analizador_sintactico.py',261),
  ('condicional -> IF LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEY bloques_else','condicional',8,'p_condicional','analizador_sintactico.py',262),
  ('condicional -> IF LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEY','condicional',7,'p_condicional','analizador_sintactico.py',263),
  ('bloques_else -> ELSE IF LPAREN comparacion_logica RPAREN LKEY cuerpo_funcion RKEY bloques_else','bloques_else',9,'p_bloques_else','analizador_sintactico.py',267),
  ('bloques_else -> ELSE IF LPAREN get_variable RPAREN LKEY cuerpo_funcion RKEY bloques_else','bloques_else',9,'p_bloques_else','analizador_sintactico.py',268),
  ('bloques_else -> ELSE IF LPAREN BOOLEAN RPAREN LKEY cuerpo_funcion RKEY bloques_else','bloques_else',9,'p_bloques_else','analizador_sintactico.py',269),
  ('bloques_else -> ELSE LKEY cuerpo_funcion RKEY','bloques_else',4,'p_bloques_else','analizador_sintactico.py',270),
  ('parametros -> tipo_dato VARIABLE','parametros',2,'p_parametros','analizador_sintactico.py',273),
  ('parametros -> tipo_dato VARIABLE COMA parametros','parametros',4,'p_parametros','analizador_sintactico.py',274),
  ('class -> CLASS VARIABLE LKEY cuerpo_clase RKEY','class',5,'p_class','analizador_sintactico.py',277),
]
